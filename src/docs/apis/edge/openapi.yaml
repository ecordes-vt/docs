components:
  headers:
    AiwareVersion:
      schema:
        description: This is the aiWARE Version of the controller
        type: string
    CorrelationId:
      schema:
        description: request CorrelationId header or a new one if not provided in
          the request
        type: string
    RetryAfter:
      schema:
        description: If specified, please retry the request no earlier than the time
          specified in Retry-After
        type: string
  parameters:
    ApplicationID:
      description: ID of Application
      in: path
      name: ApplicationID
      required: true
      schema:
        format: uuid
        type: string
    ApplicationStatus_Query_Optional:
      description: status
      in: query
      name: ApplicationStatus_Query_Optional
      schema:
        $ref: '#/components/schemas/ApplicationStatusEnum'
    ApplicationType_Query_Optional:
      description: type
      in: query
      name: ApplicationType_Query_Optional
      schema:
        $ref: '#/components/schemas/ApplicationTypeEnum'
    BuildID:
      description: BuildID of node-red container request
      in: path
      name: BuildID
      required: true
      schema:
        type: string
    BuildID_Path_Required:
      description: ID of Build
      in: path
      name: BuildID
      required: true
      schema:
        format: uuid
        type: string
    BuildState_Query_Optional:
      description: Filter builds by the build state
      in: query
      name: BuildState
      schema:
        type: string
    ChartType:
      description: It will help API to kmow the response should return
      in: query
      name: chartType
      schema:
        $ref: '#/components/schemas/ChartTypeEnum'
    ConfigKey:
      description: Config Key
      in: path
      name: ConfigKey
      required: true
      schema:
        type: string
    ConfigKey_Optional:
      description: Config Key
      in: query
      name: configKey
      schema:
        type: string
    ConfigSection:
      description: Config Section Entry
      in: path
      name: ConfigSection
      required: true
      schema:
        type: string
    ConfigSection_Optional:
      description: Config Section Entry
      in: query
      name: configSection
      schema:
        $ref: '#/components/schemas/ConfigSectionEnum'
    ContainerID:
      description: ContainerID of node-red container
      in: path
      name: ContainerID
      required: true
      schema:
        type: string
    CoreID:
      description: ID of Core
      in: path
      name: CoreID
      required: true
      schema:
        format: uuid
        type: string
    CorrelationID:
      description: Correlation Id that can be passed, traced in the server and will
        be returned in the response if present in the request
      in: header
      name: X-Correlation-Id
      schema:
        type: string
    CreatedAfter_Query_Optional:
      description: Filter items where created date is after this date
      in: query
      name: CreatedAfter
      schema:
        format: int64
        type: integer
    CreatedBefore_Query_Optional:
      description: Filter items where created date is before this date
      in: query
      name: CreatedBefore
      schema:
        format: int64
        type: integer
    Direction_Query_Optional:
      description: the sort order.  ASC or DESC.
      in: query
      name: direction
      schema:
        default: DESC
        type: string
    Drain_Query_Optional:
      description: Filter by drain
      in: query
      name: drain
      schema:
        type: boolean
    EndCreatedTime:
      description: The unix timestamp
      explode: true
      in: query
      name: endCreatedTime
      schema:
        format: int64
        type: integer
      style: form
    EndExpireTime:
      description: The unix timestamp
      explode: true
      in: query
      name: endExpireTime
      schema:
        format: int64
        type: integer
      style: form
    EndLastUpdateTime:
      description: The unix timestamp
      explode: true
      in: query
      name: endLastUpdateTime
      schema:
        format: int64
        type: integer
      style: form
    EndTerminatedTime:
      description: The unix timestamp
      explode: true
      in: query
      name: endTerminatedTime
      schema:
        format: int64
        type: integer
      style: form
    EndTime:
      description: The unix timestamp, describing the end time for the stats
      explode: true
      in: query
      name: endTime
      schema:
        format: int64
        type: integer
      style: form
    EngineCategoryID:
      description: ID of Engine Category
      in: path
      name: EngineCategoryID
      required: true
      schema:
        format: uuid
        type: string
    EngineCategoryID_Query_Optional:
      description: Filter to the particular engine category ID
      in: query
      name: engineCategoryID
      schema:
        type: string
    EngineErrorChartType:
      description: It will help API to kmow the response should return
      in: query
      name: chartType
      schema:
        $ref: '#/components/schemas/EngineErrorChartTypeEnum'
    EngineID:
      description: EngineID of node-red container request
      in: path
      name: EngineID
      required: true
      schema:
        type: string
    EngineID_Path_Required:
      description: ID of Engine
      in: path
      name: EngineID
      required: true
      schema:
        format: uuid
        type: string
    EngineID_Query_Optional:
      description: Filter by engine id
      in: query
      name: engineID
      schema:
        type: string
    EngineInstanceID:
      description: ID of Engine Instance
      in: path
      name: EngineInstanceID
      required: true
      schema:
        format: uuid
        type: string
    EngineInstanceStatus:
      description: If specified, this limits the engine instances to follow status
      in: query
      name: status
      schema:
        $ref: '#/components/schemas/EngineStatusEnum'
    EngineInstance_IDs_Query_Optional:
      description: Field to provide the input to get engine instances by ID list.
        Separated by commas
      in: query
      name: engineInstanceIDs
      schema:
        type: string
    EngineName_Query_Optional:
      description: Field to string match against the engine names
      in: query
      name: engineName
      schema:
        type: string
    EngineOutputType_Query_Optional:
      description: Field to match the current type
      in: query
      name: engineOutputType
      schema:
        $ref: '#/components/schemas/EngineTypeEnum'
    EngineState_Query_Optional:
      description: Field to match the current state
      in: query
      name: engineState
      schema:
        $ref: '#/components/schemas/EngineStateEnum'
    EngineType_Query_Optional:
      description: Field to match the current type
      in: query
      name: engineType
      schema:
        $ref: '#/components/schemas/EngineTypeEnum'
    Engine_IDs_Query_Optional:
      description: Field to provide the input to get engines by Engine ID list. Separated
        by commas
      in: query
      name: engineIDs
      schema:
        type: string
    HTTPPushEndpoint_required:
      description: Endpoint UUID to push this chunk towards
      in: path
      name: Endpoint
      required: true
      schema:
        format: uuid
        type: string
    HostExpires_Query_Optional:
      description: Filters for hosts that will expires before this time
      in: query
      name: expires
      schema:
        format: int64
        type: integer
    HostID:
      description: ID of Host
      in: path
      name: HostID
      required: true
      schema:
        format: uuid
        type: string
    HostIDs_Query_Optional:
      description: Filtering engine instances by host IDs. Separated by commas
      in: query
      name: hostIDs
      schema:
        format: uuid
        type: string
    HostIsActive_Query_Optional:
      description: Filter for active or inactive hosts
      in: query
      name: isactive
      schema:
        type: boolean
    HostServerType_Query_Optional:
      description: Filter for server type. Currently it should be in [physical, virtual].
        It can expand in the future
      in: query
      name: serverType
      schema:
        type: string
    HostType_Query_Optional:
      description: Filter for hosts by type
      in: query
      name: type
      schema:
        $ref: '#/components/schemas/RunModeEnum'
    InternalOrganizationID_Query_Optional:
      description: ID of Organization.  UUID.  This ID is unique to this aiWARE installation.
      in: query
      name: internalOrganizationID
      schema:
        format: uuid
        type: string
    Interval_Query_Optional:
      description: Interval in seconds for output time ranges.
      in: query
      name: interval
      schema:
        format: int64
        type: integer
    JobID:
      description: ID of Job
      in: path
      name: JobID
      required: true
      schema:
        format: uuid
        type: string
    JobOutputName:
      description: Name of the job output, e.g. vtn-standard.json
      in: path
      name: JobOutputName
      required: true
      schema:
        type: string
    JobStatus:
      description: If specified, this limits the jobs or tasks to follow status
      in: query
      name: status
      schema:
        $ref: '#/components/schemas/JobStatusEnum'
    JobTaskStatusChartType:
      description: It will help API to kmow the response should return
      in: query
      name: chartType
      schema:
        $ref: '#/components/schemas/JobTaskStatusChartTypeEnum'
    JobTemplateID:
      description: ID of Job
      in: path
      name: TemplateID
      required: true
      schema:
        type: string
    LaunchAction_Query_Optional:
      description: Field to match the current launch action
      in: query
      name: LaunchAction
      schema:
        $ref: '#/components/schemas/LaunchActionEnum'
    LaunchEndTime_Query_Optional:
      description: The unix timestamp, describing an upper limit for the time an engine
        instance was launched.
      explode: true
      in: query
      name: launchEndTime
      schema:
        format: int64
        type: integer
      style: form
    LaunchID_Path_Required:
      description: ID of Launch
      in: path
      name: LaunchID
      required: true
      schema:
        format: uuid
        type: string
    LaunchStartTime_Query_Optional:
      description: The unix timestamp, describing a lower limit for the time an engine
        instance was launched.
      explode: true
      in: query
      name: launchStartTime
      schema:
        format: int64
        type: integer
      style: form
    LaunchStatus_Query_Optional:
      description: Field to match the current launch status
      in: query
      name: LaunchStatus
      schema:
        $ref: '#/components/schemas/LaunchStatusEnum'
    LicenseID:
      description: License ID
      in: path
      name: LicenseID
      required: true
      schema:
        type: string
    Limit_Query_Optional:
      description: the number of items to return.
      in: query
      name: limit
      schema:
        default: 10
        format: int64
        type: integer
    ModifiedAfter_Query_Optional:
      description: Filter by items modified after expressed as timestamp
      in: query
      name: modifiedAfter
      schema:
        format: int64
        type: integer
    ModifiedBefore_Query_Optional:
      description: Filter by items modified before expressed as timestamp
      in: query
      name: modifiedBefore
      schema:
        format: int64
        type: integer
    Offset_Query_Optional:
      description: the number of data to skip before getting the result set
      in: query
      name: offset
      schema:
        format: int64
        type: integer
    Orderby_Query_Optional:
      description: the field to sort
      in: query
      name: orderBy
      schema:
        default: createdDateTime
        type: string
    OrganizationID:
      description: ID of Organization
      in: path
      name: OrganizationID
      required: true
      schema:
        format: uuid
        type: string
    PermissionID:
      description: ID of Permission
      in: path
      name: PermissionID
      required: true
      schema:
        format: uuid
        type: string
    Preload_Query_Optional:
      description: Filter engines by preload
      in: query
      name: preload
      schema:
        type: boolean
    ResourceID_Path_Required:
      description: ID of Resource
      in: path
      name: ResourceID
      required: true
      schema:
        format: uuid
        type: string
    ResourceType_Query_Optional:
      description: Filter by resourceType
      in: query
      name: resourceType
      schema:
        type: string
    RoleID:
      description: ID of Role
      in: path
      name: RoleID
      required: true
      schema:
        format: uuid
        type: string
    RunMode:
      description: Filer by run mode
      in: path
      name: RunMode
      required: true
      schema:
        type: string
    ScheduledJobID:
      description: ID of Scheduled Job. It can be an internal ID or core ID
      in: path
      name: ScheduledJobID
      required: true
      schema:
        format: uuid
        type: string
    ServerErrorChartType:
      description: It will help API to kmow the response should return
      in: query
      name: chartType
      schema:
        $ref: '#/components/schemas/ServerErrorChartTypeEnum'
    ServerTypeID_Path_Required:
      description: ID of Server Type
      in: path
      name: ServerTypeID
      required: true
      schema:
        format: uuid
        type: string
    ServerTypeID_Query_Optional:
      description: Filter by serverTypeID
      in: query
      name: serverTypeID
      schema:
        type: string
    ServiceID:
      description: ID of the service
      in: path
      name: ServiceID
      required: true
      schema:
        format: uuid
        type: string
    ServiceInstanceID:
      description: ID of Service Instance
      in: path
      name: ServiceInstanceID
      required: true
      schema:
        format: uuid
        type: string
    StartCreatedTime:
      description: The unix timestamp
      explode: true
      in: query
      name: startCreatedTime
      schema:
        format: int64
        type: integer
      style: form
    StartExpireTime:
      description: The unix timestamp
      explode: true
      in: query
      name: startExpireTime
      schema:
        format: int64
        type: integer
      style: form
    StartLastUpdateTime:
      description: The unix timestamp
      explode: true
      in: query
      name: startLastUpdateTime
      schema:
        format: int64
        type: integer
      style: form
    StartTerminatedTime:
      description: The unix timestamp
      explode: true
      in: query
      name: startTerminatedTime
      schema:
        format: int64
        type: integer
      style: form
    StartTime:
      description: The unix timestamp, describing the start time for the stats
      explode: true
      in: query
      name: startTime
      schema:
        format: int64
        type: integer
      style: form
    Status:
      description: Automate request status
      in: path
      name: Status
      required: true
      schema:
        type: string
    StatusFormat:
      description: If specified, this limits the jobs or tasks to follow status
      in: query
      name: format
      schema:
        $ref: '#/components/schemas/StatusFormatEnum'
    Status_Query_Optional:
      description: Field to match the current status
      in: query
      name: status
      schema:
        $ref: '#/components/schemas/EngineStatusEnum'
    TaskID:
      description: ID of Task
      in: path
      name: TaskID
      required: true
      schema:
        format: uuid
        type: string
    TaskOutputName:
      description: Name of the task output, e.g. vtn-standard.json
      in: path
      name: TaskOutputName
      required: true
      schema:
        type: string
    TaskStatus:
      description: Filtering by task Status
      in: query
      name: status
      schema:
        $ref: '#/components/schemas/TaskStatusEnum'
    TokenID:
      description: ID of Token
      in: path
      name: TokenID
      required: true
      schema:
        format: uuid
        type: string
    UserID:
      description: ID of User
      in: path
      name: UserID
      required: true
      schema:
        format: uuid
        type: string
    WorkRequestID:
      description: ID of Work request
      in: path
      name: WorkRequestID
      required: true
      schema:
        format: uuid
        type: string
    WorkRequestIDs_Query_Optional:
      description: Filters engine instances by workrequest IDs. Separated by commas
      in: query
      name: workRequestIDs
      schema:
        format: uuid
        type: string
  schemas:
    AddEngineForResourceRequest:
      properties:
        engineId:
          $ref: '#/components/schemas/EngineID'
        pgPass:
          description: Optional the user password for the Postgres resource.
          format: password
          type: string
        pgUser:
          description: Optional the user name for the Postgres resource.
          type: string
        redisToken:
          description: Optional Redis token.
          type: string
      type: object
    AddEngineForResourceResponse:
      properties:
        error:
          $ref: '#/components/schemas/Error'
        result:
          properties:
            engineId:
              $ref: '#/components/schemas/EngineID'
          type: object
        success:
          $ref: '#/components/schemas/OperationSuccess'
      type: object
    AddServersToServerTypeRequest:
      properties:
        serversToAdd:
          description: The number of servers to add
          format: int32
          type: integer
      type: object
    AddServiceForResourceRequest:
      properties:
        pgPass:
          description: Optional the user password for the Postgres resource.
          format: password
          type: string
        pgUser:
          description: Optional the user name for the Postgres resource.
          type: string
        redisToken:
          description: Optional Redis token.
          type: string
        serviceId:
          $ref: '#/components/schemas/ServiceID'
      type: object
    AddServiceForResourceResponse:
      properties:
        error:
          $ref: '#/components/schemas/Error'
        result:
          properties:
            serviceId:
              $ref: '#/components/schemas/ServiceID'
          type: object
        success:
          $ref: '#/components/schemas/OperationSuccess'
      type: object
    AddTaskRequest:
      properties:
        task:
          $ref: '#/components/schemas/CreateTaskDetail'
      type: object
    AddTaskResponse:
      properties:
        error:
          $ref: '#/components/schemas/Error'
        success:
          $ref: '#/components/schemas/OperationSuccess'
        task:
          $ref: '#/components/schemas/TaskDetail'
      type: object
    AddTaskRouteDetail:
      properties:
        endpoint:
          description: This is endpoint to be used for this route.  This does not
            have to be unique.
          format: uuid
          type: string
        taskChildId:
          description: This is the task child id.
          type: string
        taskChildNumEngines:
          description: This is the number of engine instances running against this
            task.
          type: integer
        taskParentId:
          description: This is the task parent id.
          type: string
      type: object
    AddTaskRouteRequest:
      properties:
        task:
          $ref: '#/components/schemas/AddTaskRouteDetail'
      type: object
    AddTaskRouteResponse:
      properties:
        error:
          $ref: '#/components/schemas/Error'
        success:
          $ref: '#/components/schemas/OperationSuccess'
        task:
          $ref: '#/components/schemas/TaskRouteDetail'
      type: object
    AdminApplicationCreateRequest:
      description: This is the request for Create Application
      properties:
        application:
          $ref: '#/components/schemas/CreateApplicationDetail'
      type: object
    AdminApplicationCreateResponse:
      description: This is the response for Create Application Request
      properties:
        error:
          $ref: '#/components/schemas/Error'
        result:
          $ref: '#/components/schemas/ApplicationDetail'
        success:
          $ref: '#/components/schemas/OperationSuccess'
      type: object
    AdminApplicationDeleteResponse:
      description: This is the response for Delete Application Response
      properties:
        error:
          $ref: '#/components/schemas/Error'
        success:
          $ref: '#/components/schemas/OperationSuccess'
      type: object
    AdminApplicationGetDetailResponse:
      description: This is the response for get Application Request
      properties:
        error:
          $ref: '#/components/schemas/Error'
        result:
          $ref: '#/components/schemas/ApplicationDetail'
        success:
          $ref: '#/components/schemas/OperationSuccess'
      type: object
    AdminApplicationUpdateRequest:
      description: This is the request to update an application
      properties:
        token:
          $ref: '#/components/schemas/UpdateApplicationDetail'
      type: object
    AdminApplicationUpdateResponse:
      description: This is the response for the update application request
      properties:
        error:
          $ref: '#/components/schemas/Error'
        result:
          $ref: '#/components/schemas/ApplicationDetail'
        success:
          $ref: '#/components/schemas/OperationSuccess'
      type: object
    AdminApplicationsGetResponse:
      properties:
        count:
          description: Total records for the query
          type: integer
        error:
          $ref: '#/components/schemas/Error'
        limit:
          description: the number of applications to return.
          type: integer
        offset:
          description: the number of applications to skip before getting the result
            set
          type: integer
        result:
          items:
            $ref: '#/components/schemas/ApplicationDetail'
          type: array
        success:
          $ref: '#/components/schemas/OperationSuccess'
      type: object
    AdminAuthRequest:
      description: This is the request for check auth
      properties:
        auth:
          properties:
            action:
              $ref: '#/components/schemas/AuthActionEnum'
            permissionID:
              type: string
            token:
              format: uuid
              type: string
          type: object
      type: object
    AdminAuthResponse:
      description: This is the response for check auth request
      properties:
        error:
          $ref: '#/components/schemas/Error'
        result:
          properties:
            action:
              $ref: '#/components/schemas/AuthActionEnum'
            allow:
              type: boolean
            permissionID:
              type: string
            token:
              format: uuid
              type: string
          type: object
        success:
          $ref: '#/components/schemas/OperationSuccess'
      type: object
    AdminConfigResponse:
      description: Response for config request
      properties:
        error:
          $ref: '#/components/schemas/Error'
        result:
          description: Config sections
          items:
            $ref: '#/components/schemas/ConfigSection'
          type: array
        success:
          $ref: '#/components/schemas/OperationSuccess'
      type: object
    AdminConfigSectionKeyResponse:
      description: Response for config request
      properties:
        error:
          $ref: '#/components/schemas/Error'
        result:
          $ref: '#/components/schemas/ConfigSectionKey'
        success:
          $ref: '#/components/schemas/OperationSuccess'
      type: object
    AdminConfigSectionResponse:
      description: Response for config request
      properties:
        error:
          $ref: '#/components/schemas/Error'
        result:
          $ref: '#/components/schemas/ConfigSection'
        success:
          $ref: '#/components/schemas/OperationSuccess'
      type: object
    AdminConfigUpdateRequest:
      description: Request for update config
      properties:
        sections:
          description: Config sections
          items:
            $ref: '#/components/schemas/ConfigSection'
          type: array
      type: object
    AdminConfigUpdateResponse:
      description: Response for config request
      properties:
        error:
          $ref: '#/components/schemas/Error'
        result:
          description: Config sections
          items:
            $ref: '#/components/schemas/ConfigSection'
          type: array
        success:
          $ref: '#/components/schemas/OperationSuccess'
      type: object
    AdminConfigUpdateSectionKeyRequest:
      description: Request for update config section for a key
      properties:
        engineID:
          $ref: '#/components/schemas/EngineID'
          description: Optional EngineID
        key:
          $ref: '#/components/schemas/ConfigSectionKey'
        serviceID:
          $ref: '#/components/schemas/ServiceID'
          description: Optional ServiceID
      type: object
    AdminConfigUpdateSectionKeyResponse:
      description: Response for config request
      properties:
        error:
          $ref: '#/components/schemas/Error'
        result:
          $ref: '#/components/schemas/ConfigSectionKey'
        success:
          $ref: '#/components/schemas/OperationSuccess'
      type: object
    AdminConfigUpdateSectionRequest:
      description: Request for update config
      properties:
        section:
          $ref: '#/components/schemas/ConfigSection'
      type: object
    AdminConfigUpdateSectionResponse:
      description: Response for config request
      properties:
        error:
          $ref: '#/components/schemas/Error'
        result:
          $ref: '#/components/schemas/ConfigSection'
        success:
          $ref: '#/components/schemas/OperationSuccess'
      type: object
    AdminCoreCreateRequest:
      description: This is the request for Create Core
      properties:
        core:
          $ref: '#/components/schemas/CreateCoreDetail'
      type: object
    AdminCoreCreateResponse:
      description: This is the response for Create Core Request
      properties:
        error:
          $ref: '#/components/schemas/Error'
        result:
          $ref: '#/components/schemas/CoreDetail'
        success:
          $ref: '#/components/schemas/OperationSuccess'
      type: object
    AdminCoreGetDetailResponse:
      description: This is the response for get Core Detail Request
      properties:
        error:
          $ref: '#/components/schemas/Error'
        result:
          $ref: '#/components/schemas/CoreDetail'
        success:
          $ref: '#/components/schemas/OperationSuccess'
      type: object
    AdminEngineConfigSectionKeyResponse:
      description: Response for config request
      properties:
        error:
          $ref: '#/components/schemas/Error'
        result:
          $ref: '#/components/schemas/ConfigSectionKey'
        success:
          $ref: '#/components/schemas/OperationSuccess'
      type: object
    AdminGetTokensResponse:
      properties:
        count:
          description: Total records for the query
          type: integer
        error:
          $ref: '#/components/schemas/Error'
        limit:
          description: the number of tokens to return.
          type: integer
        offset:
          description: the number of tokens to skip before getting the result set
          type: integer
        result:
          items:
            $ref: '#/components/schemas/TokenDetail'
          type: array
        success:
          $ref: '#/components/schemas/OperationSuccess'
      type: object
    AdminHostsGetResponse:
      properties:
        count:
          description: Total records for the query
          type: integer
        error:
          $ref: '#/components/schemas/Error'
        limit:
          description: the number of host to return.
          type: integer
        offset:
          description: the number of hosts to skip before getting the result set
          type: integer
        result:
          items:
            $ref: '#/components/schemas/HostDetail'
          type: array
        success:
          $ref: '#/components/schemas/OperationSuccess'
      type: object
    AdminOperationRequest:
      description: Admin Operation Request
      properties:
        clusterID:
          description: Cluster ID
          type: string
      type: object
    AdminOperationResponse:
      description: Response from operation
      properties:
        count:
          description: Count of items affected
          format: int64
          type: integer
        error:
          $ref: '#/components/schemas/Error'
        success:
          $ref: '#/components/schemas/OperationSuccess'
      type: object
    AdminOrganizationCreateRequest:
      description: This is the request for Create Organization
      properties:
        organization:
          $ref: '#/components/schemas/CreateOrganizationDetail'
      type: object
    AdminOrganizationCreateResponse:
      description: This is the response for Create Organization Request
      properties:
        error:
          $ref: '#/components/schemas/Error'
        result:
          $ref: '#/components/schemas/OrganizationDetail'
        success:
          $ref: '#/components/schemas/OperationSuccess'
      type: object
    AdminOrganizationGetDetailResponse:
      description: This is the response for get Organization Detail Request
      properties:
        error:
          $ref: '#/components/schemas/Error'
        result:
          $ref: '#/components/schemas/OrganizationDetail'
        success:
          $ref: '#/components/schemas/OperationSuccess'
      type: object
    AdminOrganizationGetTokensResponse:
      properties:
        error:
          $ref: '#/components/schemas/Error'
        result:
          items:
            $ref: '#/components/schemas/TokenDetail'
          type: array
        success:
          $ref: '#/components/schemas/OperationSuccess'
      type: object
    AdminOrganizationUpdateRequest:
      description: This is the request for Update Organization
      properties:
        organization:
          $ref: '#/components/schemas/UpdateOrganizationDetail'
      type: object
    AdminOrganizationUpdateResponse:
      properties:
        error:
          $ref: '#/components/schemas/Error'
        result:
          $ref: '#/components/schemas/OrganizationDetail'
        success:
          $ref: '#/components/schemas/OperationSuccess'
      type: object
    AdminOrganizationsGetResponse:
      description: This is the response for get Organization Detail Request
      properties:
        count:
          description: Total records for the query
          format: int64
          type: integer
        error:
          $ref: '#/components/schemas/Error'
        limit:
          description: the number of organizations to return.
          format: int64
          type: integer
        offset:
          description: the number of organizations to skip before getting the result
            set
          format: int64
          type: integer
        result:
          items:
            $ref: '#/components/schemas/OrganizationDetail'
          type: array
        success:
          $ref: '#/components/schemas/OperationSuccess'
      type: object
    AdminPermissionCreateRequest:
      description: This is the request for Create Permission
      properties:
        permission:
          $ref: '#/components/schemas/CreatePermissionDetail'
      type: object
    AdminPermissionCreateResponse:
      description: This is the response for Create Permission Request
      properties:
        error:
          $ref: '#/components/schemas/Error'
        result:
          $ref: '#/components/schemas/PermissionDetail'
        success:
          $ref: '#/components/schemas/OperationSuccess'
      type: object
    AdminPermissionDetailResponse:
      description: This is the response for get Permission Detail Request
      properties:
        error:
          $ref: '#/components/schemas/Error'
        result:
          $ref: '#/components/schemas/PermissionDetail'
        success:
          $ref: '#/components/schemas/OperationSuccess'
      type: object
    AdminPermissionUpdateRequest:
      description: This is the request for Update Permission
      properties:
        permission:
          $ref: '#/components/schemas/UpdatePermissionDetail'
      type: object
    AdminPermissionUpdateResponse:
      description: This is the response for Update Permission Request
      properties:
        error:
          $ref: '#/components/schemas/Error'
        result:
          $ref: '#/components/schemas/PermissionDetail'
        success:
          $ref: '#/components/schemas/OperationSuccess'
      type: object
    AdminRoleCreateRequest:
      description: This is the request for Create Role
      properties:
        role:
          $ref: '#/components/schemas/CreateRoleDetail'
      type: object
    AdminRoleCreateResponse:
      description: This is the response for Create Role Request
      properties:
        error:
          $ref: '#/components/schemas/Error'
        result:
          $ref: '#/components/schemas/RoleDetail'
        success:
          $ref: '#/components/schemas/OperationSuccess'
      type: object
    AdminRoleDeleteResponse:
      description: This is the response for Delete Role Response
      properties:
        error:
          $ref: '#/components/schemas/Error'
        success:
          $ref: '#/components/schemas/OperationSuccess'
      type: object
    AdminRoleDetailResponse:
      description: This is the response for get Role Detail Request
      properties:
        error:
          $ref: '#/components/schemas/Error'
        result:
          $ref: '#/components/schemas/RoleDetail'
        success:
          $ref: '#/components/schemas/OperationSuccess'
      type: object
    AdminRoleUpdateRequest:
      description: This is the request for Update Role
      properties:
        role:
          $ref: '#/components/schemas/UpdateRoleDetail'
      type: object
    AdminRoleUpdateResponse:
      description: This is the response for Update Role Request
      properties:
        error:
          $ref: '#/components/schemas/Error'
        result:
          $ref: '#/components/schemas/RoleDetail'
        success:
          $ref: '#/components/schemas/OperationSuccess'
      type: object
    AdminServiceConfigResponse:
      description: Response for config request
      properties:
        error:
          $ref: '#/components/schemas/Error'
        result:
          description: Config sections
          items:
            $ref: '#/components/schemas/ConfigSection'
          type: array
        success:
          $ref: '#/components/schemas/OperationSuccess'
      type: object
    AdminServiceConfigSectionKeyResponse:
      description: Response for config request
      properties:
        error:
          $ref: '#/components/schemas/Error'
        result:
          $ref: '#/components/schemas/ConfigSectionKey'
        success:
          $ref: '#/components/schemas/OperationSuccess'
      type: object
    AdminServiceConfigSectionResponse:
      description: Response for config request
      properties:
        error:
          $ref: '#/components/schemas/Error'
        result:
          $ref: '#/components/schemas/ConfigSection'
        success:
          $ref: '#/components/schemas/OperationSuccess'
      type: object
    AdminStatusDetail:
      description: Information about the edge cluster
      properties:
        clusterID:
          description: Cluster ID
          type: string
      type: object
    AdminTokenCreateRequest:
      description: This is the request for Create Token
      properties:
        token:
          $ref: '#/components/schemas/CreateTokenDetail'
      type: object
    AdminTokenCreateResponse:
      description: This is the response for Create Token Request
      properties:
        error:
          $ref: '#/components/schemas/Error'
        result:
          $ref: '#/components/schemas/TokenDetail'
        success:
          $ref: '#/components/schemas/OperationSuccess'
      type: object
    AdminTokenDeleteResponse:
      description: This is the response for the Delete Token request
      properties:
        error:
          $ref: '#/components/schemas/Error'
        success:
          $ref: '#/components/schemas/OperationSuccess'
      type: object
    AdminTokenPermissionsGetResponse:
      description: This is the response for get Token Permissions Request
      properties:
        error:
          $ref: '#/components/schemas/Error'
        result:
          items:
            type: string
          type: array
        success:
          $ref: '#/components/schemas/OperationSuccess'
        tokenID:
          format: uuid
          type: string
      type: object
    AdminTokenUpdateRequest:
      description: This is the request to update a token
      properties:
        token:
          $ref: '#/components/schemas/UpdateTokenDetail'
      type: object
    AdminTokenUpdateResponse:
      description: This is the response for the update token request
      properties:
        error:
          $ref: '#/components/schemas/Error'
        result:
          $ref: '#/components/schemas/TokenDetail'
        success:
          $ref: '#/components/schemas/OperationSuccess'
      type: object
    AdminUserCreateRequest:
      description: This is the request for Create User
      properties:
        user:
          $ref: '#/components/schemas/CreateUserDetail'
      type: object
    AdminUserCreateResponse:
      description: This is the response for Create User Request
      properties:
        error:
          $ref: '#/components/schemas/Error'
        result:
          $ref: '#/components/schemas/UserDetail'
        success:
          $ref: '#/components/schemas/OperationSuccess'
      type: object
    AdminUserDeleteResponse:
      description: This is the response for Delete User Response
      properties:
        error:
          $ref: '#/components/schemas/Error'
        success:
          $ref: '#/components/schemas/OperationSuccess'
      type: object
    AdminUserGetDetailResponse:
      description: This is the response for get User Detail Request
      properties:
        error:
          $ref: '#/components/schemas/Error'
        result:
          $ref: '#/components/schemas/UserDetail'
        success:
          $ref: '#/components/schemas/OperationSuccess'
      type: object
    AdminUserGetTokensResponse:
      properties:
        error:
          $ref: '#/components/schemas/Error'
        result:
          items:
            $ref: '#/components/schemas/TokenDetail'
          type: array
        success:
          $ref: '#/components/schemas/OperationSuccess'
      type: object
    AdminUserLoginRequest:
      properties:
        password:
          type: string
        username:
          type: string
      type: object
    AdminUserLoginResponse:
      properties:
        error:
          $ref: '#/components/schemas/Error'
        result:
          $ref: '#/components/schemas/UserDetail'
        success:
          $ref: '#/components/schemas/OperationSuccess'
        token:
          type: string
      type: object
    AdminUserOAuth2LoginRequest:
      properties:
        token:
          description: This is the token for the login request
          type: string
        tokenType:
          description: This is the token type for the login request
          type: string
      type: object
    AdminUserPasswordForgotRequest:
      properties:
        confirmURL:
          type: string
        email:
          type: string
        username:
          type: string
      type: object
    AdminUserPasswordForgotResponse:
      properties:
        error:
          $ref: '#/components/schemas/Error'
        success:
          $ref: '#/components/schemas/OperationSuccess'
      type: object
    AdminUserPasswordResetRequest:
      properties:
        newPassword:
          type: string
        resetToken:
          type: string
      type: object
    AdminUserPasswordResetResponse:
      properties:
        error:
          $ref: '#/components/schemas/Error'
        success:
          $ref: '#/components/schemas/OperationSuccess'
      type: object
    AdminUserPasswordUpdateRequest:
      properties:
        newPassword:
          type: string
        oldPassword:
          type: string
        userID:
          format: uuid
          type: string
      type: object
    AdminUserPasswordUpdateResponse:
      properties:
        error:
          $ref: '#/components/schemas/Error'
        success:
          $ref: '#/components/schemas/OperationSuccess'
      type: object
    AdminUserPermissionsGetResponse:
      description: This is the response for get User Permissions Request
      properties:
        error:
          $ref: '#/components/schemas/Error'
        result:
          items:
            type: string
          type: array
        success:
          $ref: '#/components/schemas/OperationSuccess'
        userID:
          format: uuid
          type: string
      type: object
    AdminUserRegisterRequest:
      description: This is the request for Register User
      properties:
        user:
          $ref: '#/components/schemas/RegisterUserDetail'
      type: object
    AdminUserRegisterResponse:
      description: This is the response for Register User Request
      properties:
        error:
          $ref: '#/components/schemas/Error'
        success:
          $ref: '#/components/schemas/OperationSuccess'
      type: object
    AdminUserUpdateRequest:
      description: This is the request for Update User
      properties:
        user:
          $ref: '#/components/schemas/UpdateUserDetail'
      type: object
    AdminUserUpdateResponse:
      description: This is the response for Update User Request
      properties:
        error:
          $ref: '#/components/schemas/Error'
        result:
          $ref: '#/components/schemas/UserDetail'
        success:
          $ref: '#/components/schemas/OperationSuccess'
      type: object
    AdminUsersGetResponse:
      description: This is the response for get User Detail Request
      properties:
        count:
          description: Total records for the query
          type: integer
        error:
          $ref: '#/components/schemas/Error'
        limit:
          description: the number of users to return.
          type: integer
        offset:
          description: the number of users to skip before getting the result set
          type: integer
        result:
          items:
            $ref: '#/components/schemas/UserDetail'
          type: array
        success:
          $ref: '#/components/schemas/OperationSuccess'
      type: object
    AdminUsersPermissionsGetResponse:
      description: This is the response for get Users Permissions Request
      properties:
        error:
          $ref: '#/components/schemas/Error'
        result:
          items:
            $ref: '#/components/schemas/PermissionDetail'
          type: array
        success:
          $ref: '#/components/schemas/OperationSuccess'
      type: object
    AdminUsersRolesGetResponse:
      description: This is the response for get Users Roles Request
      properties:
        count:
          description: Total records for the query
          format: int64
          type: integer
        error:
          $ref: '#/components/schemas/Error'
        limit:
          description: the number of roles to return.
          format: int64
          type: integer
        offset:
          description: the number of roles to skip before getting the result set
          format: int64
          type: integer
        result:
          items:
            $ref: '#/components/schemas/RoleDetail'
          type: array
        success:
          $ref: '#/components/schemas/OperationSuccess'
      type: object
    ApplicationDetail:
      properties:
        applicationDescription:
          type: string
        applicationID:
          format: uuid
          type: string
        applicationName:
          format: url
          type: string
        applicationStatus:
          $ref: '#/components/schemas/ApplicationStatusEnum'
        applicationType:
          $ref: '#/components/schemas/ApplicationTypeEnum'
        createdDateTime:
          description: This is the datetime the core was created
          example: '2018-03-20T09:12:28Z'
          format: date-time
          type: string
        kvpJSON:
          format: json
          type: string
        modifiedDateTime:
          description: This is the datetime the core was last modified.
          example: '2018-03-20T09:12:28Z'
          format: date-time
          type: string
      type: object
    ApplicationStatusEnum:
      description: Flag for denoting application status. Active is active application.
        Approved application has gone through the approval process and is ready for
        activation. A deleted application is not longer available. A disabled application
        can be found in the marketplace but not used. Draft is an application that
        is pending submission. Pending is in approval review. Rejected applications
        have gone through the approval process and has failed.
      enum:
      - active
      - approved
      - deleted
      - disabled
      - draft
      - pending
      - rejected
      type: string
    ApplicationTypeEnum:
      description: Flag for denoting application type. http_service is for services
        and applications that require ingress. queue_service are for services that
        don't require ingress.
      enum:
      - queue_service
      - http_service
      type: string
    ArrayOfEngineCategories:
      items:
        $ref: '#/components/schemas/EngineCategoryDetail'
      type: array
    ArrayOfEngineInstanceWorkItem:
      items:
        $ref: '#/components/schemas/EngineInstanceWorkItem'
      type: array
    AuthActionEnum:
      description: action on a permission
      enum:
      - view
      - execute
      type: string
    BacklogSummaryDetail:
      properties:
        count:
          description: The count of items for that engine in backlog
          format: int64
          type: integer
        engineID:
          description: The Engine ID
          type: string
        priority:
          description: The priority for engine ID
          format: int64
          type: integer
      type: object
    BuildDetail:
      properties:
        buildDefaultTTL:
          description: The seconds on average a build should live if utilized
          format: int32
          type: integer
        buildID:
          format: uuid
          type: string
        buildState:
          $ref: '#/components/schemas/EngineBuildStateEnum'
          description: Build State
        createdDateTime:
          description: This is the datetime the core was created
          example: '2018-03-20T09:12:28Z'
          format: date-time
          type: string
        diskFreeBytes:
          description: The number of free bytes required to launch engine
          format: int64
          type: integer
        dockerImage:
          description: docker image
          type: string
        engineID:
          format: uuid
          type: string
        licenseExpirationTimestamp:
          description: The unix timestamp on when the license for the engine expires.  If
            0, then it does not expire
          format: int64
          type: integer
        manifestClusterSize:
          description: Engine Size from the Manifest
          type: string
        manifestCustomProfile:
          description: Engine Custom Profile from the Manifest
          type: string
        manifestEngineMode:
          description: Engine Mode from the Manifest
          type: string
        manifestEngineName:
          description: Name of the Engine from the Manifest
          type: string
        manifestGPUSupported:
          $ref: '#/components/schemas/GPUEnum'
        manifestRequireEC2:
          description: Does the engine require EC2
          type: boolean
        modifiedDateTime:
          description: This is the datetime the core was last modified.
          example: '2018-03-20T09:12:28Z'
          format: date-time
          type: string
        runtime:
          description: JSON Data for runtime
          format: json
          type: string
        softGPULimit:
          description: The number of GPU required to launch engine
          format: int32
          type: integer
        softMemoryBytesLimit:
          description: The number of bytes required to launch this engine
          format: int64
          type: integer
        softVCPULimit:
          description: The number of VCPU based on 1024 required to launch engine
          format: int32
          type: integer
        version:
          description: version of the engine
          format: int32
          type: integer
      type: object
    ChartTypeEnum:
      enum:
      - pie
      - time_range
      type: string
    ChunkCountInfo:
      example:
        chunkCompletedCount: 1
        chunkProducedCount: 0
        chunkRemainingCount: 1
        chunkToProcessCount: 2
        errorCount: 3
        retryCount: 4
      properties:
        chunkCompletedCount:
          format: int64
          type: integer
        chunkProducedCount:
          format: int64
          type: integer
        chunkRemainingCount:
          format: int64
          type: integer
        chunkToProcessCount:
          format: int64
          type: integer
        errorCount:
          format: int64
          type: integer
        retryCount:
          format: int64
          type: integer
      type: object
    ConfigKey:
      type: string
    ConfigSection:
      description: This contains the keys in a particular config section
      properties:
        keys:
          description: Config Keys
          items:
            $ref: '#/components/schemas/ConfigSectionKey'
          type: array
        section:
          description: The section for the config key
          type: string
      type: object
    ConfigSectionEnum:
      enum:
      - admin
      - controller
      - core
      - db
      - engine
      - registry
      - nfs
      - prometheus
      - api
      - app
      - eventing
      - ceph
      type: string
    ConfigSectionKey:
      description: Config Key Object
      properties:
        createdDateTime:
          description: This is the datetime the core was created
          example: '2018-03-20T09:12:28Z'
          format: date-time
          type: string
        dataType:
          description: The type of value (integer, string, boolean)
          type: string
        defaultValue:
          description: The default value for the Key
          type: string
        deprecated:
          type: boolean
        description:
          type: string
        envVar:
          type: string
        isOverridden:
          type: boolean
        key:
          description: The Key
          type: string
        kvpJSON:
          description: The KVP as JSON format
          format: json
          type: string
        modifiedDateTime:
          description: This is the datetime the core was last modified.
          example: '2018-03-20T09:12:28Z'
          format: date-time
          type: string
        section:
          description: The section for the config key
          type: string
        secure:
          type: boolean
        value:
          description: The value for the Key
          type: string
      type: object
    ContainerStatus:
      additionalProperties: true
      properties:
        CPUUtilization:
          description: The CPU of the container as a percentage from 0-100
          format: float
          type: number
        containerID:
          description: This is the docker container id the engine instance
          type: string
        diskAvailableRoot:
          description: The available bytes in the root partition
          format: int64
          type: integer
        launchTimestamp:
          description: Unix Epoch timestamp
          format: int64
          type: integer
        memoryAvailable:
          description: The available memory to the container in bytes
          format: int64
          type: integer
        memoryUsed:
          description: The memory used by container in bytes
          format: int64
          type: integer
      type: object
    ContainerTypeEnum:
      enum:
      - engine
      - service
      type: string
    CoreDetail:
      properties:
        adhoc:
          description: Download adhoc jobs
          type: boolean
        baseUrl:
          format: url
          type: string
        clusterID:
          description: Cluster ID
          type: string
        coreID:
          format: uuid
          type: string
        coreUrl:
          format: url
          type: string
        createdDateTime:
          description: This is the datetime the core was created
          example: '2018-03-20T09:12:28Z'
          format: date-time
          type: string
        endpoint:
          example: /v3/graphql
          type: string
        isEnabled:
          description: Is the core enabled
          type: boolean
        modifiedDateTime:
          description: This is the datetime the core was last modified.
          example: '2018-03-20T09:12:28Z'
          format: date-time
          type: string
        scheduled:
          description: Download scheduled jobs
          type: boolean
        token:
          type: string
      type: object
    CreateApplicationDetail:
      properties:
        applicationDescription:
          type: string
        applicationName:
          type: string
        applicationStatus:
          $ref: '#/components/schemas/ApplicationStatusEnum'
        applicationType:
          $ref: '#/components/schemas/ApplicationTypeEnum'
        kvpJSON:
          format: json
          type: string
      type: object
    CreateBuildDetail:
      properties:
        buildDefaultTTL:
          description: The seconds on average a build should live if utilized
          format: int32
          type: integer
        buildID:
          format: uuid
          type: string
        buildState:
          $ref: '#/components/schemas/EngineBuildStateEnum'
          description: Build State
        diskFreeBytes:
          description: The number of free bytes required to launch engine
          format: int64
          type: integer
        dockerImage:
          description: docker image
          type: string
        engineID:
          format: uuid
          type: string
        licenseExpirationTimestamp:
          description: The unix timestamp on when the license for the engine expires.  If
            0, then it does not expire
          format: int64
          type: integer
        manifestClusterSize:
          description: Engine Size from the Manifest
          type: string
        manifestCustomProfile:
          description: Engine Custom Profile from the Manifest
          type: string
        manifestEngineMode:
          description: Engine Mode from the Manifest
          type: string
        manifestEngineName:
          description: Name of the Engine from the Manifest
          type: string
        manifestGPUSupported:
          $ref: '#/components/schemas/GPUEnum'
        manifestRequireEC2:
          description: Does the engine require EC2
          type: boolean
        runtime:
          description: JSON Data for runtime
          format: json
          type: string
        softGPULimit:
          description: The number of GPU required to launch engine
          format: int32
          type: integer
        softMemoryBytesLimit:
          description: The number of bytes required to launch this engine
          format: int64
          type: integer
        softVCPULimit:
          description: The number of VCPU based on 1024 required to launch engine
          format: int32
          type: integer
        version:
          description: version of the engine
          format: int32
          type: integer
      type: object
    CreateBuildRequest:
      properties:
        build:
          $ref: '#/components/schemas/CreateBuildDetail'
      type: object
    CreateBuildResponse:
      properties:
        error:
          $ref: '#/components/schemas/Error'
        result:
          $ref: '#/components/schemas/BuildDetail'
        success:
          $ref: '#/components/schemas/OperationSuccess'
      type: object
    CreateCoreDetail:
      properties:
        adhoc:
          description: Download adhoc jobs
          type: boolean
        baseUrl:
          format: url
          type: string
        clusterID:
          description: Cluster ID
          type: string
        coreUrl:
          format: url
          type: string
        endpoint:
          example: /v3/graphql
          type: string
        isEnabled:
          description: Is the core enabled
          type: boolean
        scheduled:
          description: Download scheduled jobs
          type: boolean
        token:
          type: string
      type: object
    CreateEngineCategoryDetail:
      description: These are the fields required to create an engine category.
      properties:
        engineCategoryName:
          description: The name of the engine category
          type: string
        engineCategoryType:
          description: The type of the category
          type: string
      type: object
    CreateEngineCategoryResponse:
      properties:
        error:
          $ref: '#/components/schemas/Error'
        result:
          $ref: '#/components/schemas/EngineCategoryDetail'
        success:
          $ref: '#/components/schemas/OperationSuccess'
      type: object
    CreateEngineDetail:
      properties:
        applicationIDsJSON:
          description: JSON Data for application_id
          format: json
          type: string
        child_priority_adjustment_on_complete:
          description: When this task completes, adjust the priority of child tasks
            by this value
          format: int32
          type: integer
        dependencyJSON:
          description: JSON Data for dependency
          format: json
          type: string
        dontrunComplete:
          description: If true, do not run this engine.  Complete as soon as possible
            and do not assign work.
          type: boolean
        edge_version:
          description: edge version of the engine
          format: int32
          type: integer
        engineCategoryID:
          description: The UUID of the Engine Category
          format: uuid
          type: string
        engineID:
          format: uuid
          type: string
        engineName:
          description: Name of the Engine
          type: string
        engineOutputType:
          $ref: '#/components/schemas/EngineTypeEnum'
        engineState:
          $ref: '#/components/schemas/EngineStateEnum'
        engineType:
          $ref: '#/components/schemas/EngineTypeEnum'
        fieldsJSON:
          description: JSON Data for fields
          format: json
          type: string
        internalOrganizationID:
          format: uuid
          type: string
        jwtRightsJSON:
          description: JSON Data for jwt_rights
          format: json
          type: string
        minAvailable:
          format: int64
          type: integer
        minRunning:
          format: int64
          type: integer
        parallelProcessing:
          description: If true, the engine can handle multiple instances working against
            the same chunk task.
          type: boolean
        parentCompleteBeforeStart:
          description: If true, the engine waits for the parent(s) to be complete
            before starting
          type: boolean
        preload:
          description: If it is `true`, that means the engine need to pull docker
            image to local
          type: boolean
        priority_adjustment:
          description: On new tasks with this engine, add this value to the priority
            of that task
          format: int32
          type: integer
        replacementEngineID:
          format: uuid
          type: string
        validationJSON:
          description: JSON Data for validation
          format: json
          type: string
      type: object
    CreateEngineRequest:
      properties:
        engine:
          $ref: '#/components/schemas/CreateEngineDetail'
      type: object
    CreateEngineResponse:
      properties:
        error:
          $ref: '#/components/schemas/Error'
        result:
          $ref: '#/components/schemas/EngineDetail'
        success:
          $ref: '#/components/schemas/OperationSuccess'
      type: object
    CreateJobDetail:
      properties:
        coreID:
          format: uuid
          type: string
        coreJobID:
          description: This is the core job id associated with this job
          type: string
        coreRecordingID:
          description: This is the recording id in the core of the content for this
            job
          format: int64
          type: integer
        coreSourceID:
          default: 0
          description: This is the Core Source Id
          format: int64
          type: integer
        currentRetries:
          default: 0
          description: This is the current retries for the job
          type: integer
        dueDateTime:
          description: This is the time the job is due to be complete.  This is used
            by edge to set the priorities.
          example: '2018-03-20T09:12:28Z'
          format: date-time
          type: string
        internalOrganizationID:
          format: uuid
          type: string
        jobConfigJSON:
          description: This is the job config expressed as JSON
          format: JSON
          type: string
        jobStatus:
          $ref: '#/components/schemas/JobStatusEnum'
        sendOutputToUris:
          description: A list of URIs to send processed chunks when the engine completes
            them.
          items:
            type: string
          type: array
        taskRoutes:
          items:
            $ref: '#/components/schemas/TaskRouteDetail'
          type: array
        tasks:
          items:
            $ref: '#/components/schemas/CreateTaskDetail'
          type: array
      required:
      - internalOrganizationID
      type: object
    CreateJobRequest:
      properties:
        jobs:
          items:
            $ref: '#/components/schemas/CreateJobDetail'
          type: array
      type: object
    CreateJobResponse:
      properties:
        internalJobIds:
          items:
            type: string
          type: array
      type: object
    CreateJobsAction:
      properties:
        baseInternalJobID:
          description: the internal job ID of the job from which to clone the job
          type: string
        createTDODetail:
          $ref: '#/components/schemas/CreateTDODetail'
        noTDO:
          description: A flag to not create a TDO
          type: boolean
        payloadJSON:
          description: This is the payload encoded as a JSON string
          format: json
          type: string
        token:
          description: the token to be used for creating the job
          type: string
      type: object
    CreateLicenseDetail:
      description: This provides the detailed information about the license.
      properties:
        licenseKey:
          description: This is the encoded license string
          type: string
      type: object
    CreateNodRedContainerDetail:
      properties:
        automateContainerID:
          description: The UUID of the Automate Container
          format: uuid
          type: string
        buildID:
          format: uuid
          type: string
        containerID:
          description: This is the docker container id the engine instance
          type: string
        coreID:
          format: uuid
          type: string
        coreToken:
          description: core token of user session.
          type: string
        createdDateTime:
          description: This is the datetime the core was created
          example: '2018-03-20T09:12:28Z'
          format: date-time
          type: string
        engineID:
          format: uuid
          type: string
        hostID:
          format: uuid
          type: string
        hostIP:
          description: IP of the host which include NR container
          type: string
        modifiedDateTime:
          description: This is the datetime the core was last modified.
          example: '2018-03-20T09:12:28Z'
          format: date-time
          type: string
        port:
          description: Port of the NR container
          type: string
      type: object
    CreateOrganizationDetail:
      properties:
        applicationID:
          format: uuid
          type: string
        basePriority:
          type: integer
        coreOrganizationID:
          type: integer
        createdDateTime:
          description: This is the datetime the core was created
          example: '2018-03-20T09:12:28Z'
          format: date-time
          type: string
        defaultRetries:
          type: integer
        defaultSLASeconds:
          type: integer
        kvpJSON:
          format: json
          type: string
        modifiedDateTime:
          description: This is the datetime the core was last modified.
          example: '2018-03-20T09:12:28Z'
          format: date-time
          type: string
        name:
          type: string
        taskPriorityAdjustmentStarted:
          type: integer
      type: object
    CreatePermissionDetail:
      properties:
        active:
          type: boolean
        method:
          type: string
        parentID:
          type: string
        path:
          type: string
        permissionID:
          type: string
        permissionName:
          type: string
        type:
          $ref: '#/components/schemas/PermissionTypeEnum'
      type: object
    CreateResourceDetail:
      description: This is the create request for a resource object
      properties:
        URITemplate:
          description: URI template in the go template format.
          type: string
        bindingType:
          $ref: '#/components/schemas/ResourceBindingTypeEnum'
        hostID:
          format: uuid
          type: string
        name:
          description: The name of the resource
          type: string
        params:
          description: JSON encoded field
          type: string
        pgDatabase:
          description: If postgres, this is the name of the postgres database
          type: string
        pgPass:
          description: If postgres, this is the user password.  This will be encrypted
            in storage
          format: password
          type: string
        pgUser:
          description: If postgres, this is the user name
          type: string
        redisDB:
          description: This is the redis DB number.
          format: int64
          type: integer
        redisToken:
          description: If Redis, this is the Redis token.
          type: string
        resourceState:
          $ref: '#/components/schemas/ResourceStateEnum'
        resourceType:
          $ref: '#/components/schemas/ResourceTypeEnum'
      type: object
    CreateResourceRequest:
      properties:
        resource:
          $ref: '#/components/schemas/CreateResourceDetail'
      type: object
    CreateResourceResponse:
      properties:
        error:
          $ref: '#/components/schemas/Error'
        result:
          $ref: '#/components/schemas/ResourceDetail'
        success:
          $ref: '#/components/schemas/OperationSuccess'
      type: object
    CreateRoleDetail:
      properties:
        active:
          type: boolean
        permissionIDs:
          items:
            type: string
          type: array
        roleName:
          type: string
      type: object
    CreateServerTypeDetail:
      properties:
        agentStartupScript:
          type: string
        awsAmi:
          type: string
        awsInstanceProfile:
          type: string
        awsInstanceType:
          type: string
        awsKeyName:
          type: string
        awsSecurityGroups:
          description: aws subnets
          items:
            type: string
          type: array
        awsSpot:
          type: boolean
        awsSpotMaxPrice:
          format: float
          type: number
        awsSpotPersistent:
          type: boolean
        awsSubnets:
          description: aws subnets
          items:
            type: string
          type: array
        awsTagsJSON:
          format: json
          type: string
        awsUserData:
          type: string
        disableLaunchingBacklogEngines:
          type: boolean
        gpuType:
          $ref: '#/components/schemas/GPUEnum'
        hasGPU:
          type: boolean
        isAutoScaleActive:
          type: boolean
        maxServers:
          format: int64
          type: integer
        memoryBytes:
          format: int64
          type: integer
        minServers:
          format: int64
          type: integer
        numGPU:
          format: int64
          type: integer
        onlyOrganizationId:
          format: uuid
          type: string
        runModes:
          description: run modes
          items:
            $ref: '#/components/schemas/RunModeEnum'
          type: array
        serverConfigJSON:
          format: json
          type: string
        serverProvider:
          $ref: '#/components/schemas/ServerProviderEnum'
        serverTypeID:
          format: uuid
          type: string
        vcpus:
          format: int64
          type: integer
      type: object
    CreateServerTypeEngineRunningDetail:
      properties:
        engineID:
          format: uuid
          type: string
        minRunning:
          format: int64
          type: integer
        serverTypeID:
          format: uuid
          type: string
      type: object
    CreateServerTypeEngineRunningRequest:
      description: This is the request for Create ServerTypeEngineRunning
      properties:
        serverTypeEngineRunning:
          $ref: '#/components/schemas/CreateServerTypeEngineRunningDetail'
      type: object
    CreateServerTypeEngineRunningResponse:
      description: This is the response for Create ServerTypeEngineRunning
      properties:
        error:
          $ref: '#/components/schemas/Error'
        result:
          $ref: '#/components/schemas/ServerTypeEngineRunningDetail'
        success:
          $ref: '#/components/schemas/OperationSuccess'
      type: object
    CreateServerTypeRequest:
      description: This is the request for Create Server Type
      properties:
        serverType:
          $ref: '#/components/schemas/CreateServerTypeDetail'
      type: object
    CreateServerTypeResponse:
      description: This is the response for Create Server Type
      properties:
        error:
          $ref: '#/components/schemas/Error'
        result:
          $ref: '#/components/schemas/ServerTypeDetail'
        success:
          $ref: '#/components/schemas/OperationSuccess'
      type: object
    CreateServiceDetail:
      description: This is the create request for a service object
      properties:
        channel:
          type: string
        coreID:
          format: uuid
          type: string
        dockerImageName:
          type: string
        kvpJSON:
          format: json
          type: string
        serviceCount:
          type: integer
        serviceName:
          type: string
        serviceType:
          $ref: '#/components/schemas/ServiceTypeEnum'
        tags:
          items:
            type: string
          type: array
      type: object
    CreateServiceInstanceDetail:
      properties:
        dockerContainerID:
          description: The docker container PID
          type: string
        hostID:
          format: uuid
          type: string
        port:
          type: integer
        serviceID:
          format: uuid
          type: string
      type: object
    CreateServiceRequest:
      properties:
        service:
          $ref: '#/components/schemas/CreateServiceDetail'
      type: object
    CreateServiceResponse:
      properties:
        error:
          $ref: '#/components/schemas/Error'
        result:
          $ref: '#/components/schemas/ServiceDetail'
        success:
          $ref: '#/components/schemas/OperationSuccess'
      type: object
    CreateTDODetail:
      description: Details for creating TDO in a createJob
      properties:
        description:
          description: description for the TDO
          type: string
        isPublic:
          description: whether the created TDO should be public
          type: boolean
        name:
          description: name for the TDO
          type: string
        startDateTime:
          description: This is the datetime for the TDO startDatetime
          example: '2018-03-20T09:12:28Z'
          format: date-time
          type: string
        stopDateTime:
          description: This is the datetime for the TDO stopDatetime
          example: '2018-03-20T09:12:28Z'
          format: date-time
          type: string
      type: object
    CreateTaskDetail:
      properties:
        coreTaskId:
          description: This is the core task id associated with this job
          type: string
        correlationTaskId:
          description: Correlation Task Id.  On create, this will be used instead
            of internalTaskId or coreTaskId on routes
          type: string
        dueDateTime:
          description: This is the time the task is due to be complete.  This is used
            by edge to set the priorities.
          example: '2018-03-20T09:12:28Z'
          format: date-time
          type: string
        engineId:
          description: The engineId to use.  If the engine is not available on edge,
            this will return an exception
          format: uuid
          type: string
        ioFolders:
          items:
            $ref: '#/components/schemas/CreateTaskIOInfo'
          type: array
        maxEngines:
          description: The maximum number of engine instances to run against this
            task.  Defaults to 1 if parallelProcessing is false, or 2 otherwise.
          type: integer
        maxProcessingSecondsPerWorkItem:
          description: The maximum number of seconds a work item can take.  If an
            engine instance is processing a chunk, engine toolkit will wait till the
            chunk is complete.
          format: int64
          type: integer
        maxRetries:
          default: null
          description: This is the max retries for the task
          type: integer
        maxWaitSecondsForChunk:
          description: The maximum number of seconds to wait for a new chunk before
            completing.
          format: int64
          type: integer
        numChunksPerWorkItem:
          description: The maximum number of chunks to process per work item
          format: int64
          type: integer
        parallelProcessing:
          description: If true, multiple engine instances can process this task in
            parallel.  If false, maxEngines will be 1.
          type: boolean
        parentMustBeCompleteBeforeStarting:
          description: If true, this task won't start until the parent is complete
          type: boolean
        payloadJSON:
          description: This is the payload encoded as a JSON string
          format: json
          type: string
        priority:
          default: 0
          description: The priority for the task. Default is 0.
          format: int32
          type: integer
        sendOutputToUris:
          description: A list of URIs to send processed chunks when the engine completes
            them.
          items:
            type: string
          type: array
        taskPayloadJSON:
          description: This is the taskPayload as a JSON string
          format: json
          type: string
        taskStatus:
          $ref: '#/components/schemas/JobStatusEnum'
      required:
      - engineId
      type: object
    CreateTaskIOInfo:
      description: This is the task IO Object that provides paramenters for the input
        and output
      properties:
        correlationID:
          description: On create, this field will be used to look up task routes for
            binding.
          type: string
        mode:
          $ref: '#/components/schemas/TaskIOModeEnum'
        optionsJSON:
          description: Any options for this input or output folder for the task to
            use on processing
          format: json
          type: string
        type:
          $ref: '#/components/schemas/TaskIOTypeEnum'
      type: object
    CreateTokenDetail:
      properties:
        accessAllOrganization:
          type: boolean
        apiRateLimitHour:
          format: int64
          type: integer
        bytesRateLimitHour:
          format: int64
          type: integer
        engineInstanceID:
          format: uuid
          type: string
        expiration:
          description: The unix timestamp for the token expiration. If 0, then it
            does not expire
          format: int64
          type: integer
        hostID:
          format: uuid
          type: string
        kvpJSON:
          format: json
          type: string
        maxAPI:
          format: int64
          type: integer
        maxBytes:
          format: int64
          type: integer
        maxTasks:
          format: int64
          type: integer
        organizationIDs:
          description: This is a list of Org ID that the token can access to. If accessAllOrganization
            is true, this value will be override.
          items:
            $ref: '#/components/schemas/OrganizationID'
          type: array
        roleIDs:
          items:
            format: uuid
            type: string
          type: array
        taskRateLimitHour:
          format: int64
          type: integer
        type:
          $ref: '#/components/schemas/TokenTypeEnum'
        userID:
          format: uuid
          type: string
      type: object
    CreateUserDetail:
      properties:
        accessAllOrganization:
          description: A user can access to all organization or not.
          type: boolean
        displayName:
          type: string
        email:
          format: email
          type: string
        expiration:
          description: The unix timestamp for the user expiration. If 0, then it does
            not expire
          format: int64
          type: integer
        internalOrganizationID:
          format: uuid
          type: string
        inviteRequested:
          type: boolean
        inviteURL:
          type: string
        isSuperAdmin:
          description: This can be only updated to true by another super admin.
          type: boolean
        kvpJSON:
          format: json
          type: string
        organizationIDs:
          description: This is a list of Org ID that the user can access to.
          items:
            $ref: '#/components/schemas/OrganizationID'
          type: array
        password:
          type: string
        passwordChangeRequired:
          type: boolean
        roleIDs:
          items:
            format: uuid
            type: string
          type: array
        status:
          $ref: '#/components/schemas/UserStatusEnum'
        userID:
          format: uuid
          type: string
        userName:
          type: string
        userSettingsJSON:
          format: json
          type: string
      type: object
    DeleteJobRequest:
      properties:
        jobID:
          description: Core Job ID
          format: string
          type: string
      type: object
    DeleteServerTypeRequest:
      properties:
        serverTypeID:
          format: uuid
          type: string
      type: object
    DesiredServersToServerTypeRequest:
      properties:
        desiredServers:
          description: The number of servers for this server type
          format: int32
          type: integer
      type: object
    DockerRegistry:
      properties:
        dockerPassword:
          description: This is the password for the docker username
          type: string
        dockerRegistryURL:
          type: string
        dockerUsername:
          description: This is the username that provides access to the docker registry
            to pull images
          type: string
        isAIWareRegistry:
          type: boolean
        name:
          description: This is the name for the Repo
          type: string
        token:
          description: This is a token to use for authentication
          type: string
      type: object
    DrainHostRequest:
      properties:
        detail:
          type: string
        reason:
          $ref: '#/components/schemas/HostDrainReasonEnum'
      type: object
    EngineBuildStateEnum:
      description: This describes the different states of the build.
      enum:
      - failed
      - paused
      - deployed
      - deploying
      - deploy-validation
      - deploy-validating
      type: string
    EngineCategoryDetail:
      properties:
        createdDateTime:
          description: This is the datetime the core was created
          example: '2018-03-20T09:12:28Z'
          format: date-time
          type: string
        engineCategoryID:
          description: The engine category ID.
          format: uuid
          type: string
        engineCategoryName:
          description: The name of the engine category
          type: string
        engineCategoryType:
          description: The type of the category
          type: string
        modifiedDateTime:
          description: This is the datetime the core was last modified.
          example: '2018-03-20T09:12:28Z'
          format: date-time
          type: string
      type: object
    EngineContainerCount:
      description: Engine container count info
      properties:
        engineID:
          description: engineID
          format: uuid
          type: string
        engineInstanceID:
          description: engine instance ID
          type: string
        engineName:
          description: engineName
          type: string
        values:
          description: This is an array of data count by time. Item format [timestamp,
            count]
          example: '[[1583204850, 1],[1583204880, 4],[1583204910, 4]]'
          items:
            items:
              format: int64
              type: integer
            type: array
          type: array
      type: object
    EngineContainerGroupByEnum:
      enum:
      - engineID
      - engineInstanceID
      type: string
    EngineDetail:
      properties:
        applicationIDsJSON:
          description: JSON Data for application_id
          format: json
          type: string
        child_priority_adjustment_on_complete:
          description: When this task completes, adjust the priority of child tasks
            by this value
          format: int32
          type: integer
        cpuShares:
          format: int32
          type: integer
        createdDateTime:
          description: This is the datetime the core was created
          example: '2018-03-20T09:12:28Z'
          format: date-time
          type: string
        dependencyJSON:
          description: JSON Data for dependency
          format: json
          type: string
        dontrunComplete:
          description: If true, do not run this engine.  Complete as soon as possible
            and do not assign work.
          type: boolean
        edge_version:
          description: edge version of the engine
          format: int32
          type: integer
        engineCategoryID:
          description: The UUID of the Engine Category
          format: uuid
          type: string
        engineID:
          format: uuid
          type: string
        engineName:
          description: Name of the Engine
          type: string
        engineOutputType:
          $ref: '#/components/schemas/EngineTypeEnum'
        engineState:
          $ref: '#/components/schemas/EngineStateEnum'
        engineType:
          $ref: '#/components/schemas/EngineTypeEnum'
        fieldsJSON:
          description: JSON Data for fields
          format: json
          type: string
        idleTimeout:
          format: int32
          type: integer
        internalOrganizationID:
          format: uuid
          type: string
        jwtRightsJSON:
          description: JSON Data for jwt_rights
          format: json
          type: string
        maxProcessingSecondsPerWorkItem:
          format: int32
          type: integer
        maxWaitSecondsForChunk:
          format: int32
          type: integer
        minAvailable:
          format: int64
          type: integer
        minRunning:
          format: int64
          type: integer
        modifiedDateTime:
          description: This is the datetime the core was last modified.
          example: '2018-03-20T09:12:28Z'
          format: date-time
          type: string
        numChunksPerWorkItem:
          format: int32
          type: integer
        parallelProcessing:
          description: If true, the engine can handle multiple instances working against
            the same chunk task.
          type: boolean
        parentCompleteBeforeStart:
          description: If true, the engine waits for the parent(s) to be complete
            before starting
          type: boolean
        preload:
          description: If it is `true`, that means the engine need to pull docker
            image to local
          type: boolean
        priority_adjustment:
          description: On new tasks with this engine, add this value to the priority
            of that task
          format: int32
          type: integer
        replacementEngineID:
          format: uuid
          type: string
        updateStatusInterval:
          format: int32
          type: integer
        validationJSON:
          description: JSON Data for validation
          format: json
          type: string
      type: object
    EngineErrorChartTypeEnum:
      enum:
      - total_engine_errors
      - total_failed_task_by_engine
      type: string
    EngineErrorTimeRangesCountsInfo:
      properties:
        count:
          description: Total amount of engine error with a particular status and a
            time range
          format: int64
          type: integer
        endDateTime:
          description: Start of a time range
          example: 2018-03-20 10:12:28+00:00
          format: date-time
          type: string
        engineID:
          format: uuid
          type: string
        engineName:
          description: Engine name
          type: string
        startDateTime:
          description: Start of a time range
          example: 2018-03-20 09:12:28+00:00
          format: date-time
          type: string
        values:
          description: This is an array of failed task count by engine_id in a time
            range. Item format [timestamp, count]
          example: '[[1583204850, 1],[1583204880, 4],[1583204910, 4]]'
          items:
            items:
              format: int64
              type: integer
            type: array
          type: array
      type: object
    EngineID:
      description: Engine ID
      format: uuid
      type: string
    EngineInstanceActionEnum:
      enum:
      - process
      - wait
      - terminate
      type: string
    EngineInstanceInfo:
      description: EngineInstance Information
      properties:
        additionalEngineIDs:
          description: This is a list of additional engines this instance can handle
          items:
            type: string
          type: array
        buildID:
          format: uuid
          type: string
        createdDateTime:
          description: This is the datetime the core was created
          example: '2018-03-20T09:12:28Z'
          format: date-time
          type: string
        dockerContainerID:
          description: The docker container PID
          type: string
        drain:
          description: The current engine instance is draining or not
          type: boolean
        engineID:
          format: uuid
          type: string
        engineInstanceID:
          format: uuid
          type: string
        engineToolkitVersion:
          description: The engine toolkit version
          type: string
        errors:
          items:
            $ref: '#/components/schemas/Error'
          type: array
        hostID:
          format: uuid
          type: string
        lastUpdate:
          example: '2018-03-20T09:12:28Z'
          format: date-time
          type: string
        launchEnvVariables:
          type: object
        launchID:
          format: uuid
          type: string
        launchStatus:
          $ref: '#/components/schemas/LaunchStatusEnum'
        launchStatusInfo:
          description: Additional to log about launch status
          type: string
        licenseExpirationSeconds:
          description: Seconds till the license expires
          type: integer
        modifiedDateTime:
          description: This is the datetime the core was last modified.
          example: '2018-03-20T09:12:28Z'
          format: date-time
          type: string
        runtimeExpirationSeconds:
          description: Seconds till runtime should expire
          type: integer
        startupTimestamp:
          description: Timestamp of engine instance startup in UTC
          format: int64
          type: integer
        status:
          $ref: '#/components/schemas/EngineStatusEnum'
        warnings:
          items:
            $ref: '#/components/schemas/Error'
          type: array
        workRequestID:
          format: uuid
          type: string
      type: object
    EngineInstanceRegistrationInfo:
      properties:
        action:
          $ref: '#/components/schemas/EngineRegistrationActionEnum'
        engineInstanceID:
          format: uuid
          type: string
        engineInstanceToken:
          description: This is the security token the engine must use on other calls
          type: string
        runtimeExpirationSeconds:
          type: integer
      type: object
    EngineInstanceStatus:
      description: payload for updateEngineInstanceStatus API -
      properties:
        containerStatus:
          $ref: '#/components/schemas/ContainerStatus'
        hostID:
          format: uuid
          type: string
        mode:
          $ref: '#/components/schemas/EngineInstanceStatusModeEnum'
        priorTimestamp:
          description: UTC Timestamp of last status update or start of new task
          format: int64
          type: integer
        secondsToTTL:
          type: integer
        taskStatuses:
          items:
            $ref: '#/components/schemas/TaskStatusDetail'
          type: array
        timestamp:
          description: UTC Timestamp of NOW()
          format: int64
          type: integer
        workRequestDetails:
          type: string
        workRequestID:
          format: uuid
          type: string
        workRequestStatus:
          $ref: '#/components/schemas/WorkRequestStatusEnum'
          description: The final status of the last work request
      type: object
    EngineInstanceStatusModeEnum:
      enum:
      - idle
      - processing
      type: string
    EngineInstanceWorkDetailsResponse:
      description: response payload for workdetail
      properties:
        error:
          $ref: '#/components/schemas/Error'
        result:
          properties:
            workItem:
              $ref: '#/components/schemas/ArrayOfEngineInstanceWorkItem'
            workRequestDetails:
              type: string
            workRequestID:
              format: uuid
              type: string
            workRequestStatus:
              $ref: '#/components/schemas/WorkRequestStatusEnum'
          type: object
        success:
          $ref: '#/components/schemas/OperationSuccess'
      type: object
    EngineInstanceWorkItem:
      additionalProperties: true
      properties:
        engineID:
          format: uuid
          type: string
        engineType:
          $ref: '#/components/schemas/EngineTypeEnum'
        internalJobID:
          description: Internal Job ID
          format: uuid
          type: string
        internalOrganizationID:
          format: uuid
          type: string
        internalTaskID:
          description: Internal Task ID
          format: uuid
          type: string
        isRetry:
          description: If true, a prior version of this task has failed.  The outputs
            and inputs have to be reset based on the work that has been processed
            by the downstream tasks
          type: boolean
        jobID:
          description: Core Job ID
          format: string
          type: string
        maxProcessingSecondsPerWorkItem:
          description: The number of seconds a work item can take to process the chunks.  This
            will not interrupt a chunk processing time.
          format: int64
          type: integer
        maxWaitSecondsForChunk:
          description: The max time to wait for a chunk. Default is 0.
          format: int64
          type: integer
        numChunksPerWorkItem:
          description: The number of units to process. Applicable to chunk engines,
            number of chunks to work on this task
          format: int64
          type: integer
        organizationID:
          description: This is the organization id in core (int), not the internal
            organization id
          type: integer
        sendOutputToUris:
          description: A list of URIs to send processed chunks when the engine completes
            them.
          items:
            type: string
          type: array
        taskID:
          description: Core Task ID
          format: string
          type: string
        taskIOs:
          items:
            $ref: '#/components/schemas/TaskIO'
          type: array
        taskParentStatus:
          $ref: '#/components/schemas/TaskStatusEnum'
        taskPayload:
          type: object
        taskRouteID:
          description: the task route associated with this work item
          type: string
      type: object
    EngineInstanceWorkRequest:
      properties:
        containerStatus:
          $ref: '#/components/schemas/ContainerStatus'
        engineToolkitVersion:
          description: The version of engine toolkit format to be gitbranch:gitcommit:epochBuildDate
          type: string
        hostAction:
          $ref: '#/components/schemas/HostActionEnum'
        hostID:
          format: uuid
          type: string
        requestWorkForEngineIds:
          description: This is the set of engine ids that this instance will get work
            for.  Controller will return the highest priority task across the set
            of engine ids
          items:
            type: string
          type: array
        taskStatuses:
          items:
            $ref: '#/components/schemas/TaskStatusDetail'
          type: array
        workRequestDetails:
          type: string
        workRequestID:
          format: uuid
          type: string
        workRequestStatus:
          $ref: '#/components/schemas/WorkRequestStatusEnum'
      type: object
    EngineInstanceWorkRequestResponse:
      additionalProperties: true
      properties:
        error:
          $ref: '#/components/schemas/Error'
        result:
          properties:
            action:
              $ref: '#/components/schemas/EngineInstanceActionEnum'
            workItem:
              $ref: '#/components/schemas/ArrayOfEngineInstanceWorkItem'
            workRequestID:
              format: uuid
              type: string
          type: object
        success:
          $ref: '#/components/schemas/OperationSuccess'
      type: object
    EngineLaunchDetail:
      properties:
        completedTimestamp:
          description: UTC Timestamp of NOW() when launch was completed
          format: int64
          type: integer
        createdDateTime:
          description: This is the datetime the core was created
          example: '2018-03-20T09:12:28Z'
          format: date-time
          type: string
        hostID:
          format: uuid
          type: string
        launchAction:
          $ref: '#/components/schemas/LaunchActionEnum'
        launchID:
          format: uuid
          type: string
        launchStatus:
          $ref: '#/components/schemas/LaunchStatusEnum'
        launchSuccessful:
          description: If true, the launch was successful
          type: boolean
        modifiedDateTime:
          description: This is the datetime the core was last modified.
          example: '2018-03-20T09:12:28Z'
          format: date-time
          type: string
      type: object
    EngineRegistrationActionEnum:
      enum:
      - launch
      - terminate
      type: string
    EngineStateEnum:
      description: This describes the different states of the engine.  If paused,
        the tasks for this engine will not run.  If replace, then a different engine
        as specified in the table will be used.
      enum:
      - active
      - paused
      - replace
      type: string
    EngineStatusEnum:
      enum:
      - active
      - terminated
      type: string
    EngineTypeEnum:
      description: These are the different types of engines on what they can consume.  Chunk
        engines can consumes messages.  Stream engines consume bytes.  Batch does
        not consume anything.
      enum:
      - chunk
      - stream
      - batch
      - any
      type: string
    EnvKeyValue:
      description: Environment variable
      properties:
        key:
          type: string
        value:
          type: string
      type: object
    Error:
      additionalProperties: true
      properties:
        description:
          description: Description of Error
          type: string
        detail:
          description: Details about runtime information on error. This includes items
            like Job ID and Task ID
          type: string
        id:
          description: Unique Error ID
          type: string
      type: object
    FailureReasonEnum:
      description: Task Failure Reason if taskStatus=`failed`. Available at the end
        of a batch, when getting the next batch to work, or last heartbeat before
        exiting. May not present in heartbeat update
      enum:
      - internal_error
      - unknown
      - connection
      - rate_limited
      - unauthorized
      - api
      - resources
      - not_found
      - core_api
      - bad_data
      - scheduling
      - none
      type: string
    GPUEnum:
      enum:
      - none
      - aws_p2
      - aws_p3
      - cuda
      type: string
    GetAdminServiceInstancesResponse:
      properties:
        count:
          description: Total records for the query
          type: integer
        error:
          $ref: '#/components/schemas/Error'
        limit:
          description: the number of service instances to return.
          type: integer
        offset:
          description: the number of service instances to skip before getting the
            result set
          type: integer
        result:
          items:
            $ref: '#/components/schemas/ServiceInstanceDetail'
          type: array
        success:
          $ref: '#/components/schemas/OperationSuccess'
      type: object
    GetAdminServicesResponse:
      properties:
        count:
          description: Total records for the query
          type: integer
        error:
          $ref: '#/components/schemas/Error'
        limit:
          description: the number of applications to return.
          type: integer
        offset:
          description: the number of applications to skip before getting the result
            set
          type: integer
        result:
          items:
            $ref: '#/components/schemas/ServiceDetail'
          type: array
        success:
          $ref: '#/components/schemas/OperationSuccess'
      type: object
    GetApplicationsResponse:
      properties:
        error:
          $ref: '#/components/schemas/Error'
        success:
          $ref: '#/components/schemas/OperationSuccess'
      type: object
    GetBacklogSummaryResponse:
      description: Response for backlog summary
      properties:
        error:
          $ref: '#/components/schemas/Error'
        result:
          description: Backlog
          items:
            $ref: '#/components/schemas/BacklogSummaryDetail'
          type: array
        success:
          $ref: '#/components/schemas/OperationSuccess'
      type: object
    GetCoresResponse:
      description: This is the response for get_cores Request
      properties:
        error:
          $ref: '#/components/schemas/Error'
        result:
          items:
            $ref: '#/components/schemas/CoreDetail'
          type: array
        success:
          $ref: '#/components/schemas/OperationSuccess'
      type: object
    GetEngineBuildByStateResponse:
      description: This is the response for get_engine_builds_by_state request
      properties:
        error:
          $ref: '#/components/schemas/Error'
        result:
          items:
            $ref: '#/components/schemas/BuildDetail'
          type: array
        success:
          $ref: '#/components/schemas/OperationSuccess'
      type: object
    GetEngineBuildResponse:
      description: This is the response for get_engine_build Request
      properties:
        error:
          $ref: '#/components/schemas/Error'
        result:
          $ref: '#/components/schemas/BuildDetail'
        success:
          $ref: '#/components/schemas/OperationSuccess'
      type: object
    GetEngineBuildsResponse:
      description: This is the response for get_engine_builds Request
      properties:
        error:
          $ref: '#/components/schemas/Error'
        result:
          items:
            $ref: '#/components/schemas/BuildDetail'
          type: array
        success:
          $ref: '#/components/schemas/OperationSuccess'
      type: object
    GetEngineCategoriesResponse:
      description: This is the response object for get engine categories.
      properties:
        error:
          $ref: '#/components/schemas/Error'
        result:
          $ref: '#/components/schemas/ArrayOfEngineCategories'
        success:
          $ref: '#/components/schemas/OperationSuccess'
      type: object
    GetEngineCategoryDetailResponse:
      properties:
        error:
          $ref: '#/components/schemas/Error'
        result:
          $ref: '#/components/schemas/EngineCategoryDetail'
        success:
          $ref: '#/components/schemas/OperationSuccess'
      type: object
    GetEngineContainerCountResponse:
      description: This is the response for engine container count
      properties:
        counts:
          items:
            $ref: '#/components/schemas/EngineContainerCount'
          type: array
        endDateTime:
          description: This is the datetime of the end of the stats period
          example: 2018-03-20 10:12:28+00:00
          format: date-time
          type: string
        error:
          $ref: '#/components/schemas/Error'
        startDateTime:
          description: This is the datetime of the beginning of the stats period
          example: 2018-03-20 09:12:28+00:00
          format: date-time
          type: string
        success:
          $ref: '#/components/schemas/OperationSuccess'
      type: object
    GetEngineDetailResponse:
      description: This is the response for get_engine_detail
      properties:
        error:
          $ref: '#/components/schemas/Error'
        result:
          $ref: '#/components/schemas/EngineDetail'
        success:
          $ref: '#/components/schemas/OperationSuccess'
      type: object
    GetEngineErrorTimeRangesResponse:
      example:
        counts:
        - count: 0
          endDateTime: 2018-03-20 10:12:28+00:00
          startDateTime: 2018-03-20 09:12:28+00:00
        - count: 0
          endDateTime: 2018-03-20 10:12:28+00:00
          startDateTime: 2018-03-20 09:12:28+00:00
        endDateTime: 2018-03-20 10:12:28
        startDateTime: 2018-03-20 09:12:28+00:00
      properties:
        counts:
          items:
            $ref: '#/components/schemas/EngineErrorTimeRangesCountsInfo'
          type: array
        endDateTime:
          description: This is the datetime of the end of the stats period
          example: 2018-03-20 10:12:28+00:00
          format: date-time
          type: string
        error:
          $ref: '#/components/schemas/Error'
        startDateTime:
          description: This is the datetime of the beginning of the stats period
          example: 2018-03-20 09:12:28+00:00
          format: date-time
          type: string
        success:
          $ref: '#/components/schemas/OperationSuccess'
      type: object
    GetEngineInstanceListResponse:
      description: This is the response for get_engine_instance_list Request
      properties:
        count:
          description: Total records for the query
          type: integer
        error:
          $ref: '#/components/schemas/Error'
        limit:
          description: the number of engine instance to return.
          type: integer
        offset:
          description: the number of engine instance to skip before getting the result
            set
          type: integer
        result:
          items:
            $ref: '#/components/schemas/EngineInstanceInfo'
          type: array
        success:
          $ref: '#/components/schemas/OperationSuccess'
      type: object
    GetEngineInstancesResponse:
      description: This is the response for get_engine_instances Request
      properties:
        error:
          $ref: '#/components/schemas/Error'
        result:
          items:
            $ref: '#/components/schemas/EngineInstanceInfo'
          type: array
        success:
          $ref: '#/components/schemas/OperationSuccess'
      type: object
    GetEngineLaunchResponse:
      description: This is the response for get_engine_detail
      properties:
        error:
          $ref: '#/components/schemas/Error'
        result:
          $ref: '#/components/schemas/EngineLaunchDetail'
        success:
          $ref: '#/components/schemas/OperationSuccess'
      type: object
    GetEngineLaunchesResponse:
      description: This is the response for get_engine_launches
      properties:
        error:
          $ref: '#/components/schemas/Error'
        result:
          items:
            $ref: '#/components/schemas/EngineLaunchDetail'
          type: array
        success:
          $ref: '#/components/schemas/OperationSuccess'
      type: object
    GetEnginesForResourceResponse:
      description: This is the response for get_engines_for_resource request
      properties:
        count:
          description: Total records for the query
          type: integer
        error:
          $ref: '#/components/schemas/Error'
        limit:
          description: the number of items to return.
          type: integer
        offset:
          description: the number of engineIDs to skip before getting the result set
          type: integer
        result:
          items:
            $ref: '#/components/schemas/EngineID'
          type: array
        success:
          $ref: '#/components/schemas/OperationSuccess'
      type: object
    GetEnginesResponse:
      description: This is the response for get_engines Request
      properties:
        count:
          description: Total records for the query
          type: integer
        error:
          $ref: '#/components/schemas/Error'
        limit:
          description: the number of engines to return.
          type: integer
        offset:
          description: the number of engines to skip before getting the result set
          type: integer
        result:
          items:
            $ref: '#/components/schemas/EngineDetail'
          type: array
        success:
          $ref: '#/components/schemas/OperationSuccess'
      type: object
    GetHostCPUUsageResponse:
      description: This is the response for the host cpu usage
      properties:
        data:
          items:
            $ref: '#/components/schemas/HostCPUUsageInfo'
          type: array
        endDateTime:
          description: This is the datetime of the end of the stats period
          example: 2018-03-20 10:12:28+00:00
          format: date-time
          type: string
        error:
          $ref: '#/components/schemas/Error'
        startDateTime:
          description: This is the datetime of the beginning of the stats period
          example: 2018-03-20 09:12:28+00:00
          format: date-time
          type: string
        success:
          $ref: '#/components/schemas/OperationSuccess'
      type: object
    GetHostLaunchResponse:
      description: This is the response for get_host_detail
      properties:
        error:
          $ref: '#/components/schemas/Error'
        result:
          $ref: '#/components/schemas/HostLaunchDetail'
        success:
          $ref: '#/components/schemas/OperationSuccess'
      type: object
    GetHostMemoryUsageResponse:
      description: This is the response for the host memory usage
      properties:
        data:
          items:
            $ref: '#/components/schemas/HostMemoryUsageInfo'
          type: array
        endDateTime:
          description: This is the datetime of the end of the stats period
          example: 2018-03-20 10:12:28+00:00
          format: date-time
          type: string
        error:
          $ref: '#/components/schemas/Error'
        startDateTime:
          description: This is the datetime of the beginning of the stats period
          example: 2018-03-20 09:12:28+00:00
          format: date-time
          type: string
        success:
          $ref: '#/components/schemas/OperationSuccess'
      type: object
    GetJobDetailResponse:
      properties:
        job:
          $ref: '#/components/schemas/JobDetail'
      type: object
    GetJobListResponse:
      properties:
        count:
          description: Total records for the query
          type: integer
        error:
          $ref: '#/components/schemas/Error'
        limit:
          description: the number of jobs to return.
          type: integer
        offset:
          description: the number of jobs to skip before getting the result set
          type: integer
        result:
          items:
            $ref: '#/components/schemas/JobDetail'
          type: array
        success:
          $ref: '#/components/schemas/OperationSuccess'
      type: object
    GetJobOutputResponse:
      properties:
        output:
          $ref: '#/components/schemas/JobOutput'
      type: object
    GetJobOutputsResponse:
      properties:
        outputs:
          $ref: '#/components/schemas/JobOutputs'
      type: object
    GetJobPerformanceResponse:
      example:
        data:
        - cpu: 10
          dateTime: 2018-03-20 08:00:00+00:00
          gpu: 0
          memory: 20
        - cpu: 0
          dateTime: 2018-03-20 09:00:00+00:00
          gpu: 20
          memory: 40
        endDateTime: 2018-03-20 10:12:28+00:00
        startDateTime: 2018-03-20 09:12:28+00:00
      properties:
        data:
          items:
            $ref: '#/components/schemas/JobPerformanceInfo'
          type: array
        endDateTime:
          description: This is the datetime of the end of the stats period
          example: 2018-03-20 10:12:28+00:00
          format: date-time
          type: string
        startDateTime:
          description: This is the datetime of the beginning of the stats period
          example: 2018-03-20 09:12:28+00:00
          format: date-time
          type: string
      type: object
    GetJobStatusResponse:
      properties:
        job:
          $ref: '#/components/schemas/JobStatus'
      type: object
    GetJobWorkRequestResponse:
      description: This is the response for get Job Work-request Request
      properties:
        count:
          description: Total records for the query
          type: integer
        error:
          $ref: '#/components/schemas/Error'
        limit:
          description: the number of records to return.
          type: integer
        offset:
          description: the number of records to skip before getting the result set
          type: integer
        result:
          items:
            $ref: '#/components/schemas/JobWorkRequest'
          type: array
        success:
          $ref: '#/components/schemas/OperationSuccess'
      type: object
    GetJobsBacklogCountResponse:
      description: This is the response for jobs backlog count by engine
      properties:
        counts:
          items:
            $ref: '#/components/schemas/JobBacklogCount'
          type: array
        endDateTime:
          description: This is the datetime of the end of the stats period
          example: 2018-03-20 10:12:28+00:00
          format: date-time
          type: string
        error:
          $ref: '#/components/schemas/Error'
        startDateTime:
          description: This is the datetime of the beginning of the stats period
          example: 2018-03-20 09:12:28+00:00
          format: date-time
          type: string
        success:
          $ref: '#/components/schemas/OperationSuccess'
      type: object
    GetJobsOrganizationStatsResponse:
      example:
        counts:
        - count: 1
          organizationId: 7682
          organizationName: Veritone Inc
          status: pending
        - count: 2
          organizationId: 7682
          organizationName: Veritone Inc
          status: running
        endDateTime: 2018-03-20 10:12:58+00:00
        startDateTime: 2018-03-20 09:12:28+00:00
      properties:
        counts:
          items:
            $ref: '#/components/schemas/JobsOrganizationCountsInfo'
          type: array
        endDateTime:
          description: This is the datetime of the end of the stats period
          example: 2018-03-20 10:12:28+00:00
          format: date-time
          type: string
        error:
          $ref: '#/components/schemas/Error'
        startDateTime:
          description: This is the datetime of the beginning of the stats period
          example: 2018-03-20 09:12:28+00:00
          format: date-time
          type: string
        success:
          $ref: '#/components/schemas/OperationSuccess'
      type: object
    GetJobsPerformanceResponse:
      example:
        data:
        - cpu: 10
          dateTime: 2018-03-20 08:00:00+00:00
          gpu: 0
          memory: 20
        - cpu: 0
          dateTime: 2018-03-20 09:00:00+00:00
          gpu: 20
          memory: 40
        endDateTime: 2018-03-20 10:12:28+00:00
        startDateTime: 2018-03-20 09:12:28+00:00
      properties:
        data:
          items:
            $ref: '#/components/schemas/JobPerformanceInfo'
          type: array
        endDateTime:
          description: This is the datetime of the end of the stats period
          example: 2018-03-20 10:12:28+00:00
          format: date-time
          type: string
        startDateTime:
          description: This is the datetime of the beginning of the stats period
          example: 2018-03-20 09:12:28+00:00
          format: date-time
          type: string
      type: object
    GetJobsStatsResponse:
      properties:
        counts:
          items:
            $ref: '#/components/schemas/JobsCountsInfo'
          type: array
        endDateTime:
          description: This is the datetime of the end of the stats period
          example: 2018-03-20 10:12:28+00:00
          format: date-time
          type: string
        error:
          $ref: '#/components/schemas/Error'
        startDateTime:
          description: This is the datetime of the beginning of the stats period
          example: 2018-03-20 09:12:28+00:00
          format: date-time
          type: string
        success:
          $ref: '#/components/schemas/OperationSuccess'
      type: object
    GetJobsTimeRangesStatsResponse:
      example:
        counts:
        - count: 0
          endDateTime: 2018-03-20 10:12:28+00:00
          startDateTime: 2018-03-20 09:12:28+00:00
        - count: 0
          endDateTime: 2018-03-20 10:12:28+00:00
          startDateTime: 2018-03-20 09:12:28+00:00
        endDateTime: 2018-03-20 10:12:28+00:00
        startDateTime: 2018-03-20 09:12:28+00:00
      properties:
        counts:
          items:
            $ref: '#/components/schemas/JobsTimeRangesCountsInfo'
          type: array
        endDateTime:
          description: This is the datetime of the end of the stats period
          example: 2018-03-20 10:12:28+00:00
          format: date-time
          type: string
        error:
          $ref: '#/components/schemas/Error'
        startDateTime:
          description: This is the datetime of the beginning of the stats period
          example: 2018-03-20 09:12:28+00:00
          format: date-time
          type: string
        success:
          $ref: '#/components/schemas/OperationSuccess'
      type: object
    GetLicensesResponse:
      properties:
        error:
          $ref: '#/components/schemas/Error'
        result:
          items:
            $ref: '#/components/schemas/LicenseDetail'
          type: array
        success:
          $ref: '#/components/schemas/OperationSuccess'
      type: object
    GetRatePendingScheduledJobsResponse:
      properties:
        counts:
          items:
            $ref: '#/components/schemas/RatePendingScheduledJobInfo'
          type: array
        endDateTime:
          description: This is the datetime of the end of the stats period
          example: 2018-03-20 10:12:28+00:00
          format: date-time
          type: string
        error:
          $ref: '#/components/schemas/Error'
        startDateTime:
          description: This is the datetime of the beginning of the stats period
          example: 2018-03-20 09:12:28+00:00
          format: date-time
          type: string
        success:
          $ref: '#/components/schemas/OperationSuccess'
      type: object
    GetResourceResponse:
      description: This is the response for get_resource request
      properties:
        error:
          $ref: '#/components/schemas/Error'
        result:
          $ref: '#/components/schemas/ResourceDetail'
        success:
          $ref: '#/components/schemas/OperationSuccess'
      type: object
    GetResourcesForEngineInstanceResponse:
      additionalProperties: true
      properties:
        error:
          $ref: '#/components/schemas/Error'
        result:
          properties:
            result:
              items:
                $ref: '#/components/schemas/ResourceDetail'
              type: array
            workRequestID:
              format: uuid
              type: string
          type: object
        success:
          $ref: '#/components/schemas/OperationSuccess'
      type: object
    GetResourcesForEngineResponse:
      description: This is the response for get_resources_for_engine request
      properties:
        count:
          description: Total records for the query
          type: integer
        error:
          $ref: '#/components/schemas/Error'
        limit:
          description: the number of items to return.
          type: integer
        offset:
          description: the number of items to skip before getting the result set
          type: integer
        result:
          items:
            $ref: '#/components/schemas/ResourceDetail'
          type: array
        success:
          $ref: '#/components/schemas/OperationSuccess'
      type: object
    GetResourcesForHostResponse:
      description: This is the response for get_resources_for_host request
      properties:
        count:
          description: Total records for the query
          type: integer
        error:
          $ref: '#/components/schemas/Error'
        limit:
          description: the number of items to return.
          type: integer
        offset:
          description: the number of items to skip before getting the result set
          type: integer
        result:
          items:
            $ref: '#/components/schemas/ResourceDetail'
          type: array
        success:
          $ref: '#/components/schemas/OperationSuccess'
      type: object
    GetResourcesForServiceInstanceResponse:
      additionalProperties: true
      properties:
        error:
          $ref: '#/components/schemas/Error'
        result:
          items:
            $ref: '#/components/schemas/ResourceDetail'
          type: array
        success:
          $ref: '#/components/schemas/OperationSuccess'
      type: object
    GetResourcesForServiceResponse:
      description: This is the response for get_resources_for_service request
      properties:
        count:
          description: Total records for the query
          type: integer
        error:
          $ref: '#/components/schemas/Error'
        limit:
          description: the number of items to return.
          type: integer
        offset:
          description: the number of items to skip before getting the result set
          type: integer
        result:
          items:
            $ref: '#/components/schemas/ResourceDetail'
          type: array
        success:
          $ref: '#/components/schemas/OperationSuccess'
      type: object
    GetResourcesResponse:
      description: This is the response for get_resources request
      properties:
        count:
          description: Total records for the query
          type: integer
        error:
          $ref: '#/components/schemas/Error'
        limit:
          description: the number of engines to return.
          type: integer
        offset:
          description: the number of engines to skip before getting the result set
          type: integer
        result:
          items:
            $ref: '#/components/schemas/ResourceDetail'
          type: array
        success:
          $ref: '#/components/schemas/OperationSuccess'
      type: object
    GetScheduledJobDetailResponse:
      properties:
        error:
          $ref: '#/components/schemas/Error'
        result:
          $ref: '#/components/schemas/ScheduledJobDetail'
        success:
          $ref: '#/components/schemas/OperationSuccess'
      type: object
    GetScheduledJobsResponse:
      properties:
        count:
          description: Total records for the query
          type: integer
        error:
          $ref: '#/components/schemas/Error'
        limit:
          description: the number of scheduled jobs to return.
          type: integer
        offset:
          description: the number of scheduled jobs to skip before getting the result
            set
          type: integer
        result:
          items:
            $ref: '#/components/schemas/ScheduledJobDetail'
          type: array
        success:
          $ref: '#/components/schemas/OperationSuccess'
      type: object
    GetServerErrorCountsResponse:
      properties:
        counts:
          items:
            $ref: '#/components/schemas/ServerErrorCountInfo'
          type: array
        endDateTime:
          description: End of a time range
          example: 2018-03-20 10:13:28+00:00
          format: date-time
          type: string
        error:
          $ref: '#/components/schemas/Error'
        startDateTime:
          description: Start of a time range
          example: 2018-03-20 09:12:28+00:00
          format: date-time
          type: string
        success:
          $ref: '#/components/schemas/OperationSuccess'
      type: object
    GetServerTypeResponse:
      description: This is the response for get Server Type Request
      properties:
        error:
          $ref: '#/components/schemas/Error'
        result:
          $ref: '#/components/schemas/ServerTypeDetail'
        success:
          $ref: '#/components/schemas/OperationSuccess'
      type: object
    GetServerTypeRunningEngineDetailResponse:
      description: This is the response for get Server Type-Running Engine Detail
        Request
      properties:
        error:
          $ref: '#/components/schemas/Error'
        result:
          $ref: '#/components/schemas/ServerTypeEngineRunningDetail'
        success:
          $ref: '#/components/schemas/OperationSuccess'
      type: object
    GetServerTypeRunningEnginesResponse:
      description: This is the response for get Server Type-Running Engine Request
      properties:
        count:
          description: Total records for the query
          format: int64
          type: integer
        error:
          $ref: '#/components/schemas/Error'
        limit:
          description: The number of records to return.
          format: int64
          type: integer
        offset:
          description: The number of records to skip before getting the result set
          format: int64
          type: integer
        result:
          items:
            $ref: '#/components/schemas/ServerTypeEngineRunningDetail'
          type: array
        success:
          $ref: '#/components/schemas/OperationSuccess'
      type: object
    GetServerTypesResponse:
      description: This is the response for get Server Type Request
      properties:
        error:
          $ref: '#/components/schemas/Error'
        result:
          items:
            $ref: '#/components/schemas/ServerTypeDetail'
          type: array
        success:
          $ref: '#/components/schemas/OperationSuccess'
      type: object
    GetServiceInstancesResponse:
      properties:
        error:
          $ref: '#/components/schemas/Error'
        success:
          $ref: '#/components/schemas/OperationSuccess'
      type: object
    GetTaskDetailResponse:
      properties:
        task:
          $ref: '#/components/schemas/TaskDetail'
      type: object
    GetTaskErrorsResponse:
      description: This is the response for get Task error list Request
      properties:
        count:
          description: Total records for the query
          type: integer
        endDateTime:
          description: This is the datetime of the end of the stats period
          example: 2018-03-20 10:12:28+00:00
          format: date-time
          type: string
        error:
          $ref: '#/components/schemas/Error'
        limit:
          description: the number of records to return.
          type: integer
        offset:
          description: the number of records to skip before getting the result set
          type: integer
        result:
          items:
            $ref: '#/components/schemas/TaskErrorInfo'
          type: array
        startDateTime:
          description: This is the datetime of the beginning of the stats period
          example: 2018-03-20 09:12:28+00:00
          format: date-time
          type: string
        success:
          $ref: '#/components/schemas/OperationSuccess'
      type: object
    GetTaskOutputResponse:
      properties:
        output:
          $ref: '#/components/schemas/TaskOutput'
      type: object
    GetTaskOutputsResponse:
      properties:
        outputs:
          $ref: '#/components/schemas/TaskOutputs'
      type: object
    GetTaskSyncBacklogResponse:
      properties:
        counts:
          items:
            $ref: '#/components/schemas/TaskSyncBacklogInfo'
          type: array
        endDateTime:
          description: End of a time range
          example: 2018-03-20 10:13:28+00:00
          format: date-time
          type: string
        error:
          $ref: '#/components/schemas/Error'
        startDateTime:
          description: Start of a time range
          example: 2018-03-20 09:12:28+00:00
          format: date-time
          type: string
        success:
          $ref: '#/components/schemas/OperationSuccess'
      type: object
    GetTaskWorkRequestResponse:
      description: This is the response for get Job Work-request Request
      properties:
        error:
          $ref: '#/components/schemas/Error'
        result:
          $ref: '#/components/schemas/TaskWorkRequest'
        success:
          $ref: '#/components/schemas/OperationSuccess'
      type: object
    GetTasksCategoriesStatsResponse:
      example:
        counts:
        - count: 0
          engineCategoryName: Logo Recognition
        - count: 0
          engineCategoryName: Logo Recognition
        endDateTime: 2018-03-20 10:12:28+00:00
        startDateTime: 2018-03-20 09:12:28+00:00
      properties:
        counts:
          items:
            $ref: '#/components/schemas/TasksCategoriesCountsInfo'
          type: array
        endDateTime:
          description: This is the datetime of the end of the stats period
          example: 2018-03-20 10:12:28+00:00
          format: date-time
          type: string
        error:
          $ref: '#/components/schemas/Error'
        startDateTime:
          description: This is the datetime of the beginning of the stats period
          example: 2018-03-20 09:12:28+00:00
          format: date-time
          type: string
        success:
          $ref: '#/components/schemas/OperationSuccess'
      type: object
    GetTasksEnginesStatsResponse:
      example:
        counts:
        - count: 16
          engineID: 212ca2ac-24d4-439d-b02f-fba88f322e94
          engineName: Speechmatic en global engine
          status: queued
        - count: 23
          engineID: 339ca2ac-24d4-439d-b02f-fba88f322e89
          engineName: Google speech to text
          status: complete
        endDateTime: 2018-03-20 10:12:28+00:00
        startDateTime: 2018-03-20 09:12:28+00:00
      properties:
        counts:
          items:
            $ref: '#/components/schemas/TasksEnginesCountsInfo'
          type: array
        endDateTime:
          description: This is the datetime of the end of the stats period
          example: 2018-03-20 10:12:28+00:00
          format: date-time
          type: string
        error:
          $ref: '#/components/schemas/Error'
        startDateTime:
          description: This is the datetime of the beginning of the stats period
          example: 2018-03-20 09:12:28+00:00
          format: date-time
          type: string
        success:
          $ref: '#/components/schemas/OperationSuccess'
      type: object
    GetTasksErrorTypeCountByEngineResponse:
      properties:
        counts:
          items:
            $ref: '#/components/schemas/TasksErrorTypeCountByEngineInfo'
          type: array
        endDateTime:
          description: This is the datetime of the end of the stats period
          example: 2018-03-20 10:12:28+00:00
          format: date-time
          type: string
        error:
          $ref: '#/components/schemas/Error'
        startDateTime:
          description: This is the datetime of the beginning of the stats period
          example: 2018-03-20 09:12:28+00:00
          format: date-time
          type: string
        success:
          $ref: '#/components/schemas/OperationSuccess'
      type: object
    GetTasksInstancesResponse:
      example:
        counts:
        - engineCategoryID: d9797d47-f7a0-4a16-ae10-03e971064c79
          engineCategoryName: Translation
          values:
          - 1
          - 2
        - engineCategoryID: 8cd5aeae-eca8-4afe-bd69-e4ffca123a13
          engineCategoryName: Face Detection
          values:
          - 3
          - 4
        endDateTime: 2018-03-20 10:12:28+00:00
        hosts:
        - 212ca2ac-24d4-439d-b02f-fba88f322e94
        - 312c3ab7-226f-48cb-9f48-8549e41c9410
        startDateTime: 2018-03-20 09:12:28+00:00
      properties:
        counts:
          items:
            $ref: '#/components/schemas/TasksInstanceCountInfo'
          type: array
        endDateTime:
          description: This is the datetime of the end of the stats period
          example: 2018-03-20 10:12:28+00:00
          format: date-time
          type: string
        error:
          $ref: '#/components/schemas/Error'
        hosts:
          description: List of host
          items:
            type: string
          type: array
        startDateTime:
          description: This is the datetime of the beginning of the stats period
          example: 2018-03-20 09:12:28+00:00
          format: date-time
          type: string
        success:
          $ref: '#/components/schemas/OperationSuccess'
      type: object
    GetTasksResponse:
      properties:
        count:
          description: Total records for the query
          type: integer
        error:
          $ref: '#/components/schemas/Error'
        limit:
          description: the number of tasks to return.
          type: integer
        offset:
          description: the number of tasks to skip before getting the result set
          type: integer
        result:
          items:
            $ref: '#/components/schemas/TaskDetail'
          type: array
        success:
          $ref: '#/components/schemas/OperationSuccess'
      type: object
    GetTasksStatsOrganizationsResponse:
      properties:
        counts:
          items:
            $ref: '#/components/schemas/TasksOrganizationsStatsCount'
          type: array
        endDateTime:
          description: This is the datetime of the end of the stats period
          example: 2018-03-20 10:12:28+00:00
          format: date-time
          type: string
        error:
          $ref: '#/components/schemas/Error'
        startDateTime:
          description: This is the datetime of the beginning of the stats period
          example: 2018-03-20 09:12:28+00:00
          format: date-time
          type: string
        success:
          $ref: '#/components/schemas/OperationSuccess'
      type: object
    GetTasksStatsResponse:
      example:
        counts:
        - count: 0
        - count: 0
        endDateTime: 2018-03-20 10:12:28+00:00
        startDateTime: 2018-03-20 09:12:28+00:00
      properties:
        counts:
          items:
            $ref: '#/components/schemas/TasksCountsInfo'
          type: array
        endDateTime:
          description: This is the datetime of the end of the stats period
          example: 2018-03-20 10:12:28+00:00
          format: date-time
          type: string
        error:
          $ref: '#/components/schemas/Error'
        startDateTime:
          description: This is the datetime of the beginning of the stats period
          example: 2018-03-20 09:12:28+00:00
          format: date-time
          type: string
        success:
          $ref: '#/components/schemas/OperationSuccess'
      type: object
    GetTasksTimeRangesStatsResponse:
      example:
        counts:
        - count: 0
          endDateTime: 2018-03-20 10:12:28+00:00
          startDateTime: 2018-03-20 09:12:28+00:00
        - count: 0
          endDateTime: 2018-03-20 10:12:28+00:00
          startDateTime: 2018-03-20 09:12:28+00:00
        endDateTime: 2018-03-20 10:12:28
        startDateTime: 2018-03-20 09:12:28+00:00
      properties:
        counts:
          items:
            $ref: '#/components/schemas/TasksTimeRangesCountsInfo'
          type: array
        endDateTime:
          description: This is the datetime of the end of the stats period
          example: 2018-03-20 10:12:28+00:00
          format: date-time
          type: string
        error:
          $ref: '#/components/schemas/Error'
        startDateTime:
          description: This is the datetime of the beginning of the stats period
          example: 2018-03-20 09:12:28+00:00
          format: date-time
          type: string
        success:
          $ref: '#/components/schemas/OperationSuccess'
      type: object
    GetTotalPendingScheduledJobsResponse:
      properties:
        counts:
          items:
            $ref: '#/components/schemas/TotalPendingScheduledJobInfo'
          type: array
        endDateTime:
          description: This is the datetime of the end of the stats period
          example: 2018-03-20 10:12:28+00:00
          format: date-time
          type: string
        error:
          $ref: '#/components/schemas/Error'
        startDateTime:
          description: This is the datetime of the beginning of the stats period
          example: 2018-03-20 09:12:28+00:00
          format: date-time
          type: string
        success:
          $ref: '#/components/schemas/OperationSuccess'
      type: object
    HostAction:
      properties:
        launchContainer:
          items:
            $ref: '#/components/schemas/HostActionLaunch'
          type: array
        launchNodeRedContainer:
          items:
            $ref: '#/components/schemas/HostActionNodeRedLaunch'
          type: array
        mode:
          $ref: '#/components/schemas/HostActionModeEnum'
        mount:
          items:
            $ref: '#/components/schemas/HostMountInfo'
          type: array
        pullDockerImages:
          items:
            $ref: '#/components/schemas/HostPreloadEngine'
          type: array
        registries:
          items:
            $ref: '#/components/schemas/DockerRegistry'
          type: array
        terminateContainer:
          items:
            $ref: '#/components/schemas/HostActionTerminate'
          type: array
        terminateNodeRedContainer:
          items:
            $ref: '#/components/schemas/HostActionNodeRedTerminate'
          type: array
      type: object
    HostActionEnum:
      enum:
      - terminate
      - running
      type: string
    HostActionLaunch:
      description: Launch request
      properties:
        buildId:
          description: the buildId for the engine
          type: string
        containerConfig:
          properties:
            commandLine:
              items:
                type: string
              type: array
          type: object
        containerType:
          $ref: '#/components/schemas/ContainerTypeEnum'
        dockerImage:
          description: Docker image to launch
          type: string
        engineId:
          description: The id of the engine to launch
          type: string
        env:
          items:
            $ref: '#/components/schemas/EnvKeyValue'
          type: array
        gpuType:
          $ref: '#/components/schemas/GPUEnum'
        isGPU:
          description: If true, this requires a GPU
          type: boolean
        launchId:
          description: The Launch ID to use for the launch
          format: uuid
          type: string
        name:
          description: The name of the engine or process to launch. This is informational
            only.
          type: string
        runtime:
          description: the runtime for the build
          type: string
        runtimeTTL:
          description: Seconds to run
          type: integer
        softMinMemory:
          format: int64
          type: integer
        softMinvCPU:
          type: integer
      type: object
    HostActionModeEnum:
      description: Runtime mode for Host.  Continue is for normal processing.  Drain
        puts the agent into drain mode.  Terminate is shutdown
      enum:
      - continue
      - drain
      - pause
      - terminate
      type: string
    HostActionNodeRedLaunch:
      description: Launch request
      properties:
        buildId:
          description: the buildId for the engine
          type: string
        containerConfig:
          properties:
            commandLine:
              items:
                type: string
              type: array
          type: object
        containerType:
          $ref: '#/components/schemas/ContainerTypeEnum'
        coreID:
          description: core system id of graphql
          type: string
        coreToken:
          description: The core token of the current user.
          type: string
        dockerContainerName:
          description: Docker container name to launch
          type: string
        dockerImage:
          description: Docker image to launch
          type: string
        engineId:
          description: The id of the engine to launch
          type: string
        env:
          items:
            $ref: '#/components/schemas/EnvKeyValue'
          type: array
        hostId:
          description: HostID of the node-red container
          type: string
        launchId:
          description: The Launch ID to use for the launch
          format: uuid
          type: string
        name:
          description: The name of the engine or process to launch. This is informational
            only.
          type: string
        port:
          description: Port of the node-red container
          type: string
        runtimeTTL:
          description: Seconds to run
          type: integer
        softMinMemory:
          format: int64
          type: integer
        softMinvCPU:
          type: integer
      type: object
    HostActionNodeRedTerminate:
      properties:
        buildId:
          description: the buildId for the engine
          type: string
        coreToken:
          description: The core token of the current user.
          type: string
        dockerContainerId:
          description: Docker container to terminate
          type: string
        engineId:
          description: The id of the engine
          type: string
        hostIp:
          description: HostIP of the node-red container
          type: string
        port:
          description: Port of the node-red container
          type: string
      type: object
    HostActionTerminate:
      properties:
        dockerContainerId:
          description: Docker image to launch
          type: string
      type: object
    HostAlertRequest:
      properties:
        alertType:
          type: string
        alertValue:
          format: float
          type: number
      type: object
    HostCPUUsageInfo:
      description: The Host cpu usage info
      properties:
        engineInstanceID:
          description: Engine instance ID
          type: string
        values:
          description: This is an array includes the used percentage of CPU. Item
            format [timestamp, percentage]
          example: '[[1583204850, 1.928],[1583204880, 4.1242],[1583204910, 0.1244]]'
          items:
            items:
              format: float
              type: number
            type: array
          type: array
      type: object
    HostDetail:
      additionalProperties: true
      properties:
        agentCommitID:
          description: The agent ID
          type: string
        agentLabel:
          description: The build label for the agent
          type: string
        agentVersionNumber:
          description: the agent version
          type: string
        cloudProviderInstanceID:
          description: The instance id for the cloud provider
          type: string
        controllerPort:
          description: Controller Port
          format: int64
          type: integer
        createdDateTime:
          example: '2018-03-20T09:12:28Z'
          format: date-time
          type: string
        dbPort:
          description: DB Port
          format: int64
          type: integer
        dockerHostID:
          description: This is the docker host ID
          type: string
        dockerInfo:
          description: The output from `docker info`
          type: string
        drain:
          description: It should indicate whether the server is draining or not
          type: boolean
        drainDetail:
          description: More information if available on the drain action
          type: string
        drainReason:
          $ref: '#/components/schemas/HostDrainReasonEnum'
        expirationDateTime:
          example: '2018-03-20T09:16:38Z'
          format: date-time
          type: string
          x-nullable: true
        gpuAvailable:
          description: This is the number of GPU available on the host
          format: int64
          type: integer
        gpu_type:
          description: This is the type of GPU such as Tesla K80
          type: string
        hostID:
          description: This is the host id
          type: string
        ips:
          description: An array of IPs either IPv4 or IPv6 that are valid for this
            host
          items:
            type: string
          type: array
        isAPI:
          description: Is this host core api
          type: boolean
        isActive:
          description: Is this host active
          type: boolean
        isApps:
          description: Is this host core apps
          type: boolean
        isAssigned:
          description: Is this host assigned
          type: boolean
        isAutomate:
          description: Is this host automate
          type: boolean
        isController:
          description: Is this host a controller
          type: boolean
        isDB:
          description: Is this host a db server
          type: boolean
        isES:
          description: Is this host elasticsearch
          type: boolean
        isEngine:
          description: Is this host an engine
          type: boolean
        isEventing:
          description: Is this host eventing
          type: boolean
        isLB:
          description: Is this host load balancer
          type: boolean
        isNFS:
          description: Is this host an nfs server
          type: boolean
        isNSQ:
          description: Is this host nsq
          type: boolean
        isPrometheus:
          description: Is this host prometheus
          type: boolean
        isRedis:
          description: Is this host redis
          type: boolean
        isRegistry:
          description: Is this host a docker registry
          type: boolean
        lastUpdateDateTime:
          example: '2018-03-20T09:12:38Z'
          format: date-time
          type: string
          x-nullable: true
        memory:
          description: This is the memory in bytes
          format: int64
          type: integer
        modifiedDateTime:
          example: '2018-03-20T09:12:38Z'
          format: date-time
          type: string
          x-nullable: true
        nfsPartition:
          description: NFS Partition number
          format: int64
          type: integer
        nfsPort:
          description: NFS Port
          format: int64
          type: integer
        numCPU:
          description: This is the number of CPUs on the host
          format: int64
          type: integer
        numEngines:
          description: This is the number of engines on the host
          format: int64
          type: integer
        numGPU:
          description: This is the number of GPUs on the host
          format: int64
          type: integer
        registryPort:
          description: Registry Port
          format: int64
          type: integer
        runModes:
          description: This is the mode of server type to run
          type: string
        serverTypeID:
          description: This is the server type
          format: uuid
          type: string
        serverTypeName:
          description: This is the name of server type
          type: string
        shouldExpire:
          description: Should this host expire.  Default to false.
          type: boolean
        suggestedRuntimeTTL:
          description: The length of time this host suggest it should be up
          format: int
          type: integer
        terminationDateTime:
          example: '2018-03-20T09:15:38Z'
          format: date-time
          type: string
          x-nullable: true
        terminationDetail:
          description: More information if available on the termination
          type: string
        terminationReason:
          $ref: '#/components/schemas/HostTerminationReasonEnum'
        vcpuAvailable:
          description: This is the number of vcpu availables on the host
          format: int64
          type: integer
      type: object
    HostDrainReasonEnum:
      description: The reason for draining the host
      enum:
      - none
      - controller
      - expiration
      - spot
      - user
      - hardware
      - other
      - scaling
      type: string
    HostLaunchConfig:
      properties:
        controller:
          $ref: '#/components/schemas/HostLaunchControllerConfig'
        modes:
          items:
            $ref: '#/components/schemas/RunModeEnum'
          type: array
        nfs:
          $ref: '#/components/schemas/HostLaunchNFSConfig'
        postgres:
          $ref: '#/components/schemas/HostLaunchPostgresConfig'
        registry:
          $ref: '#/components/schemas/HostLaunchRegistryConfig'
      type: object
    HostLaunchControllerConfig:
      properties:
        containerId:
          type: string
        host:
          type: string
        imageId:
          type: string
        port:
          type: integer
        protocol:
          type: string
        url:
          type: string
      type: object
    HostLaunchDetail:
      properties:
        completedTimestamp:
          description: UTC Timestamp of NOW() when launch was completed
          format: int64
          type: integer
        createdDateTime:
          description: This is the datetime the core was created
          example: '2018-03-20T09:12:28Z'
          format: date-time
          type: string
        hostID:
          format: uuid
          type: string
        launchAction:
          $ref: '#/components/schemas/LaunchActionEnum'
        launchID:
          format: uuid
          type: string
        launchStatus:
          $ref: '#/components/schemas/LaunchStatusEnum'
        launchSuccessful:
          description: If true, the launch was successful
          type: boolean
        modifiedDateTime:
          description: This is the datetime the core was last modified.
          example: '2018-03-20T09:12:28Z'
          format: date-time
          type: string
        serverTypeID:
          format: uuid
          type: string
      type: object
    HostLaunchNFSConfig:
      properties:
        containerId:
          type: string
        imageId:
          type: string
        port:
          type: integer
      type: object
    HostLaunchPostgresConfig:
      properties:
        containerId:
          type: string
        dbname:
          type: string
        imageId:
          type: string
        password:
          type: string
        port:
          type: integer
        username:
          type: string
      type: object
    HostLaunchRegistryConfig:
      properties:
        containerId:
          type: string
        imageId:
          type: string
        password:
          type: string
        port:
          type: integer
        username:
          type: string
      type: object
    HostMemoryUsageInfo:
      description: The Host memory usage info
      properties:
        engineInstanceID:
          description: Engine instance ID
          type: string
        values:
          description: This is an array includes the used percentage of Memory. Item
            format [timestamp, percentage]
          example: '[[1583204850, 1.928],[1583204880, 4.1242],[1583204910, 0.1244]]'
          items:
            items:
              format: float
              type: number
            type: array
          type: array
      type: object
    HostMountInfo:
      description: This payload directs the agent to mount the specified directories
        on the hosts.
      properties:
        cache_number:
          description: the cache number for the nfs mount.  0 is /cache, 1 is /cache/1,
            ...
          type: integer
        ips:
          description: The host name or IP to mount.
          items:
            type: string
          type: array
        local_path:
          description: The mount on the local filesystem
          type: string
        mountType:
          $ref: '#/components/schemas/HostMountTypeEnum'
        options:
          description: a comma separated list of options to pass into the mount commmand.  An
            example is nfsvers=4,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2,noresvport
          type: string
        port:
          description: The port the NFS service is listening on
          type: integer
        priority:
          description: The priority to mount them.  Lowest first to highest numbers.  For
            example, /cache is 10, /cache/1 is 100. If they have the same priority
            then they are run in random order for the priority number.
          type: integer
        server_path:
          description: The mount path to mount
          type: string
      type: object
    HostMountTypeEnum:
      enum:
      - nfs
      - ext4
      - ceph
      type: string
    HostPreloadEngine:
      description: Preload engine
      properties:
        buildID:
          description: the buildId for the engine
          type: string
        dockerImage:
          description: Docker image to pull
          type: string
        engineID:
          description: The id of the engine to pull docker image
          type: string
      type: object
    HostRegisterRequest:
      properties:
        info:
          $ref: '#/components/schemas/HostDetail'
        launchConfig:
          $ref: '#/components/schemas/HostLaunchConfig'
        status:
          $ref: '#/components/schemas/HostStatus'
      type: object
    HostRegisterResponse:
      additionalProperties: true
      properties:
        configProperties:
          properties:
            localCacheDirectory:
              description: This should be /cache and will be mapped to the containers
                as /cache
              type: string
            veritoneDockerRegistries:
              items:
                $ref: '#/components/schemas/DockerRegistry'
              type: array
          type: object
        hostID:
          description: Old or NEW Host ID dependinng on whether it was registered
            before
          format: uuid
          type: string
        hostToken:
          description: API Token for Host to use going forward.
          format: uuid
          type: string
        mount:
          items:
            $ref: '#/components/schemas/HostMountInfo'
          type: array
        status:
          $ref: '#/components/schemas/HostAction'
      type: object
    HostStatus:
      properties:
        CPUUtilized:
          description: The CPU of the container as a percentage from 0-100
          format: float
          type: number
        GPUAvailable:
          description: The number of GPU available
          type: integer
        containerStatus:
          items:
            $ref: '#/components/schemas/HostStatusContainer'
          type: array
        diskAvailableOptAiware:
          description: The available bytes in the /opt/aiware partition
          format: int64
          type: integer
        diskAvailableRoot:
          description: The available bytes in the root partition
          format: int64
          type: integer
        engineToolkitVersion:
          description: The version of engine toolkit format to be gitbranch:gitcommit:epochBuildDate
          type: string
        hostID:
          format: uuid
          type: string
        memoryAvailable:
          description: The available memory to the container in bytes
          format: int64
          type: integer
        memoryUsed:
          description: The memory used by container in bytes
          format: int64
          type: integer
        numCPU:
          description: Total CPU
          type: integer
        numContainers:
          description: The number of containers running
          type: integer
        numEngineInstances:
          description: The number of engine instances running
          type: integer
        numGPU:
          description: Total GPU
          type: integer
        vCPUAvailable:
          description: The number of vCPUs available.  THis is calculated by Number
            of CPUs * % available * 1024
          type: integer
      type: object
    HostStatusContainer:
      additionalProperties: true
      properties:
        CPUUtilization:
          description: The CPU of the container as a percentage from 0-100
          format: float
          type: number
        diskAvailableRoot:
          description: The available bytes in the root partition
          format: int64
          type: integer
        dockerContainerId:
          format: uuid
          type: string
        engineID:
          format: uuid
          type: string
        engineInstanceID:
          format: uuid
          type: string
        launchID:
          format: uuid
          type: string
        memoryAvailable:
          description: The available memory to the container in bytes
          format: int64
          type: integer
        memoryUsed:
          description: The memory used by container in bytes
          format: int64
          type: integer
        numGPU:
          description: The number of GPU attached to the container
          type: integer
      type: object
    HostTerminationReasonEnum:
      description: The reason for the termination of the host
      enum:
      - none
      - controller
      - expiration
      - spot
      - user
      - hardware
      - other
      type: string
    HostsCountByType:
      properties:
        activeServerCount:
          description: The number of active virtual server in a time range
          format: int64
          type: integer
        newServerCount:
          description: The number of servers is up in a time range
          format: int64
          type: integer
        terminatedServerCount:
          description: The number of servers was terminated in a time range
          format: int64
          type: integer
        typeID:
          format: uuid
          type: string
        typeName:
          type: string
        values:
          description: This is an array of data count by time. Item format [timestamp,
            count]
          example: '[[1583204850, 1],[1583204880, 4],[1583204910, 4]]'
          items:
            items:
              format: int64
              type: integer
            type: array
          type: array
      type: object
    HostsCounts:
      properties:
        activePhysicalServer:
          description: The number of active physical server in a time range
          format: int64
          type: integer
        activeVirtualServer:
          description: The number of active virtual server in a time range
          format: int64
          type: integer
        newServer:
          description: The number of servers is up in a time range
          format: int64
          type: integer
        terminatedServer:
          description: The number of servers was terminated in a time range
          format: int64
          type: integer
      type: object
    HostsCountsByTypeResponse:
      properties:
        counts:
          items:
            $ref: '#/components/schemas/HostsCountByType'
          type: array
        endDateTime:
          description: End of a time range
          example: 2018-03-20 10:13:28+00:00
          format: date-time
          type: string
        error:
          $ref: '#/components/schemas/Error'
        startDateTime:
          description: Start of a time range
          example: 2018-03-20 09:12:28+00:00
          format: date-time
          type: string
        success:
          $ref: '#/components/schemas/OperationSuccess'
      type: object
    HostsCountsResponse:
      properties:
        counts:
          $ref: '#/components/schemas/HostsCounts'
          type: object
        endDateTime:
          description: End of a time range
          example: 2018-03-20 10:13:28+00:00
          format: date-time
          type: string
        error:
          $ref: '#/components/schemas/Error'
        startDateTime:
          description: Start of a time range
          example: 2018-03-20 09:12:28+00:00
          format: date-time
          type: string
        success:
          $ref: '#/components/schemas/OperationSuccess'
      type: object
    JobBacklogCount:
      description: Job backlog count info
      properties:
        engineID:
          description: engineID
          format: uuid
          type: string
        engineName:
          description: engineName
          type: string
        priority:
          description: Priority
          format: int64
          type: integer
        values:
          description: This is an array of data count by time. Item format [timestamp,
            count]
          example: '[[1583204850, 1],[1583204880, 4],[1583204910, 4]]'
          items:
            items:
              format: int64
              type: integer
            type: array
          type: array
      type: object
    JobDetail:
      properties:
        abortedDateTime:
          description: This is the datetime the task was aborted
          example: '2018-03-20T09:12:28Z'
          format: date-time
          type: string
        completedDateTime:
          description: This is the datetime the job was completed
          example: '2018-03-20T09:12:28Z'
          format: date-time
          type: string
        coreID:
          format: uuid
          type: string
        coreJobID:
          description: Core Job ID
          format: string
          type: string
        coreRecordingId:
          description: This is the recording id in the core of the content for this
            job
          format: int64
          type: integer
        coreScheduledJobId:
          description: This is the core scheduled job id.
          type: integer
        coreSourceId:
          default: 0
          description: This is the Core Source Id
          format: int64
          type: integer
        createdDateTime:
          description: This is the datetime the job was created
          example: '2018-03-20T09:12:28Z'
          format: date-time
          type: string
        currentRetries:
          default: 0
          description: This is the current retries for the job
          type: integer
        dueDateTime:
          description: This is the time the job is due to be complete.  This is used
            by edge to set the priorities.
          example: '2018-03-20T09:12:28Z'
          format: date-time
          type: string
        internalJobID:
          description: Internal Job ID
          format: uuid
          type: string
        internalOrganizationID:
          format: uuid
          type: string
        internalScheduledJobId:
          description: The internal scheduled job id.
          type: string
        isTemplate:
          description: If true, this job is a template
          type: boolean
        jobConfigJSON:
          description: This is the job config expressed as JSON
          format: JSON
          type: string
        jobStatus:
          $ref: '#/components/schemas/JobStatusEnum'
        jobTemplateId:
          description: If set, this job was created from this job template
          type: string
        maxRetries:
          default: 0
          description: This is the max retries for the job
          type: integer
        modifiedDateTime:
          description: This is the datetime the job was last modified.
          example: '2018-03-20T09:12:28Z'
          format: date-time
          type: string
        priority:
          default: 0
          description: The priority for the job.  Default is 0.
          format: int32
          type: integer
        scheduledDateTime:
          description: If from scheduled job, this is the date when the job should
            be launched. There is sometimes a difference between scheduled and start
            to allow for the edge to start processing at the right time if warmup
            is needed. If not, blank
          example: '2018-03-20T09:12:28Z'
          format: date-time
          type: string
        sendOutputToUris:
          description: A list of URIs to send processed chunks when the engine completes
            them.
          items:
            type: string
          type: array
        startDateTime:
          description: If from scheduled job, this is the date when the job should
            be started. This is a planning time not the actual whcih is startedDateTime.  If
            not, blank
          example: '2018-03-20T09:12:28Z'
          format: date-time
          type: string
        startedDateTime:
          description: This is the datetime the job was started (actual)
          example: '2018-03-20T09:12:28Z'
          format: date-time
          type: string
        stopDateTime:
          description: If from scheduled job, this is the date when the job should
            be stopped. Start and Stop are used for recording from a stream.  If not,
            blank
          example: '2018-03-20T09:12:28Z'
          format: date-time
          type: string
        taskRoutes:
          items:
            $ref: '#/components/schemas/TaskRouteDetail'
          type: array
        tasks:
          items:
            $ref: '#/components/schemas/TaskDetail'
          type: array
      required:
      - internalOrganizationId
      type: object
    JobOutput:
      properties:
        contents:
          description: The content of the output.
          type: string
        contentsValid:
          description: If true, the contents are valid even if empty
          type: boolean
        created:
          description: The time the file was created as seconds since Unix epoch in
            UTC.
          format: int64
          type: integer
        name:
          description: The name of the output file
          type: string
        size:
          description: The size of the output file in bytes
          format: int64
          type: integer
      type: object
    JobOutputs:
      properties:
        internalJobID:
          description: Internal Job ID
          format: uuid
          type: string
        outputs:
          items:
            $ref: '#/components/schemas/JobOutput'
          type: array
      type: object
    JobPerformanceInfo:
      properties:
        cpu:
          default: 0
          description: CPU Utilization
          format: float
          type: number
        dateTime:
          example: '2018-03-20T09:00:00Z'
          format: date-time
          type: string
        gpu:
          default: 0
          description: GPU Utilization
          format: float
          type: number
        memory:
          default: 0
          description: Memory available in percent
          format: float
          type: number
      type: object
    JobStatus:
      properties:
        internalJobID:
          description: Internal Job ID
          format: uuid
          type: string
        jobStatus:
          $ref: '#/components/schemas/JobStatusEnum'
      type: object
    JobStatusEnum:
      description: This is the status for the job.  This will be created as 'pending'
        for new jobs
      enum:
      - scheduled
      - pending
      - queued
      - running
      - complete
      - aborted
      - failed
      - rejected
      - reprocessing
      type: string
    JobTaskStatusChartTypeEnum:
      enum:
      - total
      - total_by_time_range
      type: string
    JobWorkRequest:
      properties:
        createdDateTime:
          example: '2018-03-20T09:12:28Z'
          format: date-time
          type: string
        engineID:
          format: uuid
          type: string
        engineInstanceID:
          format: uuid
          type: string
        engineName:
          type: string
        engineType:
          type: string
        errorCount:
          type: integer
        internalJobID:
          format: uuid
          type: string
        internalTaskID:
          format: uuid
          type: string
        modifiedDateTime:
          example: '2018-03-20T09:15:28Z'
          format: date-time
          type: string
        status:
          type: string
        workRequestID:
          format: uuid
          type: string
      type: object
    JobsCountsInfo:
      example:
        count: 0
      properties:
        count:
          description: Total amount of jobs with a particular status
          format: int64
          type: integer
        endDateTime:
          description: This is the datetime of the end of the stats period
          example: 2018-03-20 10:12:28+00:00
          format: date-time
          type: string
        startDateTime:
          description: This is the datetime of the beginning of the stats period
          example: 2018-03-20 09:12:28+00:00
          format: date-time
          type: string
        status:
          $ref: '#/components/schemas/JobStatusEnum'
      type: object
    JobsEnginesCountsInfo:
      properties:
        count:
          description: Total amount of jobs with a particular status and an engine
            category
          format: int64
          type: integer
        engineCategoryName:
          description: Engine category name
          example: Logo Recognition
          type: string
        status:
          $ref: '#/components/schemas/JobStatusEnum'
      type: object
    JobsHostsCountsInfo:
      properties:
        count:
          description: Total amount of jobs with a particular status and a host name
          format: int64
          type: integer
        hostName:
          description: Host name
          example: Host1
          type: string
        status:
          $ref: '#/components/schemas/JobStatusEnum'
      type: object
    JobsOrganizationCountsInfo:
      properties:
        count:
          description: Total amount of jobs with a particular status and a time range
          format: int64
          type: integer
        internalOrganizationID:
          format: uuid
          type: string
        organizationID:
          description: This is the organization id in core (int), not the internal
            organization id
          type: integer
        organizationName:
          description: Name of organization
          type: string
        status:
          $ref: '#/components/schemas/JobStatusEnum'
      type: object
    JobsTimeRangesCountsInfo:
      properties:
        status:
          $ref: '#/components/schemas/JobStatusEnum'
        values:
          description: This is an array of data count by time. Item format [timestamp,
            count]
          example: '[[1583204850, 1],[1583204880, 4],[1583204910, 4]]'
          items:
            items:
              format: int64
              type: integer
            type: array
          type: array
      type: object
    LaunchActionEnum:
      enum:
      - launch
      - terminate
      type: string
    LaunchHostRequest:
      properties:
        serverTypeID:
          format: uuid
          type: string
      type: object
    LaunchJobTemplateRequest:
      properties:
        isInternal:
          description: Whether to launch the job template within the edge cluster
            or back to core
          type: boolean
        payloadJSON:
          description: This is the payload encoded as a JSON string.  This will be
            used
          format: json
          type: string
        scheduledJobID:
          description: the scheduled job id that started the pipeline involving this
            template
          type: string
        sourceID:
          description: the source Id that associated with the pipeline involving this
            template
          type: string
      type: object
    LaunchJobTemplateResponse:
      properties:
        operation:
          $ref: '#/components/schemas/AdminOperationResponse'
      type: object
    LaunchStatusEnum:
      enum:
      - pending
      - running
      - complete
      - pending_terminate
      type: string
    LicenseDetail:
      description: This provides the detailed information about the license.
      properties:
        currentAPI:
          description: The current number of API calls allowed by the license.
          format: int64
          type: integer
        currentBytes:
          description: The current number of bytes to be processed under this license.
          format: int64
          type: integer
        currentTasks:
          description: The current number of tasks that can be processed on the system.
          format: int64
          type: integer
        licenseExpiration:
          description: This is the datetime the license will expire
          example: '2018-03-20T09:12:28Z'
          format: date-time
          type: string
        licenseID:
          description: License ID
          format: uuid
          type: string
        licenseKey:
          description: This is the encoded license string
          type: string
        licenseValidation:
          description: This contains the validation information for the license
          type: string
        maxAPI:
          description: The maximum number of API calls allowed by the license. If
            0, then unlimited.
          format: int64
          type: integer
        maxBytes:
          description: The maximum number of bytes to be processed under this license.  If
            0, then unlimited.
          format: int64
          type: integer
        maxHosts:
          description: The maximum number of hosts allowed in the system.  If 0, then
            unlimited.
          format: int64
          type: integer
        maxTasks:
          description: The maximum number of tasks that can be processed on the system.
            If 0, then unlimited.
          format: int64
          type: integer
      type: object
    OperationSuccess:
      description: If true, the operation was successful.
      type: boolean
    OrganizationDetail:
      properties:
        applicationID:
          format: uuid
          type: string
        basePriority:
          type: integer
        coreID:
          format: uuid
          type: string
        coreOrganizationID:
          type: integer
        createdDateTime:
          description: This is the datetime the core was created
          example: '2018-03-20T09:12:28Z'
          format: date-time
          type: string
        defaultRetries:
          type: integer
        defaultSLASeconds:
          type: integer
        kvpJSON:
          format: json
          type: string
        modifiedDateTime:
          description: This is the datetime the core was last modified.
          example: '2018-03-20T09:12:28Z'
          format: date-time
          type: string
        name:
          type: string
        nfsShard:
          type: integer
        organizationID:
          format: uuid
          type: string
        taskPriorityAdjustmentStarted:
          type: integer
      type: object
    OrganizationID:
      format: uuid
      type: string
    PauseEngineRequest:
      properties:
        engineID:
          format: uuid
          type: string
      type: object
    PermissionDetail:
      properties:
        active:
          type: boolean
        createdBy:
          format: uuid
          type: string
        createdDateTime:
          description: This is the datetime the core was created
          example: '2018-03-20T09:12:28Z'
          format: date-time
          type: string
        method:
          type: string
        modifiedBy:
          format: uuid
          type: string
        modifiedDateTime:
          description: This is the datetime the core was last modified.
          example: '2018-03-20T09:12:28Z'
          format: date-time
          type: string
        parentID:
          type: string
        path:
          type: string
        permissionID:
          type: string
        permissionName:
          type: string
        type:
          $ref: '#/components/schemas/PermissionTypeEnum'
      type: object
    PermissionTypeEnum:
      enum:
      - page
      - activity
      - api
      type: string
    RatePendingScheduledJobInfo:
      properties:
        runMode:
          $ref: '#/components/schemas/ScheduleRunModeEnum'
        values:
          description: This is an array of rate data by time. Item format [timestamp,
            rate]
          example: '[[1583204850, 1.5],[1583204880, 4.1],[1583204910, 4.3333]]'
          items:
            items:
              format: float
              maximum: 100
              minimum: 0
              type: number
            type: array
          type: array
      type: object
    RecheckJobStatusResponse:
      properties:
        job:
          $ref: '#/components/schemas/JobStatus'
      type: object
    RegisterUserDetail:
      properties:
        displayName:
          type: string
        email:
          format: email
          type: string
        expiration:
          description: The unix timestamp for the user expiration. If 0, the default
            value is about 1 month
          format: int64
          type: integer
        internalOrganizationID:
          format: uuid
          type: string
        inviteRequested:
          type: boolean
        inviteURL:
          type: string
        kvpJSON:
          format: json
          type: string
        password:
          type: string
        passwordChangeRequired:
          type: boolean
        status:
          $ref: '#/components/schemas/UserStatusEnum'
        userName:
          type: string
        userSettingsJSON:
          format: json
          type: string
      type: object
    RemoveEngineForResourceRequest:
      properties:
        engine:
          $ref: '#/components/schemas/EngineID'
      type: object
    RemoveEngineForResourceResponse:
      properties:
        error:
          $ref: '#/components/schemas/Error'
        result:
          $ref: '#/components/schemas/EngineID'
        success:
          $ref: '#/components/schemas/OperationSuccess'
      type: object
    RemoveServersToServerTypeRequest:
      properties:
        serversToAdd:
          description: The number of servers to remove
          format: int32
          type: integer
      type: object
    ReplaceEngineRequest:
      properties:
        engineID:
          format: uuid
          type: string
      type: object
    ResourceBindingTypeEnum:
      description: Resource Biding Types
      enum:
      - internal_host
      - internal_server_type
      - external
      type: string
    ResourceDetail:
      description: This is the resource object
      properties:
        URI:
          description: Resource URI. This field is presented only in responses
          type: string
        URITemplate:
          description: URI template in the go template format.
          type: string
        bindingType:
          $ref: '#/components/schemas/ResourceBindingTypeEnum'
        createdBy:
          format: uuid
          type: string
        createdDateTime:
          description: This is the datetime the core was created
          example: '2018-03-20T09:12:28Z'
          format: date-time
          type: string
        hostID:
          format: uuid
          type: string
        modifiedBy:
          format: uuid
          type: string
        modifiedDateTime:
          description: This is the datetime the core was last modified.
          example: '2018-03-20T09:12:28Z'
          format: date-time
          type: string
        name:
          description: The name of the resource
          type: string
        nsqadmin:
          description: This is the nsqadmin "host:port".
          type: string
        nsqd:
          description: This is the nsqd "host:port".
          type: string
        nsqlookupd:
          description: This is the nsqlookupd "host:port".
          type: string
        params:
          description: JSON encoded field
          type: string
        pgDatabase:
          description: If postgres, this is the name of the postgres database
          type: string
        pgPass:
          description: If postgres, this is the user password.  This will be encrypted
            in storage
          format: password
          type: string
        pgUser:
          description: If postgres, this is the user name
          type: string
        redisDB:
          description: This is the redis DB number.
          format: int64
          type: integer
        redisToken:
          description: If Redis, this is the Redis token.
          type: string
        resourceID:
          description: Resource ID
          format: uuid
          type: string
        resourceState:
          $ref: '#/components/schemas/ResourceStateEnum'
        resourceType:
          $ref: '#/components/schemas/ResourceTypeEnum'
      type: object
    ResourceStateEnum:
      description: Resource State
      enum:
      - created
      - active
      - deleted
      type: string
    ResourceTypeEnum:
      description: Resource Types
      enum:
      - nsq
      - postgres
      - redis
      - minio
      - es
      type: string
    ResumeEngineRequest:
      properties:
        engineID:
          format: uuid
          type: string
      type: object
    RoleDetail:
      properties:
        active:
          type: boolean
        createdBy:
          format: uuid
          type: string
        createdDateTime:
          description: This is the datetime the core was created
          example: '2018-03-20T09:12:28Z'
          format: date-time
          type: string
        isRoot:
          type: boolean
        modifiedBy:
          format: uuid
          type: string
        modifiedDateTime:
          description: This is the datetime the core was last modified.
          example: '2018-03-20T09:12:28Z'
          format: date-time
          type: string
        permissionIDs:
          items:
            type: string
          type: array
        roleID:
          type: string
        roleName:
          type: string
      type: object
    RunModeEnum:
      description: Run modes for the Host
      enum:
      - engine
      - nfs
      - registry
      - controller
      - db
      - standby
      - all
      - single
      - prometheus
      - api
      - apps
      - eventing
      - automatestudio
      - lb
      - nsq
      - es
      - redis
      - ceph-fs
      type: string
    SchedulePartDetail:
      properties:
        createdDateTime:
          description: This is the datetime the core was created
          example: '2018-03-20T09:12:28Z'
          format: date-time
          type: string
        durationSeconds:
          type: integer
        internalScheduledJobID:
          description: Scheduled Job ID
          format: uuid
          type: string
        modifiedDateTime:
          description: This is the datetime the core was last modified.
          example: '2018-03-20T09:12:28Z'
          format: date-time
          type: string
        repeatInterval:
          type: integer
        repeatIntervalUnit:
          $ref: '#/components/schemas/ScheduleRepeatIntervalEnum'
        scheduleDay:
          $ref: '#/components/schemas/SchedulePartsDayEnum'
        scheduleDayLocal:
          $ref: '#/components/schemas/SchedulePartsDayEnum'
        schedulePartsID:
          format: uuid
          type: string
        scheduleType:
          $ref: '#/components/schemas/SchedulePartsTypeEnum'
        startTime:
          type: string
        stopTime:
          type: string
      type: object
    SchedulePartsDayEnum:
      enum:
      - sunday
      - monday
      - tuesday
      - wednesday
      - thursday
      - friday
      - saturday
      type: string
    SchedulePartsTypeEnum:
      enum:
      - weekly
      - interval
      type: string
    ScheduleRepeatIntervalEnum:
      enum:
      - months
      - weeks
      - days
      - hours
      - minutes
      - seconds
      type: string
    ScheduleRunModeEnum:
      enum:
      - continuous
      - recurring
      - now
      - once
      type: string
    ScheduledJobDetail:
      properties:
        coreCreatedDateTime:
          description: This is the time that the current scheduledJob was created
            on Core
          example: '2018-03-20T09:12:28Z'
          format: date-time
          type: string
        coreID:
          format: uuid
          type: string
        createdDateTime:
          description: This is the datetime the core was created
          example: '2018-03-20T09:12:28Z'
          format: date-time
          type: string
        internalOrganizationID:
          format: uuid
          type: string
        internalScheduledJobID:
          description: Scheduled Job ID
          format: uuid
          type: string
        isActive:
          type: boolean
        jobConfigJSON:
          description: This is the job config encoded as a JSON string
          format: json
          type: string
        liveTimezone:
          type: string
        modifiedDateTime:
          description: This is the datetime the core was last modified.
          example: '2018-03-20T09:12:28Z'
          format: date-time
          type: string
        organizationID:
          description: This is the organization id in core (int), not the internal
            organization id
          type: integer
        radioStreamUrl:
          type: string
        runMode:
          $ref: '#/components/schemas/ScheduleRunModeEnum'
        scheduleParts:
          items:
            $ref: '#/components/schemas/SchedulePartDetail'
          type: array
        scheduledJobID:
          description: Core Scheduled Job ID
          type: integer
        scheduledJobName:
          type: string
        sourceID:
          format: int64
          type: integer
        sourceType:
          type: string
        startDateTime:
          example: '2018-03-20T09:12:28Z'
          format: date-time
          type: string
        stopDateTime:
          example: '2018-03-20T09:12:28Z'
          format: date-time
          type: string
        url:
          type: string
        youtubeChannel:
          type: string
      type: object
    ScheduledProcessDetail:
      properties:
        command:
          type: string
        createdDateTime:
          description: This is the datetime the core was created
          example: '2018-03-20T09:12:28Z'
          format: date-time
          type: string
        dockerImage:
          type: string
        intervalSeconds:
          type: integer
        isActive:
          type: boolean
        isRunning:
          type: boolean
        lastRun:
          type: integer
        modifiedDateTime:
          description: This is the datetime the core was last modified.
          example: '2018-03-20T09:12:28Z'
          format: date-time
          type: string
        nextRun:
          type: integer
        scheduledProcessID:
          format: uuid
          type: string
        type:
          $ref: '#/components/schemas/ScheduledProcessTypeEnum'
      type: object
    ScheduledProcessTypeEnum:
      enum:
      - docker
      - command
      type: string
    ServerErrorChartTypeEnum:
      enum:
      - total
      - pie
      - time_range
      type: string
    ServerErrorCountInfo:
      properties:
        count:
          description: This is the total of error for current service.
          format: int64
          type: integer
        endDateTime:
          description: End of a time range
          example: 2018-03-20 10:12:28+00:00
          format: date-time
          type: string
        errorCode:
          type: string
        service:
          type: string
        startDateTime:
          description: Start of a time range
          example: 2018-03-20 09:12:28+00:00
          format: date-time
          type: string
        values:
          description: This is an array of data count by time for current errorCode.
            Item format [timestamp, count]
          example: '[[1583204850, 1],[1583204880, 4],[1583204910, 4]]'
          items:
            items:
              format: int64
              type: integer
            type: array
          type: array
      type: object
    ServerProviderEnum:
      description: This selects
      enum:
      - aws_ec2
      - google_cloud
      - azure
      - vmware
      - none
      type: string
    ServerTypeDetail:
      properties:
        activeHostCount:
          format: int64
          type: integer
        agentStartupScript:
          type: string
        awsAmi:
          type: string
        awsInstanceProfile:
          type: string
        awsInstanceType:
          type: string
        awsKeyName:
          type: string
        awsSecurityGroups:
          description: aws subnets
          items:
            type: string
          type: array
        awsSpot:
          type: boolean
        awsSpotMaxPrice:
          format: float
          type: number
        awsSpotPersistent:
          type: boolean
        awsSubnets:
          description: aws subnets
          items:
            type: string
          type: array
        awsTagsJSON:
          format: json
          type: string
        awsUserData:
          type: string
        createdDateTime:
          description: This is the datetime the core was created
          example: '2018-03-20T09:12:28Z'
          format: date-time
          type: string
        disableLaunchingBacklogEngines:
          type: boolean
        drainingHostCount:
          format: int64
          type: integer
        gpuType:
          $ref: '#/components/schemas/GPUEnum'
        hasGPU:
          type: boolean
        isAutoScaleActive:
          type: boolean
        maxServers:
          format: int64
          type: integer
        memoryBytes:
          format: int64
          type: integer
        minServers:
          format: int64
          type: integer
        modifiedDateTime:
          description: This is the datetime the core was last modified.
          example: '2018-03-20T09:12:28Z'
          format: date-time
          type: string
        numGPU:
          format: int64
          type: integer
        onlyOrganizationId:
          format: uuid
          type: string
        pendingHostCount:
          format: int64
          type: integer
        runModes:
          description: run modes
          items:
            $ref: '#/components/schemas/RunModeEnum'
          type: array
        serverConfigJSON:
          format: json
          type: string
        serverProvider:
          $ref: '#/components/schemas/ServerProviderEnum'
        serverTypeID:
          format: uuid
          type: string
        vcpus:
          format: int64
          type: integer
      type: object
    ServerTypeEngineRunningDetail:
      properties:
        createdBy:
          format: uuid
          type: string
        createdDateTime:
          description: This is the datetime the core was created
          example: '2018-03-20T09:12:28Z'
          format: date-time
          type: string
        engineID:
          format: uuid
          type: string
        engineName:
          description: Name of the Engine
          type: string
        minRunning:
          format: int64
          type: integer
        modifiedBy:
          format: uuid
          type: string
        modifiedDateTime:
          description: This is the datetime the core was last modified.
          example: '2018-03-20T09:12:28Z'
          format: date-time
          type: string
        serverTypeID:
          format: uuid
          type: string
      type: object
    ServiceDetail:
      properties:
        channel:
          type: string
        coreID:
          format: uuid
          type: string
        createdDateTime:
          description: This is the datetime the core was created
          example: '2018-03-20T09:12:28Z'
          format: date-time
          type: string
        dockerImageName:
          type: string
        kvpJSON:
          format: json
          type: string
        modifiedDateTime:
          description: This is the datetime the core was last modified.
          example: '2018-03-20T09:12:28Z'
          format: date-time
          type: string
        serviceCount:
          type: integer
        serviceID:
          format: uuid
          type: string
        serviceName:
          type: string
        serviceType:
          $ref: '#/components/schemas/ServiceTypeEnum'
        tags:
          items:
            type: string
          type: array
      type: object
    ServiceID:
      description: Service ID
      format: uuid
      type: string
    ServiceInstanceCreateRequest:
      description: This is the request for Create Service Instance
      properties:
        serviceInstance:
          $ref: '#/components/schemas/CreateServiceInstanceDetail'
      type: object
    ServiceInstanceCreateResponse:
      description: This is the response for Create Service Instance Request
      properties:
        error:
          $ref: '#/components/schemas/Error'
        result:
          $ref: '#/components/schemas/ServiceInstanceDetail'
        success:
          $ref: '#/components/schemas/OperationSuccess'
      type: object
    ServiceInstanceDeleteResponse:
      description: This is the response for Delete Service Instance Response
      properties:
        error:
          $ref: '#/components/schemas/Error'
        success:
          $ref: '#/components/schemas/OperationSuccess'
      type: object
    ServiceInstanceDetail:
      properties:
        createdDateTime:
          description: This is the datetime the core was created
          example: '2018-03-20T09:12:28Z'
          format: date-time
          type: string
        dockerContainerID:
          description: The docker container PID
          type: string
        hostID:
          format: uuid
          type: string
        ipAddress:
          type: string
        modifiedDateTime:
          description: This is the datetime the core was last modified.
          example: '2018-03-20T09:12:28Z'
          format: date-time
          type: string
        port:
          type: integer
        serviceID:
          format: uuid
          type: string
        serviceInstanceID:
          format: uuid
          type: string
      type: object
    ServiceTypeEnum:
      enum:
      - http_service
      - queue_service
      type: string
    SortOrderEnum:
      enum:
      - asc
      - desc
      type: string
    StatusFormatEnum:
      enum:
      - json
      - html
      - txt
      - csv
      type: string
    TaskActionEnum:
      description: action returns to the controller as part of updateTaskStatus
      enum:
      - completeJob
      - createJobs
      - completeAndCreateJobs
      - updateStatus
      type: string
    TaskDetail:
      properties:
        abortedDateTime:
          description: This is the datetime the task was aborted
          example: '2018-03-20T09:12:28Z'
          format: date-time
          type: string
        buildID:
          format: uuid
          type: string
        childTaskIDs:
          description: Array of Internal Child Task Id
          items:
            format: uuid
            type: string
          type: array
        chunkCountInfo:
          $ref: '#/components/schemas/ChunkCountInfo'
        completedDateTime:
          description: This is the datetime the task was completed
          example: '2018-03-20T09:12:28Z'
          format: date-time
          type: string
        coreJobID:
          description: This is the core job id associated with this job
          type: string
        coreRecordingID:
          description: This is the recording id in the core of the content for this
            job
          format: int64
          type: integer
        coreTaskID:
          description: This is the core task id associated with this job
          type: string
        createdDateTime:
          description: This is the datetime the core was created
          example: '2018-03-20T09:12:28Z'
          format: date-time
          type: string
        currentRetries:
          default: 0
          description: This is the current retries for the task
          type: integer
        dueDateTime:
          description: This is the time the task is due to be complete.  This is used
            by edge to set the priorities.
          example: '2018-03-20T09:12:28Z'
          format: date-time
          type: string
        engineCategoryID:
          description: Category Id
          format: uuid
          type: string
        engineCategoryName:
          description: Category name
          example: Transcription
          type: string
        engineID:
          format: uuid
          type: string
        engineName:
          description: Engine name
          example: Speechmatic en - V3F
          type: string
        errorCount:
          description: This is the error count for the task
          type: integer
        failureDetail:
          description: If there is an error, the detail will be set here.
          type: string
        failureReason:
          $ref: '#/components/schemas/FailureReasonEnum'
        internalJobID:
          description: Internal Job ID
          format: uuid
          type: string
        internalOrganizationID:
          format: uuid
          type: string
        internalTaskID:
          description: Internal Task ID
          format: uuid
          type: string
        ioFolders:
          items:
            $ref: '#/components/schemas/TaskIOInfo'
          type: array
        isTemplate:
          description: If true, this job is a template
          type: boolean
        maxEngines:
          description: The maximum number of engine instances to run against this
            task.  Defaults to 1 if parallelProcessing is false, or 2 otherwise.
          type: integer
        maxRetries:
          default: null
          description: This is the max retries for the task
          type: integer
        modifiedDateTime:
          description: This is the datetime the core was last modified.
          example: '2018-03-20T09:12:28Z'
          format: date-time
          type: string
        parallelProcessing:
          description: If true, multiple engine instances can process this task in
            parallel.  If false, maxEngines will be 1.
          type: boolean
        parentMustBeCompleteBeforeStarting:
          description: If true, this task won't start until the parent is complete
          type: boolean
        parentTaskID:
          description: Internal Parent Task Id
          format: uuid
          type: string
        payloadJSON:
          description: This is the payload encoded as a JSON string
          format: json
          type: string
        scheduledDateTime:
          description: If from scheduled job, this is the date when the task should
            be launched. There is sometimes a difference between scheduled and start
            to allow for the edge to start processing at the right time if warmup
            is needed. If not, blank
          example: '2018-03-20T09:12:28Z'
          format: date-time
          type: string
        sendOutputToUris:
          description: A list of URIs to send processed chunks when the engine completes
            them.
          items:
            type: string
          type: array
        startDateTime:
          description: If from scheduled job, this is the date when the task should
            be started. This is a planning time not the actual which is startedDateTime.  If
            not, blank
          example: '2018-03-20T09:12:28Z'
          format: date-time
          type: string
        startedDateTime:
          description: This is the datetime the task was started (actual)
          example: '2018-03-20T09:12:28Z'
          format: date-time
          type: string
        stopDateTime:
          description: If from scheduled job, this is the date when the task should
            be stopped. Start and Stop are used for recording from a stream.  If not,
            blank
          example: '2018-03-20T09:12:28Z'
          format: date-time
          type: string
        taskOutputSON:
          description: This is the taskOutput as a JSON string
          format: json
          type: string
        taskPayloadJSON:
          description: This is the taskPayload as a JSON string
          format: json
          type: string
        taskStatus:
          $ref: '#/components/schemas/JobStatusEnum'
        taskTemplateID:
          description: If set, this task was created from this task template.
          format: uuid
          type: string
      required:
      - engineId
      type: object
    TaskErrorInfo:
      properties:
        categoryID:
          format: uuid
          type: string
        createdDateTime:
          example: '2018-03-20T09:12:28Z'
          format: date-time
          type: string
        engineID:
          format: uuid
          type: string
        engineName:
          type: string
        failureDetail:
          description: If there is an error, the detail will be set here.
          type: string
        failureReason:
          $ref: '#/components/schemas/FailureReasonEnum'
        modifiedDateTime:
          example: '2018-03-20T09:12:28Z'
          format: date-time
          type: string
        taskID:
          format: uuid
          type: string
      type: object
    TaskIO:
      additionalProperties: true
      description: An input or output folder.  For type output, all fields required.
        For type input, only id is required.
      properties:
        id:
          description: The io id
          type: string
        inputFolders:
          description: For each output, link into the input(s) folders.
          items:
            $ref: '#/components/schemas/TaskIOFolder'
          minItems: 1
          type: array
        ioMode:
          $ref: '#/components/schemas/TaskIOModeEnum'
        ioType:
          $ref: '#/components/schemas/TaskIOTypeEnum'
        options:
          description: Options for generating the output, e.g. frame rates, output
            media format etc.
          type: object
      type: object
    TaskIOFolder:
      properties:
        id:
          description: IO ID
          format: uuid
          type: string
        taskId:
          description: The task id containing the io folder
          type: string
      type: object
    TaskIOInfo:
      description: This is the task IO Object that provides paramenters for the input
        and output
      properties:
        correlationId:
          description: On create, this field will be used to look up task routes for
            binding.
          type: string
        createdDateTime:
          description: This is the datetime the task was created
          example: '2018-03-20T09:12:28Z'
          format: date-time
          type: string
        id:
          description: This is the IO Id.  On create, this is not set.
          format: uuid
          type: string
        mode:
          $ref: '#/components/schemas/TaskIOModeEnum'
        modifiedDateTime:
          description: This is the datetime the task was last modified.
          example: '2018-03-20T09:12:28Z'
          format: date-time
          type: string
        optionsJSON:
          description: Any options for this input or output folder for the task to
            use on processing
          format: json
          type: string
        type:
          $ref: '#/components/schemas/TaskIOTypeEnum'
      type: object
    TaskIOModeEnum:
      enum:
      - stream
      - chunk
      type: string
    TaskIOStatus:
      additionalProperties: true
      properties:
        id:
          format: uuid
          type: string
        processedCount:
          description: Count processed since last status update
          type: integer
        processedTotalCount:
          description: Total count processed since start of task
          type: integer
      type: object
    TaskIOTypeEnum:
      enum:
      - input
      - output
      type: string
    TaskOutput:
      properties:
        contents:
          description: The content of the output.
          type: string
        contentsValid:
          description: If true, the contents are valid even if empty
          type: boolean
        created:
          description: The time the file was created as seconds since Unix epoch in
            UTC.
          format: int64
          type: integer
        name:
          description: The name of the output file
          type: string
        size:
          description: The size of the output file in bytes
          format: int64
          type: integer
      type: object
    TaskOutputs:
      properties:
        internalTaskID:
          description: Internal Task ID
          format: uuid
          type: string
        outputs:
          items:
            $ref: '#/components/schemas/TaskOutput'
          type: array
      type: object
    TaskProcessedStats:
      properties:
        processedBytes:
          description: The amount of bytes processed by the task
          format: int64
          type: integer
        processedCPUMilliseconds:
          description: The amount of CPU ms used by the task
          format: int64
          type: integer
        processedCPUSeconds:
          description: The amount of CPU seconds used by the task
          format: int64
          type: integer
        processedChunks:
          description: The amount of chunks processed by the task
          format: int64
          type: integer
        processedMediaSeconds:
          description: The amount of media seconds processed by the task
          format: int64
          type: integer
      type: object
    TaskRouteDetail:
      properties:
        endpoint:
          description: This is endpoint to be used for this route.  This does not
            have to be unique.
          format: uuid
          type: string
        firstWriteDateTime:
          description: This is the datetime the the first byte or chunk was written
          example: '2018-03-20T09:12:28Z'
          format: date-time
          type: string
        lastWriteDateTime:
          description: This is the datetime the the last byte or chunk was  written
          example: '2018-03-20T09:12:28Z'
          format: date-time
          type: string
        taskChildId:
          description: This is the task child id.  On create, this is the taskCorrelationId
          type: string
        taskChildInputCount:
          description: This is the count of bytes or chunks available to the child.
          type: integer
        taskChildInputId:
          description: This is the task child input id.  On create, this is the correlationId
            for the input IO Folder
          type: string
        taskChildInputRemainingCount:
          description: This is the count of bytes or chunks remaining to the child.
          type: integer
        taskChildNumEngines:
          description: This is the number of engine instances running against this
            task.
          type: integer
        taskParentId:
          description: This is the task parent id.  On create, this is the taskCorrelationId
          type: string
        taskParentOutputCount:
          description: This is the count of bytes or chunks produced by the parent.
          type: integer
        taskParentOutputId:
          description: This is the task parent output id.  On create, this is the
            correlationId for the output IO Folder
          type: string
      type: object
    TaskStatusDetail:
      description: Represent a task status as being worked on by an engine instance.  This
        can be sent as part of heartbeat status update or when getting new work. The
        updates are deltas since last post
      properties:
        createJobsAction:
          items:
            $ref: '#/components/schemas/CreateJobsAction'
          type: array
        engineID:
          format: uuid
          type: string
        errorCount:
          description: How many errors since last error update
          type: integer
        errorDetails:
          description: JSON string containing an array of JSON Object to describe
            indvidiual errors e.g. [{"id":"xxx", "msg":"xxx"},..]
          type: string
        failureReason:
          $ref: '#/components/schemas/FailureReasonEnum'
        inputs:
          items:
            $ref: '#/components/schemas/TaskIOStatus'
          type: array
        internalJobID:
          description: Internal Job ID
          format: uuid
          type: string
        internalTaskID:
          description: Internal Task ID
          format: uuid
          type: string
        outputs:
          items:
            $ref: '#/components/schemas/TaskIOStatus'
          type: array
        priorTimestamp:
          description: UTC Timestamp of last status update or start of new task
          format: int64
          type: integer
        processedStats:
          $ref: '#/components/schemas/TaskProcessedStats'
        retryCount:
          description: How many retries since last status update
          type: integer
        taskAction:
          $ref: '#/components/schemas/TaskActionEnum'
          description: asking Controller to perform taskAction
        taskOutput:
          description: available at the end of a batch, when getting the next batch
            to work, or last heartbeat before exiting. May not present in heartbeat
            update
          type: object
        taskRouteID:
          description: the task route associated with this work item
          type: string
        taskStatus:
          $ref: '#/components/schemas/JobStatusEnum'
          description: status of task.  For stream engines, the taskStatus can be
            `complete`.  For chunk engines, the status should remain `running` and
            let controller calculate the real task status.
        timestamp:
          description: UTC Timestamp of NOW()
          format: int64
          type: integer
        workRequestID:
          format: uuid
          type: string
      type: object
    TaskStatusEnum:
      description: This is the status for the task.  This will be created as 'pending'
        for new task
      enum:
      - pending
      - queued
      - aborted
      - failed
      - complete
      - running
      - scheduled
      - rejected
      - reprocessing
      type: string
    TaskSyncBacklogInfo:
      properties:
        name:
          type: string
        values:
          description: This is an array of data SUM by time. Item format [timestamp,
            sum]
          example: '[[1583204850, 1],[1583204880, 4],[1583204910, 4]]'
          items:
            items:
              format: int64
              type: integer
            type: array
          type: array
      type: object
    TaskWorkRequest:
      properties:
        chunksCompletedCount:
          type: integer
        chunksToProcessCount:
          type: integer
        createdDateTime:
          example: '2018-03-20T09:12:28Z'
          format: date-time
          type: string
        details:
          type: string
        engineInstanceID:
          format: uuid
          type: string
        errorCount:
          type: integer
        hostID:
          format: uuid
          type: string
        internalJobID:
          format: uuid
          type: string
        internalTaskID:
          format: uuid
          type: string
        modifiedDateTime:
          example: '2018-03-20T09:15:28Z'
          format: date-time
          type: string
        skippedCount:
          type: integer
        status:
          type: string
        workRequestDetailsJSON:
          type: string
        workRequestID:
          format: uuid
          type: string
      type: object
    TasksCategoriesCountsInfo:
      example:
        count: 0
        engineCategoryName: Logo Recognition
      properties:
        count:
          description: Total amount of tasks with a particular status and an engine
            category
          format: int64
          type: integer
        engineCategoryID:
          example: 212ca2ac-24d4-439d-b02f-fba88f322e94
          format: uuid
          type: string
        engineCategoryName:
          description: Engine category name
          example: Logo Recognition
          type: string
        status:
          $ref: '#/components/schemas/TaskStatusEnum'
      type: object
    TasksCountsInfo:
      example:
        count: 0
      properties:
        count:
          description: Total amount of tasks with a particular status
          format: int64
          type: integer
        endDateTime:
          description: This is the datetime of the end of the stats period
          example: 2018-03-20 10:12:28+00:00
          format: date-time
          type: string
        startDateTime:
          description: This is the datetime of the beginning of the stats period
          example: 2018-03-20 09:12:28+00:00
          format: date-time
          type: string
        status:
          $ref: '#/components/schemas/TaskStatusEnum'
      type: object
    TasksEnginesCountsInfo:
      properties:
        count:
          description: Total amount of tasks with a particular status and an engine
          format: int64
          type: integer
        engineCategoryID:
          example: 212ca2ac-24d4-439d-b02f-fba88f322e94
          format: uuid
          type: string
        engineCategoryName:
          description: Engine category name
          example: Logo Recognition
          type: string
        engineID:
          example: 212ca2ac-24d4-439d-b02f-fba88f322e94
          format: uuid
          type: string
        engineName:
          description: Engine name
          example: Speechmatic en global engine
          type: string
        status:
          $ref: '#/components/schemas/TaskStatusEnum'
      type: object
    TasksErrorTypeCountByEngineInfo:
      example:
        count: 0
        engineID: 212ca2ac-24d4-439d-b02f-fba88f322e94
        engineName: Logo Recognition
      properties:
        count:
          description: Number of errorType for an engine
          format: int64
          type: integer
        engineID:
          example: 212ca2ac-24d4-439d-b02f-fba88f322e94
          format: uuid
          type: string
        engineName:
          description: Engine name
          example: Logo Recognition
          type: string
        errorType:
          $ref: '#/components/schemas/FailureReasonEnum'
      type: object
    TasksInstanceCountInfo:
      description: Count active engine instances by category and host
      properties:
        count:
          description: (TODO:Remove this field) Total instance by category and host
          format: int64
          type: integer
        engineCategoryID:
          description: Engine category ID
          example: d9797d47-f7a0-4a16-ae10-03e971064c79
          type: string
        engineCategoryName:
          description: Engine category name
          example: Translation
          type: string
        hostID:
          description: (TODO:Remove this field) Host ID
          example: 212ca2ac-24d4-439d-b02f-fba88f322e94
          type: string
        values:
          description: Total instance by host for the current category
          items:
            format: int64
            type: integer
          type: array
      type: object
    TasksOrganizationsStatsCount:
      properties:
        count:
          format: int64
          type: integer
        engineID:
          format: uuid
          type: string
        engineName:
          description: Engine name
          type: string
        internalOrganizationID:
          format: uuid
          type: string
        status:
          $ref: '#/components/schemas/TaskStatusEnum'
      type: object
    TasksStatusUpdateRequest:
      description: This is the request for TaskStatusUpdate
      properties:
        taskIDs:
          items:
            format: uuid
            type: string
          type: array
        taskStatus:
          $ref: '#/components/schemas/TaskStatusEnum'
      type: object
    TasksStatusUpdateResponse:
      description: This is the response for TaskStatusUpdate Request
      properties:
        error:
          $ref: '#/components/schemas/Error'
        success:
          $ref: '#/components/schemas/OperationSuccess'
      type: object
    TasksTimeRangesCountsInfo:
      properties:
        engineCategoryID:
          description: engineCategoryID. It should be not empty when filtering by
            engineCategoryID
          format: uuid
          type: string
        engineCategoryName:
          description: engineCategoryName
          type: string
        status:
          $ref: '#/components/schemas/TaskStatusEnum'
        values:
          description: This is an array of data count by time. Item format [timestamp,
            count]
          example: '[[1583204850, 1],[1583204880, 4],[1583204910, 4]]'
          items:
            items:
              format: int64
              type: integer
            type: array
          type: array
      type: object
    TerminateHostRequest:
      properties:
        detail:
          type: string
        reason:
          $ref: '#/components/schemas/HostTerminationReasonEnum'
      type: object
    TokenDetail:
      properties:
        accessAllOrganization:
          type: boolean
        apiRateLimitHour:
          format: int64
          type: integer
        bytesRateLimitHour:
          format: int64
          type: integer
        createdDateTime:
          description: This is the datetime the core was created
          example: '2018-03-20T09:12:28Z'
          format: date-time
          type: string
        engineInstanceID:
          format: uuid
          type: string
        expiration:
          description: This is the datetime the core was created
          example: '2018-03-20T09:12:28Z'
          format: date-time
          type: string
          x-nullable: true
        hostID:
          format: uuid
          type: string
        kvpJSON:
          format: json
          type: string
        maxAPI:
          format: int64
          type: integer
        maxBytes:
          format: int64
          type: integer
        maxTasks:
          format: int64
          type: integer
        modifiedDateTime:
          description: This is the datetime the core was last modified.
          example: '2018-03-20T09:12:28Z'
          format: date-time
          type: string
        organizationIDs:
          items:
            $ref: '#/components/schemas/OrganizationID'
          type: array
        roleIDs:
          items:
            format: uuid
            type: string
          type: array
        taskRateLimitHour:
          format: int64
          type: integer
        tokenID:
          format: uuid
          type: string
        totalCountAPI:
          format: int64
          type: integer
        totalCountBytes:
          format: int64
          type: integer
        totalCountTasks:
          format: int64
          type: integer
        type:
          $ref: '#/components/schemas/TokenTypeEnum'
        userID:
          format: uuid
          type: string
      type: object
    TokenTypeEnum:
      enum:
      - engine_instance
      - host
      - api
      - user
      type: string
    TotalPendingScheduledJobInfo:
      properties:
        instance:
          description: This is an IP that reported the current metric
          type: string
        runMode:
          $ref: '#/components/schemas/ScheduleRunModeEnum'
        values:
          description: This is an array of data count by time. Item format [timestamp,
            count]
          example: '[[1583204850, 1],[1583204880, 4],[1583204910, 4]]'
          items:
            items:
              format: int64
              type: integer
            type: array
          type: array
      type: object
    UpdateApplicationDetail:
      properties:
        applicationDescription:
          type: string
        applicationID:
          format: uuid
          type: string
        applicationName:
          type: string
        applicationStatus:
          $ref: '#/components/schemas/ApplicationStatusEnum'
        applicationType:
          $ref: '#/components/schemas/ApplicationTypeEnum'
        kvpJSON:
          format: json
          type: string
      type: object
    UpdateBuildResponse:
      properties:
        error:
          $ref: '#/components/schemas/Error'
        result:
          $ref: '#/components/schemas/BuildDetail'
        success:
          $ref: '#/components/schemas/OperationSuccess'
      type: object
    UpdateEngineBuildState:
      properties:
        buildID:
          format: uuid
          type: string
        buildState:
          $ref: '#/components/schemas/EngineBuildStateEnum'
          description: Build State
        engineID:
          format: uuid
          type: string
      type: object
    UpdateEngineBuildStateRequest:
      properties:
        build:
          $ref: '#/components/schemas/UpdateEngineBuildState'
      type: object
    UpdateEngineCategoryResponse:
      properties:
        error:
          $ref: '#/components/schemas/Error'
        result:
          $ref: '#/components/schemas/EngineCategoryDetail'
        success:
          $ref: '#/components/schemas/OperationSuccess'
      type: object
    UpdateEngineDetail:
      properties:
        applicationIDsJSON:
          description: JSON Data for application_id
          format: json
          type: string
        child_priority_adjustment_on_complete:
          description: When this task completes, adjust the priority of child tasks
            by this value
          format: int32
          type: integer
        cpuShares:
          format: int32
          type: integer
        dependencyJSON:
          description: JSON Data for dependency
          format: json
          type: string
        dontrunComplete:
          description: If true, do not run this engine.  Complete as soon as possible
            and do not assign work.
          type: boolean
        edge_version:
          description: edge version of the engine
          format: int32
          type: integer
        engineCategoryID:
          description: The UUID of the Engine Category
          format: uuid
          type: string
        engineID:
          format: uuid
          type: string
        engineName:
          description: Name of the Engine
          type: string
        engineOutputType:
          $ref: '#/components/schemas/EngineTypeEnum'
        engineState:
          $ref: '#/components/schemas/EngineStateEnum'
        engineType:
          $ref: '#/components/schemas/EngineTypeEnum'
        fieldsJSON:
          description: JSON Data for fields
          format: json
          type: string
        idleTimeout:
          format: int32
          type: integer
        internalOrganizationID:
          format: uuid
          type: string
        jwtRightsJSON:
          description: JSON Data for jwt_rights
          format: json
          type: string
        maxProcessingSecondsPerWorkItem:
          format: int32
          type: integer
        maxWaitSecondsForChunk:
          format: int32
          type: integer
        minAvailable:
          format: int64
          type: integer
        minRunning:
          format: int64
          type: integer
        numChunksPerWorkItem:
          format: int32
          type: integer
        parallelProcessing:
          description: If true, the engine can handle multiple instances working against
            the same chunk task.
          type: boolean
        parentCompleteBeforeStart:
          description: If true, the engine waits for the parent(s) to be complete
            before starting
          type: boolean
        preload:
          description: If it is `true`, that means the engine need to pull docker
            image to local
          type: boolean
        priority_adjustment:
          description: On new tasks with this engine, add this value to the priority
            of that task
          format: int32
          type: integer
        replacementEngineID:
          format: uuid
          type: string
        updateStatusInterval:
          format: int32
          type: integer
        validationJSON:
          description: JSON Data for validation
          format: json
          type: string
      type: object
    UpdateEngineRequest:
      properties:
        engine:
          $ref: '#/components/schemas/UpdateEngineDetail'
      type: object
    UpdateEngineResponse:
      properties:
        error:
          $ref: '#/components/schemas/Error'
        result:
          $ref: '#/components/schemas/EngineDetail'
        success:
          $ref: '#/components/schemas/OperationSuccess'
      type: object
    UpdateEnginesForResourceRequest:
      properties:
        engines:
          items:
            $ref: '#/components/schemas/EngineID'
          type: array
      type: object
    UpdateEnginesForResourceResponse:
      properties:
        error:
          $ref: '#/components/schemas/Error'
        result:
          items:
            $ref: '#/components/schemas/EngineID'
          type: array
        success:
          $ref: '#/components/schemas/OperationSuccess'
      type: object
    UpdateNodeRedRequestDetail:
      properties:
        coreID:
          format: uuid
          type: string
        coreToken:
          description: core token of user session.
          type: string
        status:
          description: node-red request status
          type: string
      type: object
    UpdateOrganizationDetail:
      properties:
        basePriority:
          type: integer
        defaultRetries:
          type: integer
        defaultSLASeconds:
          type: integer
        nfsShard:
          type: integer
        taskPriorityAdjustmentStarted:
          type: integer
      type: object
    UpdatePermissionDetail:
      properties:
        active:
          type: boolean
        method:
          type: string
        parentID:
          type: string
        path:
          type: string
        permissionName:
          type: string
        type:
          $ref: '#/components/schemas/PermissionTypeEnum'
      type: object
    UpdateResourceDetail:
      properties:
        URITemplate:
          description: URI template in the go template format.
          type: string
        bindingType:
          $ref: '#/components/schemas/ResourceBindingTypeEnum'
        hostID:
          format: uuid
          type: string
        name:
          description: The name of the resource
          type: string
        params:
          description: JSON encoded field
          type: string
        pgDatabase:
          description: If postgres, this is the name of the postgres database
          type: string
        pgPass:
          description: If postgres, this is the user password.  This will be encrypted
            in storage
          format: password
          type: string
        pgUser:
          description: If postgres, this is the user name
          type: string
        redisDB:
          description: This is the redis DB number.
          format: int64
          type: integer
        redisToken:
          description: If Redis, this is the Redis token.
          type: string
        resourceID:
          description: Resource ID
          format: uuid
          type: string
        resourceState:
          $ref: '#/components/schemas/ResourceStateEnum'
        resourceType:
          $ref: '#/components/schemas/ResourceTypeEnum'
      type: object
    UpdateResourceRequest:
      properties:
        resource:
          $ref: '#/components/schemas/UpdateResourceDetail'
      type: object
    UpdateResourceResponse:
      properties:
        error:
          $ref: '#/components/schemas/Error'
        result:
          $ref: '#/components/schemas/ResourceDetail'
        success:
          $ref: '#/components/schemas/OperationSuccess'
      type: object
    UpdateResourceStateRequest:
      properties:
        resourceState:
          $ref: '#/components/schemas/ResourceStateEnum'
      type: object
    UpdateResourceStateResponse:
      properties:
        error:
          $ref: '#/components/schemas/Error'
        result:
          $ref: '#/components/schemas/ResourceDetail'
        success:
          $ref: '#/components/schemas/OperationSuccess'
      type: object
    UpdateRoleDetail:
      properties:
        active:
          type: boolean
        permissionIDs:
          items:
            type: string
          type: array
        roleName:
          type: string
      type: object
    UpdateServerTypeEngineRunningRequest:
      description: This is the request for Update ServerTypeEngineRunning
      properties:
        serverTypeEngineRunning:
          $ref: '#/components/schemas/CreateServerTypeEngineRunningDetail'
      type: object
    UpdateServerTypeEngineRunningResponse:
      description: This is the response for Update ServerTypeEngineRunning
      properties:
        error:
          $ref: '#/components/schemas/Error'
        success:
          $ref: '#/components/schemas/OperationSuccess'
      type: object
    UpdateServerTypeResponse:
      properties:
        error:
          $ref: '#/components/schemas/Error'
        result:
          $ref: '#/components/schemas/ServerTypeDetail'
        success:
          $ref: '#/components/schemas/OperationSuccess'
      type: object
    UpdateTokenDetail:
      properties:
        accessAllOrganization:
          type: boolean
        apiRateLimitHour:
          format: int64
          type: integer
        bytesRateLimitHour:
          format: int64
          type: integer
        engineInstanceID:
          format: uuid
          type: string
        expiration:
          description: The unix timestamp for the token expiration. If 0, then it
            does not expire
          format: int64
          type: integer
        hostID:
          format: uuid
          type: string
        kvpJSON:
          format: json
          type: string
        maxAPI:
          format: int64
          type: integer
        maxBytes:
          format: int64
          type: integer
        maxTasks:
          format: int64
          type: integer
        organizationIDs:
          description: This is a list of Org ID that the token can access to. If accessAllOrganization
            is true, this value will be override.
          items:
            $ref: '#/components/schemas/OrganizationID'
          type: array
        roleIDs:
          items:
            format: uuid
            type: string
          type: array
        taskRateLimitHour:
          format: int64
          type: integer
        type:
          $ref: '#/components/schemas/TokenTypeEnum'
        userID:
          format: uuid
          type: string
      type: object
    UpdateUserDetail:
      properties:
        accessAllOrganization:
          description: A user can access to all organization or not.
          type: boolean
        displayName:
          type: string
        email:
          format: email
          type: string
        expiration:
          description: The unix timestamp for the user expiration. If 0, then it does
            not expire
          format: int64
          type: integer
        internalOrganizationID:
          format: uuid
          type: string
        inviteRequested:
          type: boolean
        inviteURL:
          type: string
        isSuperAdmin:
          description: This can be only updated to true by another super admin.
          type: boolean
        kvpJSON:
          format: json
          type: string
        organizationIDs:
          description: This is a list of Org ID that the user can access to.
          items:
            $ref: '#/components/schemas/OrganizationID'
          type: array
        password:
          type: string
        passwordChangeRequired:
          type: boolean
        roleIDs:
          items:
            format: uuid
            type: string
          type: array
        status:
          $ref: '#/components/schemas/UserStatusEnum'
        userID:
          format: uuid
          type: string
        userSettingsJSON:
          format: json
          type: string
      type: object
    UserDetail:
      properties:
        accessAllOrganization:
          description: A user can access to all organization or not.
          type: boolean
        createdBy:
          format: uuid
          type: string
        createdDateTime:
          description: This is the datetime the core was created
          example: '2018-03-20T09:12:28Z'
          format: date-time
          type: string
        datePasswordLastUpdated:
          description: This is the datetime the password was last updated
          example: '2018-03-20T09:12:28Z'
          format: date-time
          type: string
        displayName:
          type: string
        email:
          format: email
          type: string
        expiration:
          description: This is the expiration datetime for the current user
          example: '2018-03-20T09:12:28Z'
          format: date-time
          type: string
        internalOrganizationID:
          format: uuid
          type: string
        isSuperAdmin:
          type: boolean
        isSynchronized:
          description: This user was synchronized or not.
          type: boolean
        kvpJSON:
          format: json
          type: string
        lastLoggedIn:
          description: This is the datetime the user last logged in
          example: '2018-03-20T09:12:28Z'
          format: date-time
          type: string
        modifiedBy:
          format: uuid
          type: string
        modifiedDateTime:
          description: This is the datetime the core was last modified.
          example: '2018-03-20T09:12:28Z'
          format: date-time
          type: string
        organizationIDs:
          description: This is a list of Org ID that the user can access to.
          items:
            $ref: '#/components/schemas/OrganizationID'
          type: array
        passwordChangeRequired:
          type: boolean
        permissionIDs:
          items:
            type: string
          type: array
        roleIDs:
          items:
            format: uuid
            type: string
          type: array
        status:
          $ref: '#/components/schemas/UserStatusEnum'
        userID:
          format: uuid
          type: string
        userName:
          type: string
        userSettingsJSON:
          format: json
          type: string
      type: object
    UserStatusEnum:
      description: Flag denoting user status.  Trial users will be deactived in the
        future or converted.  Inactive users can't login.  Deleted users are soft
        deleted.
      enum:
      - active
      - trial
      - inactive
      - deleted
      type: string
    WorkRequestStatusEnum:
      description: The final status of the last work request
      enum:
      - complete
      - failed
      - pending
      - running
      - timeout
      type: string
  securitySchemes:
    api_key:
      in: header
      name: api_key
      type: apiKey
externalDocs:
  description: aiWARE Documentation
  url: https://docs.veritone.com/
info:
  contact:
    email: api@aiware.com
  description: This is the aiWARE Edge API
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: https://aiware.com/terms/
  title: aiWARE Edge API
  version: 1.0.3
openapi: 3.0.1
paths:
  /admin/applications:
    get:
      operationId: get_applications
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetApplicationsResponse'
          description: List of applications
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: Get the list of applications deployed and available on aiWARE
      tags:
      - admin
    parameters:
    - $ref: '#/components/parameters/CorrelationID'
    - $ref: '#/components/parameters/ApplicationStatus_Query_Optional'
    - $ref: '#/components/parameters/ApplicationType_Query_Optional'
    - $ref: '#/components/parameters/Offset_Query_Optional'
    - $ref: '#/components/parameters/Limit_Query_Optional'
    - description: The value should be in [applicationName, createdTime]
      in: query
      name: orderBy
      schema:
        type: string
  /admin/applications/create:
    parameters:
    - $ref: '#/components/parameters/CorrelationID'
    post:
      operationId: createAdminApplication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminApplicationCreateRequest'
        description: The input for createApplication
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminApplicationCreateResponse'
          description: Successful operation
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: This creates a new application
      tags:
      - admin
  /admin/applications/{ApplicationID}/delete:
    parameters:
    - $ref: '#/components/parameters/ApplicationID'
    - $ref: '#/components/parameters/CorrelationID'
    post:
      operationId: delete_application
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminApplicationDeleteResponse'
          description: Successful operation
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: This deletes an application
      tags:
      - admin
  /admin/applications/{ApplicationID}/detail:
    get:
      operationId: getAdminApplicationDetail
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminApplicationGetDetailResponse'
          description: Successful operation
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: This provides information on the given application.
      tags:
      - admin
    parameters:
    - $ref: '#/components/parameters/CorrelationID'
    - $ref: '#/components/parameters/ApplicationID'
  /admin/applications/{ApplicationID}/update:
    parameters:
    - $ref: '#/components/parameters/ApplicationID'
    - $ref: '#/components/parameters/CorrelationID'
    post:
      operationId: update_application
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminApplicationUpdateRequest'
        description: The input for updateApplication
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminApplicationUpdateResponse'
          description: Successful operation
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: This updates an application
      tags:
      - admin
  /admin/auth:
    parameters:
    - $ref: '#/components/parameters/CorrelationID'
    post:
      operationId: check_auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminAuthRequest'
        description: The input for check auth
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminAuthResponse'
          description: Successful operation
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: This check auth for a token
      tags:
      - admin
  /admin/backlog/clear:
    parameters:
    - $ref: '#/components/parameters/CorrelationID'
    - $ref: '#/components/parameters/Status_Query_Optional'
    - $ref: '#/components/parameters/EngineID_Query_Optional'
    - $ref: '#/components/parameters/ModifiedBefore_Query_Optional'
    - $ref: '#/components/parameters/ModifiedAfter_Query_Optional'
    - $ref: '#/components/parameters/CreatedBefore_Query_Optional'
    - $ref: '#/components/parameters/CreatedAfter_Query_Optional'
    post:
      operationId: clearBacklog
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminCoreCreateResponse'
          description: Successful operation
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: This clears some or all of the currently queued tasks
      tags:
      - admin
  /admin/backlog/reset-alloc:
    parameters:
    - $ref: '#/components/parameters/CorrelationID'
    post:
      operationId: resetAllocTable
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminOperationResponse'
          description: Returns the status on the operation
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: This resets the alloc table
      tags:
      - admin
  /admin/backlog/summary:
    get:
      operationId: getBacklogSummary
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBacklogSummaryResponse'
          description: Successful operation
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: This provides summary information on the current backlog
      tags:
      - admin
    parameters:
    - $ref: '#/components/parameters/CorrelationID'
  /admin/build/create:
    parameters:
    - $ref: '#/components/parameters/CorrelationID'
    post:
      operationId: create_build
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBuildRequest'
        description: The fields for an engine build
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateBuildResponse'
          description: Result of the Create Engine Build API
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: This API creates a new engine build
      tags:
      - engine
  /admin/build/{BuildID}/detail:
    get:
      operationId: get_engine_build
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetEngineBuildResponse'
          description: Specific build
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: This gets a particular build
      tags:
      - engine
    parameters:
    - $ref: '#/components/parameters/CorrelationID'
    - $ref: '#/components/parameters/BuildID_Path_Required'
  /admin/build/{BuildID}/pause:
    parameters:
    - $ref: '#/components/parameters/CorrelationID'
    - $ref: '#/components/parameters/BuildID_Path_Required'
    - $ref: '#/components/parameters/BuildState_Query_Optional'
    post:
      operationId: pause_build
      responses:
        204:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminOperationResponse'
          description: Pause a particular build
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: This API pauses a build so that tasks based on this engine build will
        not run.
      tags:
      - engine
  /admin/build/{BuildID}/resume:
    parameters:
    - $ref: '#/components/parameters/CorrelationID'
    - $ref: '#/components/parameters/BuildID_Path_Required'
    post:
      operationId: resume_build
      responses:
        204:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminOperationResponse'
          description: Resume a particular build
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: This API resumes a build so that tasks based on this engine build will
        start running.
      tags:
      - engine
  /admin/build/{BuildID}/update:
    parameters:
    - $ref: '#/components/parameters/CorrelationID'
    - $ref: '#/components/parameters/EngineID_Path_Required'
    - $ref: '#/components/parameters/BuildID_Path_Required'
    post:
      operationId: update_engine_build
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BuildDetail'
        description: Update Engine BUild
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateBuildResponse'
          description: List of engines
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: This API updates the specified engine
      tags:
      - engine
  /admin/config:
    get:
      operationId: getConfig
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminConfigResponse'
          description: Successful operation
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: This provides all the config for the cluster
      tags:
      - admin
    parameters:
    - $ref: '#/components/parameters/CorrelationID'
    - $ref: '#/components/parameters/ConfigSection_Optional'
    - $ref: '#/components/parameters/ConfigKey_Optional'
    - in: query
      name: deprecated
      schema:
        type: boolean
    - in: query
      name: secure
      schema:
        type: boolean
    - in: query
      name: isOverridden
      schema:
        type: boolean
    post:
      operationId: updateConfigAll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminConfigUpdateRequest'
        description: Config Update for core
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminConfigUpdateResponse'
          description: Successful operation
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: This gets the config for the cluster
      tags:
      - admin
  /admin/config/{ConfigSection}:
    get:
      operationId: getConfigSection
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminConfigSectionResponse'
          description: Successful operation
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: This provides all the config for the cluster
      tags:
      - admin
    parameters:
    - $ref: '#/components/parameters/CorrelationID'
    - $ref: '#/components/parameters/ConfigSection'
    post:
      operationId: updateConfigSection
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminConfigUpdateSectionRequest'
        description: The input for createConfigSection
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminConfigUpdateSectionResponse'
            text/csv:
              schema:
                example: '....'
                type: string
            text/html:
              schema:
                example: '....'
                type: string
            text/plain:
              schema:
                example: '....'
                type: string
          description: Successful operation
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: This gets the config for the cluster
      tags:
      - admin
  /admin/config/{ConfigSection}/{ConfigKey}:
    get:
      operationId: getConfigSectionKey
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminConfigSectionKeyResponse'
            text/csv:
              schema:
                example: '....'
                type: string
            text/html:
              schema:
                example: '....'
                type: string
            text/plain:
              schema:
                example: '....'
                type: string
          description: Successful operation
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: This provides a config section key for the cluster
      tags:
      - admin
    parameters:
    - $ref: '#/components/parameters/CorrelationID'
    - $ref: '#/components/parameters/ConfigSection'
    - $ref: '#/components/parameters/ConfigKey'
    post:
      operationId: updateConfigSectionKey
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminConfigUpdateSectionKeyRequest'
        description: The input for createSectionKey
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminConfigUpdateSectionKeyResponse'
            text/csv:
              schema:
                example: '....'
                type: string
            text/html:
              schema:
                example: '....'
                type: string
            text/plain:
              schema:
                example: '....'
                type: string
          description: Successful operation
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: This updates the config for the cluster for a given key
      tags:
      - admin
  /admin/core/{CoreID}/detail:
    get:
      operationId: getAdminCoreDetail
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminCoreGetDetailResponse'
          description: Successful operation
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: This provides information on the given core.
      tags:
      - admin
    parameters:
    - $ref: '#/components/parameters/CorrelationID'
    - $ref: '#/components/parameters/CoreID'
  /admin/cores:
    get:
      operationId: getAdminCores
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCoresResponse'
          description: Successful operation
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: This provides a list of core systems
      tags:
      - admin
    parameters:
    - $ref: '#/components/parameters/CorrelationID'
  /admin/cores/create:
    parameters:
    - $ref: '#/components/parameters/CorrelationID'
    post:
      operationId: createAdminCore
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminCoreCreateRequest'
        description: The input for createCor
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminCoreCreateResponse'
          description: Successful operation
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: This creates a new core
      tags:
      - admin
  /admin/engine/categories:
    get:
      operationId: get_engine_categories
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetEngineCategoriesResponse'
          description: Result of get_engine_categories
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: This provides a list of engine categories
      tags:
      - engine
    parameters:
    - $ref: '#/components/parameters/CorrelationID'
  /admin/engine/category/create:
    parameters:
    - $ref: '#/components/parameters/CorrelationID'
    post:
      operationId: create_engine_category
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateEngineCategoryDetail'
        description: The fields for an engine category
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateEngineCategoryResponse'
          description: Result of the Create Engine Category API
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: This API creates a new engine category
      tags:
      - engine
  /admin/engine/category/{EngineCategoryID}/detail:
    get:
      operationId: get_engine_category_detail
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetEngineCategoryDetailResponse'
          description: Result of get_engine_category_detail
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: This provides detail for an engine category
      tags:
      - engine
    parameters:
    - $ref: '#/components/parameters/CorrelationID'
    - $ref: '#/components/parameters/EngineCategoryID'
  /admin/engine/category/{EngineCategoryID}/update:
    parameters:
    - $ref: '#/components/parameters/CorrelationID'
    - $ref: '#/components/parameters/EngineCategoryID'
    post:
      operationId: update_engine_category
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateEngineCategoryResponse'
          description: This updates the specified engine category
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: This updates the specified engine category
      tags:
      - engine
  /admin/engine/create:
    parameters:
    - $ref: '#/components/parameters/CorrelationID'
    post:
      operationId: create_engine
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateEngineRequest'
        description: The fields for an engine
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateEngineResponse'
          description: Result of the Create Engine API
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: This API creates a new engine
      tags:
      - engine
  /admin/engine/{EngineID}/builds:
    get:
      operationId: get_engine_builds
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetEngineBuildsResponse'
          description: List of engines
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: Get the list of builds deployed and available on aiWARE for a particular
        engine
      tags:
      - engine
    parameters:
    - $ref: '#/components/parameters/CorrelationID'
    - $ref: '#/components/parameters/EngineID_Path_Required'
    - $ref: '#/components/parameters/BuildState_Query_Optional'
  /admin/engine/{EngineID}/config/{ConfigSection}/{ConfigKey}:
    get:
      operationId: getAdminEngineConfigSectionKey
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminEngineConfigSectionKeyResponse'
            text/csv:
              schema:
                example: '....'
                type: string
            text/html:
              schema:
                example: '....'
                type: string
            text/plain:
              schema:
                example: '....'
                type: string
          description: Successful operation
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: This provides a config section key for the engine
      tags:
      - admin
    parameters:
    - $ref: '#/components/parameters/CorrelationID'
    - $ref: '#/components/parameters/EngineID'
    - $ref: '#/components/parameters/ConfigSection'
    - $ref: '#/components/parameters/ConfigKey'
  /admin/engine/{EngineID}/delete:
    parameters:
    - $ref: '#/components/parameters/CorrelationID'
    - $ref: '#/components/parameters/EngineID_Path_Required'
    post:
      operationId: delete_engine_post
      responses:
        204:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminOperationResponse'
          description: Delete a particular engine
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: This API delets an engine
      tags:
      - engine
  /admin/engine/{EngineID}/detail:
    get:
      operationId: get_engine_detail
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetEngineDetailResponse'
          description: List of engines
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: This API provides the engine detail result
      tags:
      - engine
    parameters:
    - $ref: '#/components/parameters/EngineID_Path_Required'
  /admin/engine/{EngineID}/pause:
    parameters:
    - $ref: '#/components/parameters/CorrelationID'
    - $ref: '#/components/parameters/EngineID_Path_Required'
    post:
      operationId: pause_engine
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PauseEngineRequest'
        description: Engine Instance Info
      responses:
        204:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminOperationResponse'
          description: Pause a particular engine
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: This API pauses an engine so that tasks based on this engine will not
        run.
      tags:
      - engine
  /admin/engine/{EngineID}/replace:
    parameters:
    - $ref: '#/components/parameters/EngineID_Path_Required'
    post:
      operationId: replace_engine
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReplaceEngineRequest'
        description: Engine Instance Info
      responses:
        204:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminOperationResponse'
          description: Pause a particular engine
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: This API replaced an engine so that tasks based on this engine will
        not run.
      tags:
      - engine
  /admin/engine/{EngineID}/resources:
    get:
      operationId: get_resources_for_engine
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetResourcesForEngineResponse'
          description: This returns a set of resources
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: Get list of resources for engine
      tags:
      - admin
    parameters:
    - $ref: '#/components/parameters/CorrelationID'
    - $ref: '#/components/parameters/EngineID_Path_Required'
  /admin/engine/{EngineID}/resume:
    parameters:
    - $ref: '#/components/parameters/CorrelationID'
    - $ref: '#/components/parameters/EngineID_Path_Required'
    post:
      operationId: resume_engine
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResumeEngineRequest'
        description: Engine Instance Info
      responses:
        204:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminOperationResponse'
          description: Resume a particular build
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: This API resumes a build so that tasks based on this engine build will
        start running.
      tags:
      - engine
  /admin/engine/{EngineID}/update:
    parameters:
    - $ref: '#/components/parameters/CorrelationID'
    - $ref: '#/components/parameters/EngineID_Path_Required'
    post:
      operationId: update_engine
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateEngineRequest'
        description: Update Engine
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateEngineResponse'
          description: Result of the Update Engine API
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: This API updates the specified engine
      tags:
      - engine
  /admin/engines:
    get:
      operationId: get_engines
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetEnginesResponse'
          description: List of engines
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: Get the list of engines deployed and available on aiWARE
      tags:
      - engine
    parameters:
    - $ref: '#/components/parameters/CorrelationID'
    - $ref: '#/components/parameters/InternalOrganizationID_Query_Optional'
    - $ref: '#/components/parameters/EngineName_Query_Optional'
    - $ref: '#/components/parameters/EngineState_Query_Optional'
    - $ref: '#/components/parameters/EngineType_Query_Optional'
    - $ref: '#/components/parameters/EngineOutputType_Query_Optional'
    - $ref: '#/components/parameters/EngineCategoryID_Query_Optional'
    - $ref: '#/components/parameters/Engine_IDs_Query_Optional'
    - $ref: '#/components/parameters/Offset_Query_Optional'
    - $ref: '#/components/parameters/Limit_Query_Optional'
    - $ref: '#/components/parameters/Direction_Query_Optional'
    - $ref: '#/components/parameters/StartTime'
    - $ref: '#/components/parameters/EndTime'
    - $ref: '#/components/parameters/Preload_Query_Optional'
    - description: The value should be in [name, state, type, organizationID, createdTime]
      in: query
      name: orderBy
      schema:
        type: string
  /admin/host/{HostID}/resources:
    get:
      operationId: get_resources_for_host
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetResourcesForHostResponse'
          description: This returns a set of resources
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: Get list of resources for host
      tags:
      - admin
    parameters:
    - $ref: '#/components/parameters/CorrelationID'
    - $ref: '#/components/parameters/HostID'
  /admin/licenses:
    get:
      operationId: get_licenses
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLicensesResponse'
          description: Successful operation
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: This provides a licenses on the system
      tags:
      - admin
    parameters:
    - $ref: '#/components/parameters/CorrelationID'
  /admin/licenses/apply:
    parameters:
    - $ref: '#/components/parameters/CorrelationID'
    post:
      operationId: apply_license
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateLicenseDetail'
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LicenseDetail'
          description: Successful operation
          headers:
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: This applies a license to aiWARE
      tags:
      - admin
  /admin/licenses/{LicenseID}/delete:
    delete:
      operationId: delete_license
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminOperationResponse'
          description: Successful operation
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: This deletes a license from aiWARE
      tags:
      - admin
    parameters:
    - $ref: '#/components/parameters/CorrelationID'
    - $ref: '#/components/parameters/LicenseID'
  /admin/licenses/{LicenseID}/detail:
    get:
      operationId: get_license_detail
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LicenseDetail'
          description: Successful operation
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: This gets detail on a license key
      tags:
      - admin
    parameters:
    - $ref: '#/components/parameters/CorrelationID'
    - $ref: '#/components/parameters/LicenseID'
  /admin/organization/{OrganizationID}/detail:
    get:
      operationId: getAdminOrganizationDetail
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminOrganizationGetDetailResponse'
          description: Successful operation
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: This gets organization detail by ID
      tags:
      - admin
    parameters:
    - $ref: '#/components/parameters/CorrelationID'
    - $ref: '#/components/parameters/OrganizationID'
  /admin/organization/{OrganizationID}/tokens:
    get:
      operationId: getAdminOrganizationTokens
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminOrganizationGetTokensResponse'
          description: Successful operation
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: This provides information on the given organization tokens.
      tags:
      - admin
    parameters:
    - $ref: '#/components/parameters/CorrelationID'
    - $ref: '#/components/parameters/OrganizationID'
  /admin/organization/{OrganizationID}/update:
    parameters:
    - $ref: '#/components/parameters/CorrelationID'
    - $ref: '#/components/parameters/OrganizationID'
    post:
      operationId: update_organization
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminOrganizationUpdateRequest'
        description: The input for updateOrganization
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminOrganizationUpdateResponse'
          description: Successful operation
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: This updates a organization
      tags:
      - admin
  /admin/organizations:
    get:
      operationId: getAdminOrganizations
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminOrganizationsGetResponse'
          description: Successful operation
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: This provides a list of organizations
      tags:
      - admin
    parameters:
    - $ref: '#/components/parameters/CorrelationID'
    - $ref: '#/components/parameters/Offset_Query_Optional'
    - $ref: '#/components/parameters/Limit_Query_Optional'
    - description: Filter by organizationID
      in: query
      name: organizationID
      schema:
        format: uuid
        type: string
    - description: Filter by organizationName
      in: query
      name: organizationName
      schema:
        type: string
    - description: The value should be in [organizationName, organizationID, createdTime,
        basePriority]
      in: query
      name: orderBy
      schema:
        type: string
  /admin/organizations/create:
    parameters:
    - $ref: '#/components/parameters/CorrelationID'
    post:
      operationId: createAdminOrganization
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminOrganizationCreateRequest'
        description: The input for createOrganization
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminOrganizationCreateResponse'
          description: Successful operation
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: This updates the config for the cluster for a given key
      tags:
      - admin
  /admin/resource/create:
    parameters:
    - $ref: '#/components/parameters/CorrelationID'
    post:
      operationId: create_resource
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateResourceRequest'
        description: The fields for a resource definition
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateResourceResponse'
          description: Result of the Create Resource API
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: This API creates a new resource definition such as a database, nsq
        or redis DB.
      tags:
      - admin
  /admin/resource/{ResourceID}:
    get:
      operationId: get_resource
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetResourceResponse'
          description: This returns a resource definition
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: Get a resource definition
      tags:
      - admin
    parameters:
    - $ref: '#/components/parameters/CorrelationID'
    - $ref: '#/components/parameters/ResourceID_Path_Required'
  /admin/resource/{ResourceID}/delete:
    parameters:
    - $ref: '#/components/parameters/CorrelationID'
    - $ref: '#/components/parameters/ResourceID_Path_Required'
    post:
      operationId: delete_resource
      responses:
        204:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminOperationResponse'
          description: Delete a particular resource
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: This deletes the specified resource
      tags:
      - admin
  /admin/resource/{ResourceID}/engine:
    parameters:
    - $ref: '#/components/parameters/CorrelationID'
    - $ref: '#/components/parameters/ResourceID_Path_Required'
    post:
      operationId: add_engine_to_resource
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddEngineForResourceRequest'
        description: Add Engine Mapping for Resource
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddEngineForResourceResponse'
          description: The response of UpdateEngineMappingForResource
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: This API adds the engine to the resource
      tags:
      - admin
  /admin/resource/{ResourceID}/engine/update:
    parameters:
    - $ref: '#/components/parameters/CorrelationID'
    - $ref: '#/components/parameters/ResourceID_Path_Required'
    post:
      operationId: update_engines_for_resource
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateEnginesForResourceRequest'
        description: Update Engine Mapping for Resource
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateEnginesForResourceResponse'
          description: The response of UpdateEngineMappingForResource
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: This API updates the specified server type-running engine
      tags:
      - admin
  /admin/resource/{ResourceID}/engine/{EngineID}/delete:
    parameters:
    - $ref: '#/components/parameters/CorrelationID'
    - $ref: '#/components/parameters/ResourceID_Path_Required'
    - $ref: '#/components/parameters/EngineID_Path_Required'
    post:
      operationId: remove_engine_for_resource
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoveEngineForResourceRequest'
        description: Remove Engine Mapping for Resource
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoveEngineForResourceResponse'
          description: The response of RemoveEngineMappingForResource
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: This API removes the engine to the resource
      tags:
      - admin
  /admin/resource/{ResourceID}/engines:
    get:
      operationId: get_engines_for_resource
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetEnginesForResourceResponse'
          description: This returns a set of engine IDs
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: Get list of engines for resource
      tags:
      - admin
    parameters:
    - $ref: '#/components/parameters/CorrelationID'
    - $ref: '#/components/parameters/ResourceID_Path_Required'
  /admin/resource/{ResourceID}/service:
    parameters:
    - $ref: '#/components/parameters/CorrelationID'
    - $ref: '#/components/parameters/ResourceID_Path_Required'
    post:
      operationId: add_service_to_resource
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddServiceForResourceRequest'
        description: Add Service Mapping for Resource
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddServiceForResourceResponse'
          description: The response of AddEngineForResourceResponse
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: This API adds the service to the resource
      tags:
      - admin
  /admin/resource/{ResourceID}/update:
    parameters:
    - $ref: '#/components/parameters/CorrelationID'
    - $ref: '#/components/parameters/ResourceID_Path_Required'
    post:
      operationId: update_resource
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateResourceRequest'
        description: Update Resource
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateResourceResponse'
          description: Result of the Update Resource API
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: This API updates the specified resource
      tags:
      - admin
  /admin/resource/{ResourceID}/updatestate:
    parameters:
    - $ref: '#/components/parameters/CorrelationID'
    - $ref: '#/components/parameters/ResourceID_Path_Required'
    post:
      operationId: update_resource_state
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateResourceStateRequest'
        description: Update Resource State
        required: true
      responses:
        200:
          description: Result of the Update Resource State API
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: This API updates the state of the specified resource
      tags:
      - admin
  /admin/resources:
    get:
      operationId: get_resources
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetResourcesResponse'
          description: List of resources
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: Get the list of resources
      tags:
      - admin
    parameters:
    - $ref: '#/components/parameters/CorrelationID'
    - $ref: '#/components/parameters/Engine_IDs_Query_Optional'
    - $ref: '#/components/parameters/ResourceType_Query_Optional'
    - $ref: '#/components/parameters/Offset_Query_Optional'
    - $ref: '#/components/parameters/Limit_Query_Optional'
    - $ref: '#/components/parameters/Direction_Query_Optional'
    - description: The sort column to use
      in: query
      name: orderBy
      schema:
        type: string
  /admin/server_type/{ServerTypeID}/add:
    parameters:
    - $ref: '#/components/parameters/CorrelationID'
    - $ref: '#/components/parameters/ServerTypeID_Path_Required'
    post:
      operationId: addservers_server_type
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddServersToServerTypeRequest'
        description: Add Servers Server Type
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminOperationResponse'
          description: List of engines
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: This API add servers to the specified server type
      tags:
      - admin
  /admin/server_type/{ServerTypeID}/delete:
    delete:
      operationId: delete_server_type
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminOperationResponse'
          description: Delete a particular server type
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: This API deletes the specified server type
      tags:
      - admin
    parameters:
    - $ref: '#/components/parameters/CorrelationID'
    - $ref: '#/components/parameters/ServerTypeID_Path_Required'
    post:
      operationId: delete_server_type_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteServerTypeRequest'
        description: Engine Instance Info
      responses:
        204:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminOperationResponse'
          description: Delete a particular engine
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: This API deletes the specified server type
      tags:
      - admin
  /admin/server_type/{ServerTypeID}/desired:
    parameters:
    - $ref: '#/components/parameters/CorrelationID'
    - $ref: '#/components/parameters/ServerTypeID_Path_Required'
    post:
      operationId: desiredservers_server_type
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DesiredServersToServerTypeRequest'
        description: Set Servers for Server Type
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminOperationResponse'
          description: Response to operation
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: This API add servers to the specified server type
      tags:
      - admin
  /admin/server_type/{ServerTypeID}/detail:
    get:
      operationId: get_server_type
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetServerTypeResponse'
          description: Successful operation
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: This provides detail on the server type
      tags:
      - admin
    parameters:
    - $ref: '#/components/parameters/CorrelationID'
    - $ref: '#/components/parameters/ServerTypeID_Path_Required'
  /admin/server_type/{ServerTypeID}/engine/{EngineID}/delete:
    delete:
      operationId: delete_server_type_running_engine
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminOperationResponse'
          description: The response for delete server type-running engine
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: This API deletes the running engine for a server type
      tags:
      - admin
    parameters:
    - $ref: '#/components/parameters/CorrelationID'
    - $ref: '#/components/parameters/ServerTypeID_Path_Required'
    - $ref: '#/components/parameters/EngineID_Path_Required'
  /admin/server_type/{ServerTypeID}/engine/{EngineID}/detail:
    get:
      operationId: get_server_type_engine_running_detail
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetServerTypeRunningEngineDetailResponse'
          description: Successful operation
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: This gets the detail of server type - running engine
      tags:
      - admin
    parameters:
    - $ref: '#/components/parameters/CorrelationID'
    - $ref: '#/components/parameters/ServerTypeID_Path_Required'
    - $ref: '#/components/parameters/EngineID_Path_Required'
  /admin/server_type/{ServerTypeID}/engine/{EngineID}/update:
    parameters:
    - $ref: '#/components/parameters/CorrelationID'
    - $ref: '#/components/parameters/ServerTypeID_Path_Required'
    - $ref: '#/components/parameters/EngineID_Path_Required'
    post:
      operationId: update_server_type_engine_running
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateServerTypeEngineRunningRequest'
        description: Update Server Type - Running Engine
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateServerTypeEngineRunningResponse'
          description: The response of UpdateServerTypeEngineRunning
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: This API updates the specified server type-running engine
      tags:
      - admin
  /admin/server_type/{ServerTypeID}/remove:
    parameters:
    - $ref: '#/components/parameters/CorrelationID'
    - $ref: '#/components/parameters/ServerTypeID_Path_Required'
    post:
      operationId: removeservers_server_type
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoveServersToServerTypeRequest'
        description: Update Server Type
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminOperationResponse'
          description: List of engines
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: This API removes servers from the specified server type
      tags:
      - admin
  /admin/server_type/{ServerTypeID}/update:
    parameters:
    - $ref: '#/components/parameters/CorrelationID'
    - $ref: '#/components/parameters/ServerTypeID_Path_Required'
    post:
      operationId: update_server_type
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServerTypeDetail'
        description: Update Server Type
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateServerTypeResponse'
          description: List of engines
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: This API updates the specified server type
      tags:
      - admin
  /admin/server_types:
    get:
      operationId: get_server_types
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetServerTypesResponse'
          description: Successful operation
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: This lists the server types available on the system
      tags:
      - admin
    parameters:
    - $ref: '#/components/parameters/CorrelationID'
    - $ref: '#/components/parameters/RunMode'
  /admin/server_types/create:
    parameters:
    - $ref: '#/components/parameters/CorrelationID'
    post:
      operationId: create_server_type
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateServerTypeRequest'
        description: The input for createServerType
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateServerTypeResponse'
          description: Successful operation
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: This creates a new server type
      tags:
      - admin
  /admin/server_types/running_engine/create:
    parameters:
    - $ref: '#/components/parameters/CorrelationID'
    post:
      operationId: create_server_type_engine_running
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateServerTypeEngineRunningRequest'
        description: The input for createServerTypeEngineRunning
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateServerTypeEngineRunningResponse'
          description: Successful operation
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: This creates a new server_type_engine_running
      tags:
      - admin
  /admin/server_types/running_engines:
    get:
      operationId: get_server_type_engine_running
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetServerTypeRunningEnginesResponse'
          description: Successful operation
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: This lists the running engine with server types
      tags:
      - admin
    parameters:
    - $ref: '#/components/parameters/CorrelationID'
    - $ref: '#/components/parameters/ServerTypeID_Query_Optional'
    - $ref: '#/components/parameters/EngineID_Query_Optional'
    - description: the number of records to skip before getting the result set
      in: query
      name: offset
      schema:
        format: int64
        type: integer
    - description: the number of records to return.
      in: query
      name: limit
      schema:
        default: 100
        format: int64
        type: integer
  /admin/service/create:
    parameters:
    - $ref: '#/components/parameters/CorrelationID'
    post:
      operationId: create_service
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateServiceRequest'
        description: The fields for a service definition
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateServiceResponse'
          description: Result of the Create Service API
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: This API creates a new service definition.
      tags:
      - admin
  /admin/service/instances:
    get:
      operationId: getAdminServiceInstances
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAdminServiceInstancesResponse'
          description: Successful operation
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: This lists the service instances available for a system
      tags:
      - admin
    parameters:
    - $ref: '#/components/parameters/CorrelationID'
  /admin/service/{ServiceID}/config:
    get:
      operationId: getAdminServiceConfig
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminServiceConfigResponse'
          description: Successful operation
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: This provides all the config for the service
      tags:
      - admin
    parameters:
    - $ref: '#/components/parameters/CorrelationID'
    - $ref: '#/components/parameters/ServiceID'
    - $ref: '#/components/parameters/ConfigKey_Optional'
  /admin/service/{ServiceID}/config/{ConfigSection}:
    get:
      operationId: getAdminServiceConfigSection
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminServiceConfigSectionResponse'
          description: Successful operation
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: This provides all the config for the service
      tags:
      - admin
    parameters:
    - $ref: '#/components/parameters/CorrelationID'
    - $ref: '#/components/parameters/ServiceID'
    - $ref: '#/components/parameters/ConfigSection'
  /admin/service/{ServiceID}/config/{ConfigSection}/{ConfigKey}:
    get:
      operationId: getAdminServiceConfigSectionKey
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminServiceConfigSectionKeyResponse'
            text/csv:
              schema:
                example: '....'
                type: string
            text/html:
              schema:
                example: '....'
                type: string
            text/plain:
              schema:
                example: '....'
                type: string
          description: Successful operation
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: This provides a config section key for the service
      tags:
      - admin
    parameters:
    - $ref: '#/components/parameters/CorrelationID'
    - $ref: '#/components/parameters/ServiceID'
    - $ref: '#/components/parameters/ConfigSection'
    - $ref: '#/components/parameters/ConfigKey'
  /admin/service/{ServiceID}/resources:
    get:
      operationId: get_resources_for_service
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetResourcesForServiceResponse'
          description: This returns a set of resources
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: Get list of resources for service
      tags:
      - admin
    parameters:
    - $ref: '#/components/parameters/CorrelationID'
    - $ref: '#/components/parameters/ServiceID'
  /admin/services:
    get:
      operationId: get_services
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAdminServicesResponse'
          description: Successful operation
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: This lists the services available on the system
      tags:
      - admin
    parameters:
    - $ref: '#/components/parameters/CorrelationID'
    - description: Filter by tags
      in: query
      name: tags
      schema:
        type: string
  /admin/status:
    get:
      operationId: get_admin_status
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EngineInstanceInfo'
            text/csv:
              schema:
                example: '....'
                type: string
            text/html:
              schema:
                example: '....'
                type: string
            text/plain:
              schema:
                example: '....'
                type: string
          description: Successful operation
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: This provides information on the status of the aiWARE edge
      tags:
      - admin
    parameters:
    - $ref: '#/components/parameters/StatusFormat'
    - $ref: '#/components/parameters/CorrelationID'
  /admin/terminate:
    parameters:
    - $ref: '#/components/parameters/CorrelationID'
    post:
      operationId: adminTerminateCluster
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminOperationRequest'
        description: ClusterID
      responses:
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: This terminates the cluster
      tags:
      - admin
  /admin/token/{TokenID}/delete:
    parameters:
    - $ref: '#/components/parameters/TokenID'
    - $ref: '#/components/parameters/CorrelationID'
    post:
      operationId: delete_token
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminTokenDeleteResponse'
          description: Successful operation
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: This deletes a token
      tags:
      - admin
  /admin/token/{TokenID}/detail:
    get:
      operationId: get_admin_token_detail
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenDetail'
          description: Successful operation
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: Get the token info by ID
      tags:
      - admin
    parameters:
    - $ref: '#/components/parameters/CorrelationID'
    - $ref: '#/components/parameters/TokenID'
  /admin/token/{TokenID}/permissions:
    get:
      operationId: getAdminTokenPermissions
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminTokenPermissionsGetResponse'
          description: Successful operation
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: This provides a list of all token permissions for a token by TokenID
      tags:
      - admin
    parameters:
    - $ref: '#/components/parameters/CorrelationID'
    - $ref: '#/components/parameters/TokenID'
  /admin/token/{TokenID}/update:
    parameters:
    - $ref: '#/components/parameters/TokenID'
    - $ref: '#/components/parameters/CorrelationID'
    post:
      operationId: update_token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminTokenUpdateRequest'
        description: The input for updateToken
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminTokenUpdateResponse'
          description: Successful operation
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: This updates a token
      tags:
      - admin
  /admin/tokens:
    get:
      operationId: getAdminTokens
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminGetTokensResponse'
          description: Successful operation
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: This provides information about all tokens.
      tags:
      - admin
    parameters:
    - $ref: '#/components/parameters/CorrelationID'
    - $ref: '#/components/parameters/Offset_Query_Optional'
    - $ref: '#/components/parameters/Limit_Query_Optional'
    - $ref: '#/components/parameters/Direction_Query_Optional'
    - $ref: '#/components/parameters/StartCreatedTime'
    - $ref: '#/components/parameters/EndCreatedTime'
    - $ref: '#/components/parameters/StartExpireTime'
    - $ref: '#/components/parameters/EndExpireTime'
    - description: Filter by token IDs
      in: query
      name: tokenID
      schema:
        format: uuid
        type: string
    - description: Filter by organization IDs
      in: query
      name: organizationIDs
      schema:
        format: uuid
        type: string
    - description: Filter by host IDs
      in: query
      name: hostID
      schema:
        format: uuid
        type: string
    - description: Filter by user IDs
      in: query
      name: userID
      schema:
        format: uuid
        type: string
    - description: Filter by engine instance IDs
      in: query
      name: engineInstanceID
      schema:
        format: uuid
        type: string
    - description: Filter by token type
      in: query
      name: type
      schema:
        $ref: '#/components/schemas/TokenTypeEnum'
    - description: It should be in [createdTime, expirationTime, tokenType]
      in: query
      name: orderBy
      schema:
        type: string
    - description: Filters by role
      in: query
      name: roleIDs
      schema:
        format: uuid
        type: string
    - in: query
      name: accessAllOrganization
      schema:
        type: boolean
  /admin/tokens/create:
    parameters:
    - $ref: '#/components/parameters/CorrelationID'
    post:
      operationId: create_token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminTokenCreateRequest'
        description: The input for createToken
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminTokenCreateResponse'
          description: Successful operation
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: This creates a new token
      tags:
      - admin
  /admin/user/{UserID}/delete:
    parameters:
    - $ref: '#/components/parameters/UserID'
    - $ref: '#/components/parameters/CorrelationID'
    post:
      operationId: delete_user
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminUserDeleteResponse'
          description: Successful operation
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: This deletes a user
      tags:
      - admin
  /admin/user/{UserID}/detail:
    get:
      operationId: getAdminUserDetail
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminUserGetDetailResponse'
          description: Successful operation
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: This provides information on the given user.
      tags:
      - admin
    parameters:
    - $ref: '#/components/parameters/CorrelationID'
    - $ref: '#/components/parameters/UserID'
  /admin/user/{UserID}/permissions:
    get:
      operationId: getAdminUserPermissions
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminUserPermissionsGetResponse'
          description: Successful operation
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: This provides a list of all user permissions for an user by UserID
      tags:
      - admin
    parameters:
    - $ref: '#/components/parameters/CorrelationID'
    - $ref: '#/components/parameters/UserID'
  /admin/user/{UserID}/tokens:
    get:
      operationId: getAdminUserTokens
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminUserGetTokensResponse'
          description: Successful operation
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: This provides information on the given user.
      tags:
      - admin
    parameters:
    - $ref: '#/components/parameters/CorrelationID'
    - $ref: '#/components/parameters/UserID'
  /admin/user/{UserID}/update:
    parameters:
    - $ref: '#/components/parameters/UserID'
    - $ref: '#/components/parameters/CorrelationID'
    post:
      operationId: update_user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminUserUpdateRequest'
        description: The input for updateUser
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminUserUpdateResponse'
          description: Successful operation
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: This updates a user
      tags:
      - admin
  /admin/users:
    get:
      operationId: getAdminUsers
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminUsersGetResponse'
          description: Successful operation
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: This provides a list of users in the system
      tags:
      - admin
    parameters:
    - $ref: '#/components/parameters/CorrelationID'
    - description: the number of users to skip before getting the result set
      in: query
      name: offset
      schema:
        type: integer
    - description: the number of users to return.
      in: query
      name: limit
      schema:
        default: 100
        type: integer
    - description: the field to sort
      in: query
      name: orderBy
      schema:
        default: created_date_time
        type: string
    - description: the sort order
      in: query
      name: direction
      schema:
        default: DESC
        type: string
    - description: the value should be in [active, trial, inactive, deleted]
      in: query
      name: status
      schema:
        type: string
    - description: Name of user
      in: query
      name: name
      schema:
        type: string
    - description: userName of user
      in: query
      name: userName
      schema:
        type: string
    - description: email of user
      in: query
      name: email
      schema:
        type: string
    - description: Filters by role
      in: query
      name: roleIDs
      schema:
        format: uuid
        type: string
    - description: Filters by internal organization ID
      in: query
      name: organizationIDs
      schema:
        format: uuid
        type: string
    - description: A user can access to all organization or not.
      in: query
      name: accessAllOrganization
      schema:
        type: boolean
    - in: query
      name: isSuperAdmin
      schema:
        type: boolean
  /admin/users/create:
    parameters:
    - $ref: '#/components/parameters/CorrelationID'
    post:
      operationId: create_user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminUserCreateRequest'
        description: The input for createUser
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminUserCreateResponse'
          description: Successful operation
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: This creates a new user
      tags:
      - admin
  /admin/users/login:
    parameters:
    - $ref: '#/components/parameters/CorrelationID'
    post:
      operationId: login_user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminUserLoginRequest'
        description: This logs in the user
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminUserLoginResponse'
          description: Successful operation
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: This logs a user in if successful
      tags:
      - admin
  /admin/users/oauth2_login:
    parameters:
    - $ref: '#/components/parameters/CorrelationID'
    post:
      operationId: oauth_login_user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminUserOAuth2LoginRequest'
        description: This logs in the user with the OAuth2 response
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminUserLoginResponse'
          description: Successful operation
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: This logs a user in if successful with OAuth2
      tags:
      - admin
  /admin/users/password/forgot:
    parameters:
    - $ref: '#/components/parameters/CorrelationID'
    post:
      operationId: user_password_forgot
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminUserPasswordForgotRequest'
        description: Needs to provide the info to reset user's password when they
          forgot
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminUserPasswordForgotResponse'
          description: Successful operation
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: This api will help users to reset their password when they forgot
      tags:
      - admin
  /admin/users/password/reset:
    parameters:
    - $ref: '#/components/parameters/CorrelationID'
    post:
      operationId: user_password_reset
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminUserPasswordResetRequest'
        description: Needs to provide the info to reset password
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminUserPasswordResetResponse'
          description: Successful operation
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: Helps users to reset their password
      tags:
      - admin
  /admin/users/password/update:
    parameters:
    - $ref: '#/components/parameters/CorrelationID'
    post:
      operationId: user_password_update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminUserPasswordUpdateRequest'
        description: Users provide the password info to change
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminUserPasswordUpdateResponse'
          description: Successful operation
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: This api will help users to update their password
      tags:
      - admin
  /admin/users/permission/create:
    parameters:
    - $ref: '#/components/parameters/CorrelationID'
    post:
      operationId: create_permission
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminPermissionCreateRequest'
        description: The input for createPermission
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminPermissionCreateResponse'
          description: Successful operation
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: This creates a new permission
      tags:
      - admin
  /admin/users/permission/{PermissionID}/detail:
    get:
      operationId: getAdminPermissionDetail
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminPermissionDetailResponse'
          description: Successful operation
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: This gets permission detail by ID
      tags:
      - admin
    parameters:
    - $ref: '#/components/parameters/CorrelationID'
    - $ref: '#/components/parameters/PermissionID'
  /admin/users/permission/{PermissionID}/update:
    parameters:
    - $ref: '#/components/parameters/CorrelationID'
    - $ref: '#/components/parameters/PermissionID'
    post:
      operationId: update_permission
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminPermissionUpdateRequest'
        description: The input for updatePermission
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminPermissionUpdateResponse'
          description: Successful operation
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: This updates a permission
      tags:
      - admin
  /admin/users/permissions:
    get:
      operationId: getAdminUsersPermission
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminUsersPermissionsGetResponse'
          description: Successful operation
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: This provides a list of all user permissions in the system
      tags:
      - admin
    parameters:
    - $ref: '#/components/parameters/CorrelationID'
  /admin/users/register:
    parameters:
    - $ref: '#/components/parameters/CorrelationID'
    post:
      operationId: register_user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminUserRegisterRequest'
        description: The input for registerUser
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminUserRegisterResponse'
          description: Successful operation
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: This registers a new user
      tags:
      - admin
  /admin/users/role/create:
    parameters:
    - $ref: '#/components/parameters/CorrelationID'
    post:
      operationId: create_role
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminRoleCreateRequest'
        description: The input for createRole
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminRoleCreateResponse'
          description: Successful operation
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: This creates a new role
      tags:
      - admin
  /admin/users/role/{RoleID}/delete:
    parameters:
    - $ref: '#/components/parameters/RoleID'
    - $ref: '#/components/parameters/CorrelationID'
    post:
      operationId: delete_role
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminRoleDeleteResponse'
          description: Successful operation
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: This deletes a role
      tags:
      - admin
  /admin/users/role/{RoleID}/detail:
    get:
      operationId: getAdminRoleDetail
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminRoleDetailResponse'
          description: Successful operation
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: This gets role detail by ID
      tags:
      - admin
    parameters:
    - $ref: '#/components/parameters/CorrelationID'
    - $ref: '#/components/parameters/RoleID'
  /admin/users/role/{RoleID}/update:
    parameters:
    - $ref: '#/components/parameters/CorrelationID'
    - $ref: '#/components/parameters/RoleID'
    post:
      operationId: update_role
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminRoleUpdateRequest'
        description: The input for updateRole
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminRoleUpdateResponse'
          description: Successful operation
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: This updates a role
      tags:
      - admin
  /admin/users/roles:
    get:
      operationId: getAdminUsersRoles
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminUsersRolesGetResponse'
          description: Successful operation
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: This provides a list of user role in the system
      tags:
      - admin
    parameters:
    - $ref: '#/components/parameters/CorrelationID'
    - $ref: '#/components/parameters/Offset_Query_Optional'
    - $ref: '#/components/parameters/Limit_Query_Optional'
    - description: Filter by role ID
      in: query
      name: roleID
      schema:
        format: uuid
        type: string
    - description: Filter by roleName
      in: query
      name: roleName
      schema:
        type: string
    - description: The value should be in [roleName, createdTime]
      in: query
      name: orderBy
      schema:
        type: string
  /engine/build/{BuildID}/state:
    parameters:
    - $ref: '#/components/parameters/BuildID'
    - $ref: '#/components/parameters/CorrelationID'
    post:
      operationId: update_engine_build_state
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateEngineBuildStateRequest'
        description: Engine Build State
        required: true
      responses:
        201:
          content: {}
          description: Item created
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: Update the Engine Build State
      tags:
      - engine
  /engine/builds:
    get:
      operationId: get_engine_builds_by_state
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetEngineBuildByStateResponse'
          description: Valid status request
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: The api returns engine build records by build state
      tags:
      - engine
    parameters:
    - $ref: '#/components/parameters/CorrelationID'
    - description: Filter data by build state
      in: query
      name: state
      schema:
        type: string
  /engine/container_count:
    get:
      operationId: get_engine_container_count
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetEngineContainerCountResponse'
          description: Successful operation
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: Get engine container count
      tags:
      - engine
    parameters:
    - $ref: '#/components/parameters/Interval_Query_Optional'
    - $ref: '#/components/parameters/StartTime'
    - $ref: '#/components/parameters/EndTime'
    - description: Group data by engineID or instance
      in: query
      name: groupBy
      schema:
        $ref: '#/components/schemas/EngineContainerGroupByEnum'
    - description: Filter data by engineID
      in: query
      name: engineID
      schema:
        format: uuid
        type: string
    - description: Filter data by hostID
      in: query
      name: hostID
      schema:
        format: uuid
        type: string
  /engine/instance/register:
    parameters:
    - $ref: '#/components/parameters/CorrelationID'
    post:
      operationId: registerEngineInstanceNoAuth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EngineInstanceInfo'
        description: Engine Instance Info
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EngineInstanceRegistrationInfo'
          description: Successful registration of Engine Instance
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      summary: Register a new engine instance without authorization
      tags:
      - engine
  /engine/instance/{EngineInstanceID}/detail:
    get:
      operationId: get_engine_instance_detail
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EngineInstanceInfo'
          description: Successful operation
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: Get information about an engine Instance
      tags:
      - engine
    parameters:
    - $ref: '#/components/parameters/EngineInstanceID'
    - $ref: '#/components/parameters/CorrelationID'
  /engine/instance/{EngineInstanceID}/getwork:
    parameters:
    - $ref: '#/components/parameters/EngineInstanceID'
    - $ref: '#/components/parameters/CorrelationID'
    post:
      operationId: getEngineInstanceWork
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EngineInstanceWorkRequest'
        description: Engine Instance Info
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EngineInstanceWorkRequestResponse'
          description: Valid work response
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: Get a work request
      tags:
      - engine
  /engine/instance/{EngineInstanceID}/logs:
    get:
      operationId: getEngineInstanceLogs
      responses:
        200:
          content:
            application/zip:
              schema:
                format: binary
                type: string
          description: Successful operation
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: Get engine instance logs as a zip file
      tags:
      - engine
    parameters:
    - $ref: '#/components/parameters/EngineInstanceID'
    - $ref: '#/components/parameters/CorrelationID'
  /engine/instance/{EngineInstanceID}/resources:
    get:
      operationId: get_resources_for_engine_instance
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetResourcesForEngineInstanceResponse'
          description: Valid work response
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: Get resources for engine instance
      tags:
      - engine
    parameters:
    - $ref: '#/components/parameters/EngineInstanceID'
    - $ref: '#/components/parameters/CorrelationID'
  /engine/instance/{EngineInstanceID}/status:
    get:
      operationId: get_engine_instance_status
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EngineInstanceStatus'
          description: Successful operation
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: Get the latest status of the engine instance
      tags:
      - engine
    parameters:
    - $ref: '#/components/parameters/EngineInstanceID'
    - $ref: '#/components/parameters/CorrelationID'
  /engine/instance/{EngineInstanceID}/terminate:
    parameters:
    - $ref: '#/components/parameters/EngineInstanceID'
    - $ref: '#/components/parameters/CorrelationID'
    post:
      operationId: terminate_engine_instance
      responses:
        204:
          content: {}
          description: Successful operation
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: Delete the engine instance record
      tags:
      - engine
  /engine/instance/{EngineInstanceID}/updatestatus:
    parameters:
    - $ref: '#/components/parameters/EngineInstanceID'
    - $ref: '#/components/parameters/CorrelationID'
    post:
      operationId: update_engine_instance_status
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EngineInstanceStatus'
        description: Engine Instance Status
        required: true
      responses:
        201:
          content: {}
          description: Item created
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: Update the Engine Instance Status.  Heartbeat to communicate back to
        controller both aggregated work and delta work from last heartbeat
      tags:
      - engine
  /engine/instance/{EngineInstanceID}/workdetail:
    get:
      operationId: get_engine_instance_work_detail
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EngineInstanceWorkDetailsResponse'
          description: Successful operation
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: Get detail of the work being done by the engine instance
      tags:
      - engine
    parameters:
    - $ref: '#/components/parameters/EngineInstanceID'
    - $ref: '#/components/parameters/CorrelationID'
  /engine/instances:
    get:
      operationId: get_engine_instance_list
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetEngineInstanceListResponse'
          description: Successful operation
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: Get engines instances with filtering
      tags:
      - engine
    parameters:
    - $ref: '#/components/parameters/CorrelationID'
    - $ref: '#/components/parameters/EngineInstance_IDs_Query_Optional'
    - $ref: '#/components/parameters/Engine_IDs_Query_Optional'
    - $ref: '#/components/parameters/HostIDs_Query_Optional'
    - $ref: '#/components/parameters/WorkRequestIDs_Query_Optional'
    - $ref: '#/components/parameters/Status_Query_Optional'
    - $ref: '#/components/parameters/Drain_Query_Optional'
    - $ref: '#/components/parameters/LaunchStartTime_Query_Optional'
    - $ref: '#/components/parameters/LaunchEndTime_Query_Optional'
    - $ref: '#/components/parameters/ModifiedBefore_Query_Optional'
    - $ref: '#/components/parameters/ModifiedAfter_Query_Optional'
    - $ref: '#/components/parameters/CreatedBefore_Query_Optional'
    - $ref: '#/components/parameters/CreatedAfter_Query_Optional'
    - $ref: '#/components/parameters/Offset_Query_Optional'
    - $ref: '#/components/parameters/Limit_Query_Optional'
    - $ref: '#/components/parameters/Direction_Query_Optional'
    - description: It should be in [engineID, hostID, status, createdTime, modifiedTime,
        lastUpdateTime, launchTime]
      in: query
      name: orderBy
      schema:
        type: string
  /engine/memory_usage:
    get:
      operationId: get_host_memory_usage
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetHostMemoryUsageResponse'
          description: Successful operation
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: Get host memory usage
      tags:
      - host
    parameters:
    - $ref: '#/components/parameters/Interval_Query_Optional'
    - $ref: '#/components/parameters/StartTime'
    - $ref: '#/components/parameters/EndTime'
    - $ref: '#/components/parameters/HostType_Query_Optional'
    - description: Filter data by hostID
      in: query
      name: hostID
      schema:
        format: uuid
        type: string
  /engine/{EngineID}/build/{BuildID}/delete:
    parameters:
    - $ref: '#/components/parameters/CorrelationID'
    - $ref: '#/components/parameters/EngineID_Path_Required'
    - $ref: '#/components/parameters/BuildID_Path_Required'
    post:
      operationId: delete_build_post
      responses:
        204:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminOperationResponse'
          description: Delete a particular engine
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: This API provides the engine detail result
      tags:
      - engine
  /engine/{EngineID}/instances:
    get:
      operationId: get_engine_instances
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetEngineInstancesResponse'
          description: Successful operation
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: Get information about the instances of an engine
      tags:
      - engine
    parameters:
    - $ref: '#/components/parameters/EngineID'
    - $ref: '#/components/parameters/CorrelationID'
    - $ref: '#/components/parameters/LaunchStartTime_Query_Optional'
    - $ref: '#/components/parameters/LaunchEndTime_Query_Optional'
    - $ref: '#/components/parameters/ModifiedBefore_Query_Optional'
    - $ref: '#/components/parameters/ModifiedAfter_Query_Optional'
    - $ref: '#/components/parameters/CreatedBefore_Query_Optional'
    - $ref: '#/components/parameters/CreatedAfter_Query_Optional'
  /engine/{EngineID}/launch/{LaunchID}/detail:
    get:
      operationId: get_engine_launch_detail
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetEngineLaunchResponse'
          description: Returns detail on a specific launch
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: This API returns the list of launches for this engine
      tags:
      - engine
    parameters:
    - $ref: '#/components/parameters/EngineID_Path_Required'
    - $ref: '#/components/parameters/LaunchID_Path_Required'
    - $ref: '#/components/parameters/CreatedBefore_Query_Optional'
    - $ref: '#/components/parameters/CreatedAfter_Query_Optional'
    - $ref: '#/components/parameters/Offset_Query_Optional'
    - $ref: '#/components/parameters/Limit_Query_Optional'
    - $ref: '#/components/parameters/Orderby_Query_Optional'
    - $ref: '#/components/parameters/Direction_Query_Optional'
  /engine/{EngineID}/launches:
    get:
      operationId: get_engine_launches
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetEngineLaunchResponse'
          description: List of launches for specified engine
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: This API returns the list of launches for this engine
      tags:
      - engine
    parameters:
    - $ref: '#/components/parameters/EngineID_Path_Required'
    - $ref: '#/components/parameters/LaunchStatus_Query_Optional'
    - $ref: '#/components/parameters/LaunchAction_Query_Optional'
    - $ref: '#/components/parameters/CreatedBefore_Query_Optional'
    - $ref: '#/components/parameters/CreatedAfter_Query_Optional'
    - $ref: '#/components/parameters/Offset_Query_Optional'
    - $ref: '#/components/parameters/Limit_Query_Optional'
    - $ref: '#/components/parameters/Orderby_Query_Optional'
    - $ref: '#/components/parameters/Direction_Query_Optional'
  /flow/delete/{ContainerID}:
    parameters:
    - $ref: '#/components/parameters/ContainerID'
    post:
      operationId: delete_automate_container
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminOperationResponse'
          description: Successful operation
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: Delete automate container.
      tags:
      - flow
  /flow/nrcontainer/create:
    parameters:
    - $ref: '#/components/parameters/CorrelationID'
    post:
      operationId: create_node_red_container_info
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateNodRedContainerDetail'
        description: Node-RED container info
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminOperationResponse'
          description: Successful operation
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      summary: Create node-red container infomation
      tags:
      - flow
  /flow/request/update:
    parameters:
    - $ref: '#/components/parameters/CorrelationID'
    post:
      operationId: update_automate_request_status
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateNodeRedRequestDetail'
        description: Node-RED container info
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminOperationResponse'
          description: Successful operation
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: Put this automate request into update status mode. This automate request
        will be updated to new status.
      tags:
      - flow
  /flow/{HostID}/updatestatus:
    parameters:
    - $ref: '#/components/parameters/HostID'
    post:
      operationId: update_automate_status
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostAction'
          description: Valid status request
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: Get updated information to launch node-red container, terminate node-red
        container.
      tags:
      - flow
  /flowaction/requests/clean:
    get:
      operationId: clean_automate_requests
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminOperationResponse'
          description: Successful operation
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: Clean old automate requests.
      tags:
      - flow
  /host/alert:
    parameters:
    - $ref: '#/components/parameters/CorrelationID'
    post:
      operationId: host_alert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HostAlertRequest'
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminOperationResponse'
          description: Successful operation
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: Notifies the controller about a system alert.
      tags:
      - host
  /host/launch:
    post:
      operationId: launch_host
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LaunchHostRequest'
        description: The Request to Launch a Host
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminOperationResponse'
          description: Successful operation
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: Launch a new host with a particular server type
      tags:
      - host
  /host/register:
    parameters:
    - $ref: '#/components/parameters/CorrelationID'
    post:
      operationId: registerHost
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HostRegisterRequest'
        description: Engine Instance Info
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostRegisterResponse'
          description: Valid status request
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      summary: Update the Host Status
      tags:
      - host
  /host/{HostID}/detail:
    get:
      operationId: get_host_detail
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostDetail'
          description: Successful operation
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: Get the latest info of the host
      tags:
      - host
    parameters:
    - $ref: '#/components/parameters/HostID'
    - $ref: '#/components/parameters/CorrelationID'
  /host/{HostID}/drain:
    parameters:
    - $ref: '#/components/parameters/HostID'
    - $ref: '#/components/parameters/CorrelationID'
    post:
      operationId: drain_host
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DrainHostRequest'
        description: The Request to Drain a Host
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminOperationResponse'
          description: Successful operation
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: Put this host into drain mode.  A host in drain mode will not have
        work assigned to engines on the host.
      tags:
      - host
  /host/{HostID}/engine/register:
    parameters:
    - $ref: '#/components/parameters/CorrelationID'
    - $ref: '#/components/parameters/HostID'
    post:
      operationId: registerEngineInstance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EngineInstanceInfo'
        description: Engine Instance Info
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EngineInstanceRegistrationInfo'
          description: Successful registration of Engine Instance
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      summary: Register a new engine instance
      tags:
      - host
  /host/{HostID}/launch:
    get:
      operationId: get_hosts_launch
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetHostLaunchResponse'
          description: Successful operation
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: This provides a list of host launches in the system
      tags:
      - host
    parameters:
    - $ref: '#/components/parameters/HostID'
    - $ref: '#/components/parameters/CorrelationID'
  /host/{HostID}/pause:
    parameters:
    - $ref: '#/components/parameters/HostID'
    - $ref: '#/components/parameters/CorrelationID'
    post:
      operationId: pause_host
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminOperationResponse'
          description: Successful operation
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: Pause all engines on this host.
      tags:
      - host
  /host/{HostID}/resume:
    parameters:
    - $ref: '#/components/parameters/HostID'
    - $ref: '#/components/parameters/CorrelationID'
    post:
      operationId: resume_host
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminOperationResponse'
          description: Successful operation
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: Resume all engines on this host.
      tags:
      - host
  /host/{HostID}/status:
    get:
      operationId: get_host_status
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostStatus'
          description: Successful operation
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      summary: Get the latest status of the host
      tags:
      - host
    parameters:
    - $ref: '#/components/parameters/HostID'
    - $ref: '#/components/parameters/CorrelationID'
  /host/{HostID}/terminate:
    parameters:
    - $ref: '#/components/parameters/HostID'
    - $ref: '#/components/parameters/CorrelationID'
    post:
      operationId: terminateHost
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TerminateHostRequest'
        description: The request to terminate the host
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminOperationResponse'
          description: Successful operation
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: Delete the host/agent record.  Any work still running on this host
        will be restarted on other hosts.
      tags:
      - host
  /host/{HostID}/updatestatus:
    parameters:
    - $ref: '#/components/parameters/HostID'
    - $ref: '#/components/parameters/CorrelationID'
    post:
      operationId: update_host_status
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HostStatus'
        description: Host Status
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostAction'
          description: Valid status request
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: Update the Host Status
      tags:
      - host
  /hosts:
    get:
      operationId: get_hosts
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminHostsGetResponse'
          description: Successful operation
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: This provides a list of hosts in the system
      tags:
      - host
    parameters:
    - $ref: '#/components/parameters/CorrelationID'
    - $ref: '#/components/parameters/Offset_Query_Optional'
    - $ref: '#/components/parameters/Limit_Query_Optional'
    - $ref: '#/components/parameters/Direction_Query_Optional'
    - $ref: '#/components/parameters/HostIsActive_Query_Optional'
    - $ref: '#/components/parameters/HostType_Query_Optional'
    - $ref: '#/components/parameters/HostServerType_Query_Optional'
    - $ref: '#/components/parameters/StartCreatedTime'
    - $ref: '#/components/parameters/EndCreatedTime'
    - $ref: '#/components/parameters/StartLastUpdateTime'
    - $ref: '#/components/parameters/EndLastUpdateTime'
    - $ref: '#/components/parameters/StartTerminatedTime'
    - $ref: '#/components/parameters/EndTerminatedTime'
    - $ref: '#/components/parameters/StartExpireTime'
    - $ref: '#/components/parameters/EndExpireTime'
    - description: It should be in [createdTime, terminatedTime, expireTime]
      in: query
      name: orderBy
      schema:
        type: string
    - description: Filter by drain
      in: query
      name: drain
      schema:
        type: boolean
    - description: Filter by serverTypeID
      in: query
      name: serverTypeID
      schema:
        format: uuid
        type: string
    - description: Filter by IP
      in: query
      name: ip
      schema:
        type: string
  /hosts/counts:
    get:
      operationId: get_hosts_counts
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostsCountsResponse'
          description: Successful operation
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      summary: Get the server counts in a time-range
      tags:
      - host
    parameters:
    - $ref: '#/components/parameters/CorrelationID'
    - $ref: '#/components/parameters/StartLastUpdateTime'
    - $ref: '#/components/parameters/EndLastUpdateTime'
  /hosts/counts_by_type:
    get:
      operationId: get_hosts_counts_by_type
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostsCountsByTypeResponse'
          description: Successful operation
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      summary: Get the server counts in a time-range
      tags:
      - host
    parameters:
    - $ref: '#/components/parameters/CorrelationID'
    - $ref: '#/components/parameters/StartLastUpdateTime'
    - $ref: '#/components/parameters/EndLastUpdateTime'
    - $ref: '#/components/parameters/ChartType'
    - $ref: '#/components/parameters/HostType_Query_Optional'
  /hosts/cpu_usage:
    get:
      operationId: get_host_cpu_usage
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetHostCPUUsageResponse'
          description: Successful operation
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: Get host cpu usage
      tags:
      - host
    parameters:
    - $ref: '#/components/parameters/Interval_Query_Optional'
    - $ref: '#/components/parameters/StartTime'
    - $ref: '#/components/parameters/EndTime'
    - $ref: '#/components/parameters/HostType_Query_Optional'
    - description: Filter data by hostID
      in: query
      name: hostID
      schema:
        format: uuid
        type: string
  /proc/endpoint/{Endpoint}:
    parameters:
    - $ref: '#/components/parameters/CorrelationID'
    - $ref: '#/components/parameters/HTTPPushEndpoint_required'
    post:
      operationId: pushContentToEndpoint
      requestBody:
        content:
          application/json:
            schema:
              type: string
          application/octet-stream:
            schema:
              format: binary
              type: string
          audio/*:
            schema:
              format: binary
              type: string
          image/*:
            schema:
              format: binary
              type: string
          text/html:
            schema:
              type: string
          text/plain:
            schema:
              type: string
          text/xml:
            schema:
              type: string
          video/*:
            schema:
              format: binary
              type: string
        description: How to push content into a child input folder(s).
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateJobResponse'
          description: Valid status request
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: Whatever is posted to this endpoint will be added to the child input
        folder(s) for the task_routes that have this endpoint.  If more than one task_routes
        have this endpoint, it will be added to all child input folders.
      tags:
      - process
  /proc/job/create:
    parameters:
    - $ref: '#/components/parameters/CorrelationID'
    post:
      operationId: createJob
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateJobRequest'
        description: Create Job API
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateJobResponse'
          description: Valid status request
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: This creates a new Job
      tags:
      - process
  /proc/job/{JobID}/addtask:
    parameters:
    - $ref: '#/components/parameters/JobID'
    - $ref: '#/components/parameters/CorrelationID'
    post:
      operationId: addTask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddTaskRequest'
        description: Create Job API
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddTaskResponse'
          description: Valid status request
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: Adds a Task to a current job
      tags:
      - process
  /proc/job/{JobID}/addtaskroute:
    parameters:
    - $ref: '#/components/parameters/JobID'
    - $ref: '#/components/parameters/CorrelationID'
    post:
      operationId: addTaskRoute
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddTaskRouteRequest'
        description: Adds a Task Route
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddTaskRouteResponse'
          description: Valid status request
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: Adds a Task Route to a current job
      tags:
      - process
  /proc/job/{JobID}/delete:
    parameters:
    - $ref: '#/components/parameters/CorrelationID'
    - $ref: '#/components/parameters/JobID'
    post:
      operationId: deleteJob
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteJobRequest'
        description: Request information to delete the specified job
      responses:
        204:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminOperationResponse'
          description: Delete a particular job
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: This API deletes the specified job
      tags:
      - process
  /proc/job/{JobID}/detail:
    get:
      operationId: get_job_detail
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetJobDetailResponse'
          description: Valid status request
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: Gets Job Detail
      tags:
      - process
    parameters:
    - $ref: '#/components/parameters/JobID'
    - $ref: '#/components/parameters/CorrelationID'
  /proc/job/{JobID}/download/{JobOutputName}:
    get:
      operationId: get_job_download
      responses:
        200:
          content:
            application/json:
              schema:
                description: The content of the output.
                items:
                  format: byte
                  type: string
                type: array
          description: Valid status request
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: Returns the contents of the job's output
      tags:
      - process
    parameters:
    - $ref: '#/components/parameters/JobID'
    - $ref: '#/components/parameters/JobOutputName'
    - $ref: '#/components/parameters/CorrelationID'
  /proc/job/{JobID}/output/{JobOutputName}:
    get:
      operationId: get_job_output
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetJobOutputResponse'
          description: Valid status request
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: Returns the contents of the job's output
      tags:
      - process
    parameters:
    - $ref: '#/components/parameters/JobID'
    - $ref: '#/components/parameters/JobOutputName'
    - $ref: '#/components/parameters/CorrelationID'
  /proc/job/{JobID}/outputs:
    get:
      operationId: get_job_outputs
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetJobOutputsResponse'
          description: Valid status request
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: Returns a list of output information about this job
      tags:
      - process
    parameters:
    - $ref: '#/components/parameters/JobID'
    - $ref: '#/components/parameters/CorrelationID'
  /proc/job/{JobID}/performance:
    get:
      operationId: get_job_performance
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetJobPerformanceResponse'
          description: Valid status request
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: This gets cpu/gpu, memory state of the hosts grouped by time ranges
        and sorted by a range start time
      tags:
      - process
    parameters:
    - $ref: '#/components/parameters/CorrelationID'
    - $ref: '#/components/parameters/JobID'
    - description: Interval in seconds for output time ranges
      in: query
      name: interval
      schema:
        format: int64
        type: integer
    - description: Filter data by taskID
      in: query
      name: taskID
      schema:
        format: uuid
        type: string
    - description: Filter data by workRequestID
      in: query
      name: workRequestID
      schema:
        format: uuid
        type: string
  /proc/job/{JobID}/recheck_status:
    get:
      operationId: recheckJobStatus
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecheckJobStatusResponse'
          description: Valid status request
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: Recheck Job Status
      tags:
      - process
    parameters:
    - $ref: '#/components/parameters/JobID'
    - $ref: '#/components/parameters/CorrelationID'
  /proc/job/{JobID}/status:
    get:
      operationId: getJobStatus
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetJobStatusResponse'
          description: Valid status request
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: Gets Job Status
      tags:
      - process
    parameters:
    - $ref: '#/components/parameters/JobID'
    - $ref: '#/components/parameters/CorrelationID'
  /proc/job/{JobID}/workrequests:
    get:
      operationId: getJobWorkRequests
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetJobWorkRequestResponse'
          description: Successful operation
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: This provides a list of workrequests of a job
      tags:
      - process
    parameters:
    - $ref: '#/components/parameters/JobID'
    - $ref: '#/components/parameters/CorrelationID'
    - description: the number of records to skip before getting the result set
      in: query
      name: offset
      schema:
        type: integer
    - description: the number of records to return.
      in: query
      name: limit
      schema:
        default: 100
        type: integer
    - description: the field to sort. It should be in [createdDateTime, modifiedDateTime]
      in: query
      name: orderBy
      schema:
        default: createdDateTime
        type: string
    - description: the sort order
      in: query
      name: direction
      schema:
        default: DESC
        type: string
    - description: the value should be in [active, trial, inactive, deleted]
      in: query
      name: status
      schema:
        type: string
    - description: This is an internal task ID to get work request
      in: query
      name: taskID
      schema:
        type: string
  /proc/jobs:
    get:
      operationId: get_jobs
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetJobListResponse'
          description: Valid status request
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: This gets a list of jobs
      tags:
      - process
    parameters:
    - $ref: '#/components/parameters/CorrelationID'
    - $ref: '#/components/parameters/StartTime'
    - $ref: '#/components/parameters/EndTime'
    - $ref: '#/components/parameters/JobStatus'
    - $ref: '#/components/parameters/Offset_Query_Optional'
    - $ref: '#/components/parameters/Limit_Query_Optional'
    - $ref: '#/components/parameters/Orderby_Query_Optional'
    - $ref: '#/components/parameters/Direction_Query_Optional'
    - description: Filter by coreID
      in: query
      name: coreID
      schema:
        format: uuid
        type: string
    - description: Filter by organizationID
      in: query
      name: organizationID
      schema:
        format: uuid
        type: string
    - description: Filter by recordingID
      in: query
      name: recordingID
      schema:
        format: uuid
        type: string
    - description: Filter by jobID
      in: query
      name: jobID
      schema:
        format: uuid
        type: string
    - description: Filter by coreJobID
      in: query
      name: coreJobID
      schema:
        type: string
    - $ref: '#/components/parameters/ModifiedBefore_Query_Optional'
    - $ref: '#/components/parameters/ModifiedAfter_Query_Optional'
    - $ref: '#/components/parameters/CreatedBefore_Query_Optional'
    - $ref: '#/components/parameters/CreatedAfter_Query_Optional'
  /proc/jobs/backlog_count_by_engine:
    parameters:
    - $ref: '#/components/parameters/Interval_Query_Optional'
    - $ref: '#/components/parameters/StartTime'
    - $ref: '#/components/parameters/EndTime'
    - in: query
      name: organizationIDs
      schema:
        type: string
    post:
      operationId: get_jobs_backlog_count_by_engine
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetJobsBacklogCountResponse'
          description: Successful operation
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: Get backlog count by engine
      tags:
      - engine
  /proc/jobs/performance:
    get:
      operationId: get_jobs_performance
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetJobsPerformanceResponse'
          description: Valid status request
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: This gets cpu/gpu, memory state of the hosts grouped by time ranges
        and sorted by a range start time
      tags:
      - process
    parameters:
    - $ref: '#/components/parameters/CorrelationID'
    - $ref: '#/components/parameters/StartTime'
    - $ref: '#/components/parameters/EndTime'
    - description: Interval in seconds for output time ranges
      in: query
      name: interval
      schema:
        format: int64
        type: integer
  /proc/jobs/stats:
    get:
      operationId: get_jobs_stats
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetJobsStatsResponse'
          description: Valid status request
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: This gets processing stats of the jobs
      tags:
      - process
    parameters:
    - $ref: '#/components/parameters/CorrelationID'
    - $ref: '#/components/parameters/StartTime'
    - $ref: '#/components/parameters/EndTime'
    - $ref: '#/components/parameters/JobTaskStatusChartType'
    - $ref: '#/components/parameters/JobStatus'
    - in: query
      name: organizationIDs
      schema:
        type: string
  /proc/jobs/stats/organization:
    get:
      operationId: get_jobs_organization_stats
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetJobsOrganizationStatsResponse'
          description: Valid status request
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: This gets processing stats of the jobs by organization
      tags:
      - process
    parameters:
    - $ref: '#/components/parameters/CorrelationID'
    - $ref: '#/components/parameters/StartTime'
    - $ref: '#/components/parameters/EndTime'
    - in: query
      name: organizationIDs
      schema:
        type: string
  /proc/jobs/stats/time_ranges:
    get:
      operationId: get_jobs_time_ranges_stats
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetJobsTimeRangesStatsResponse'
          description: Valid status request
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: This gets processing stats of the jobs grouped by time ranges and sorted
        by a range start time
      tags:
      - process
    parameters:
    - $ref: '#/components/parameters/CorrelationID'
    - $ref: '#/components/parameters/StartTime'
    - $ref: '#/components/parameters/EndTime'
    - $ref: '#/components/parameters/JobStatus'
    - description: Interval in seconds for output time ranges
      in: query
      name: interval
      schema:
        format: int64
        type: integer
    - in: query
      name: organizationIDs
      schema:
        type: string
    - in: query
      name: engineCategoryID
      schema:
        format: uuid
        type: string
  /proc/scheduled_job/{ScheduledJobID}/detail:
    get:
      operationId: get_scheduled_job_detail
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetScheduledJobDetailResponse'
          description: Valid status request
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: This gets scheduled job detail
      tags:
      - process
    parameters:
    - $ref: '#/components/parameters/CorrelationID'
    - $ref: '#/components/parameters/ScheduledJobID'
  /proc/scheduled_jobs:
    get:
      operationId: get_scheduled_jobs
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetScheduledJobsResponse'
          description: Valid status request
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: This gets a list of scheduled jobs
      tags:
      - process
    parameters:
    - $ref: '#/components/parameters/CorrelationID'
    - $ref: '#/components/parameters/StartTime'
    - $ref: '#/components/parameters/EndTime'
    - $ref: '#/components/parameters/Offset_Query_Optional'
    - $ref: '#/components/parameters/Limit_Query_Optional'
    - $ref: '#/components/parameters/Direction_Query_Optional'
    - description: Filter by internal scheduled Job ID(uuid) or core scheduled Job
        ID (integer)
      in: query
      name: scheduledJobID
      schema:
        type: string
    - description: Filter by internal organization id
      in: query
      name: internalOrganizationID
      schema:
        format: uuid
        type: string
    - description: Filter by coreID
      in: query
      name: coreID
      schema:
        format: uuid
        type: string
    - in: query
      name: startStartTime
      schema:
        format: int64
        type: integer
    - in: query
      name: endStartTime
      schema:
        format: int64
        type: integer
    - in: query
      name: startStopTime
      schema:
        format: int64
        type: integer
    - in: query
      name: endStopTime
      schema:
        format: int64
        type: integer
    - in: query
      name: isActive
      schema:
        type: boolean
    - description: Filter by runMode
      in: query
      name: runMode
      schema:
        $ref: '#/components/schemas/ScheduleRunModeEnum'
    - in: query
      name: sourceID
      schema:
        type: integer
    - in: query
      name: sourceType
      schema:
        type: string
    - description: The value should be in [organizationID, runMode, createdTime, startTime,
        stopTime]
      in: query
      name: orderBy
      schema:
        type: string
    - in: query
      name: scheduledJobName
      schema:
        type: string
  /proc/scheduled_jobs/rate_pending_time_ranges:
    get:
      operationId: get_rate_pending_scheduled_jobs
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRatePendingScheduledJobsResponse'
          description: Valid status request
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: This gets the rate of pending scheduled jobs by time ranges
      tags:
      - process
    parameters:
    - $ref: '#/components/parameters/CorrelationID'
    - $ref: '#/components/parameters/StartTime'
    - $ref: '#/components/parameters/EndTime'
    - description: Interval in seconds for output time ranges
      in: query
      name: interval
      schema:
        format: int64
        type: integer
  /proc/scheduled_jobs/total_pending_time_ranges:
    get:
      operationId: get_total_pending_scheduled_jobs
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTotalPendingScheduledJobsResponse'
          description: Valid status request
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: This gets the total pending scheduled jobs by time ranges
      tags:
      - process
    parameters:
    - $ref: '#/components/parameters/CorrelationID'
    - $ref: '#/components/parameters/StartTime'
    - $ref: '#/components/parameters/EndTime'
    - description: Interval in seconds for output time ranges
      in: query
      name: interval
      schema:
        format: int64
        type: integer
  /proc/task/{TaskID}/delete:
    parameters:
    - $ref: '#/components/parameters/CorrelationID'
    - $ref: '#/components/parameters/TaskID'
    post:
      operationId: deleteTask
      responses:
        204:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminOperationResponse'
          description: Delete a particular task
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: This API deletes the specified task
      tags:
      - process
  /proc/task/{TaskID}/detail:
    get:
      operationId: get_task_detail
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTaskDetailResponse'
          description: Valid status request
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: Gets Task Detail
      tags:
      - process
    parameters:
    - $ref: '#/components/parameters/TaskID'
    - $ref: '#/components/parameters/CorrelationID'
  /proc/task/{TaskID}/download/{TaskOutputName}:
    get:
      operationId: get_task_download
      responses:
        200:
          content:
            application/json:
              schema:
                description: The content of the output.
                items:
                  type: byte
                type: array
          description: Valid status request
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: Returns the contents of the task's output
      tags:
      - process
    parameters:
    - $ref: '#/components/parameters/TaskID'
    - $ref: '#/components/parameters/TaskOutputName'
    - $ref: '#/components/parameters/CorrelationID'
  /proc/task/{TaskID}/logs:
    get:
      operationId: getTaskLogs
      responses:
        200:
          content:
            application/zip:
              schema:
                format: binary
                type: string
          description: Successful operation
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: Gets logs associated with a task
      tags:
      - process
    parameters:
    - $ref: '#/components/parameters/TaskID'
    - $ref: '#/components/parameters/CorrelationID'
  /proc/task/{TaskID}/output/{TaskOutputName}:
    get:
      operationId: get_task_output
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTaskOutputResponse'
          description: Valid status request
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: Returns the contents of the task's output
      tags:
      - process
    parameters:
    - $ref: '#/components/parameters/TaskID'
    - $ref: '#/components/parameters/TaskOutputName'
    - $ref: '#/components/parameters/CorrelationID'
  /proc/task/{TaskID}/outputs:
    get:
      operationId: get_task_outputs
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTaskOutputsResponse'
          description: Valid status request
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: Gets Task Output
      tags:
      - process
    parameters:
    - $ref: '#/components/parameters/TaskID'
    - $ref: '#/components/parameters/CorrelationID'
  /proc/tasks:
    get:
      operationId: get_tasks
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTasksResponse'
          description: Valid status request
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: This gets a list of tasks based on the provided criteria
      tags:
      - process
    parameters:
    - $ref: '#/components/parameters/CorrelationID'
    - $ref: '#/components/parameters/StartTime'
    - $ref: '#/components/parameters/EndTime'
    - $ref: '#/components/parameters/Offset_Query_Optional'
    - $ref: '#/components/parameters/Limit_Query_Optional'
    - $ref: '#/components/parameters/Orderby_Query_Optional'
    - $ref: '#/components/parameters/Direction_Query_Optional'
    - $ref: '#/components/parameters/TaskStatus'
    - description: Filter by organization id
      in: query
      name: organizationID
      schema:
        type: string
    - description: Filter by task id
      in: query
      name: taskID
      schema:
        type: string
    - description: Filter by coreTaskID
      in: query
      name: coreTaskID
      schema:
        type: string
    - description: filter by errorType (failureReason)
      in: query
      name: errorType
      schema:
        $ref: '#/components/schemas/FailureReasonEnum'
    - description: Filter by job id
      in: query
      name: jobID
      schema:
        type: string
    - description: Filter by coreJobID
      in: query
      name: coreJobID
      schema:
        type: string
    - $ref: '#/components/parameters/EngineID_Query_Optional'
    - description: Filter by media source id
      in: query
      name: mediaSourceID
      schema:
        type: string
    - description: Filter tasks by the recording id
      in: query
      name: recordingID
      schema:
        format: int64
        type: integer
    - description: Filtering by engineCategoryID
      in: query
      name: engineCategoryID
      schema:
        format: uuid
        type: string
    - $ref: '#/components/parameters/ModifiedBefore_Query_Optional'
    - $ref: '#/components/parameters/ModifiedAfter_Query_Optional'
    - $ref: '#/components/parameters/CreatedBefore_Query_Optional'
    - $ref: '#/components/parameters/CreatedAfter_Query_Optional'
    - description: Filtering all tasks in backlog
      in: query
      name: backlog
      schema:
        type: boolean
    - description: Filtering all tasks have alloc = true or not
      in: query
      name: alloc
      schema:
        type: boolean
  /proc/tasks/error/count_type_by_engine:
    get:
      operationId: get_tasks_error_type_count_by_engine
      parameters:
      - $ref: '#/components/parameters/CorrelationID'
      - $ref: '#/components/parameters/StartTime'
      - $ref: '#/components/parameters/EndTime'
      - $ref: '#/components/parameters/EngineID_Query_Optional'
      - $ref: '#/components/parameters/TaskStatus'
      - description: filter by errorType (failureReason)
        in: query
        name: errorType
        schema:
          $ref: '#/components/schemas/FailureReasonEnum'
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTasksErrorTypeCountByEngineResponse'
          description: Valid status request
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: This gets error type count by engines
      tags:
      - process
  /proc/tasks/error/engine_error_time_ranges:
    get:
      operationId: get_engine_error_time_ranges
      parameters:
      - $ref: '#/components/parameters/CorrelationID'
      - $ref: '#/components/parameters/StartTime'
      - $ref: '#/components/parameters/EndTime'
      - $ref: '#/components/parameters/EngineErrorChartType'
      - description: Interval in seconds for output time ranges
        in: query
        name: interval
        schema:
          format: int64
          type: integer
      - description: Filtering by engineID
        in: query
        name: engineID
        schema:
          format: uuid
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetEngineErrorTimeRangesResponse'
          description: Valid status request
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: This gets engine error count by error tasks grouped by time ranges
        and sorted by a range start time
      tags:
      - process
  /proc/tasks/error/server_error_counts:
    get:
      operationId: get_server_error_counts
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetServerErrorCountsResponse'
          description: Successful operation
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      summary: Get server error counts in a time-range
      tags:
      - process
    parameters:
    - $ref: '#/components/parameters/CorrelationID'
    - $ref: '#/components/parameters/StartTime'
    - $ref: '#/components/parameters/EndTime'
    - $ref: '#/components/parameters/ServerErrorChartType'
    - description: Filter data by service name.
      in: query
      name: service
      schema:
        type: string
    - description: Interval in seconds for output time ranges
      in: query
      name: interval
      schema:
        format: int64
        type: integer
  /proc/tasks/errors:
    get:
      operationId: getTasksErrors
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTaskErrorsResponse'
          description: Successful operation
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: This provides a error list in a time range
      tags:
      - process
    parameters:
    - $ref: '#/components/parameters/CorrelationID'
    - $ref: '#/components/parameters/StartTime'
    - $ref: '#/components/parameters/EndTime'
    - description: filter by taskID
      in: query
      name: taskID
      schema:
        format: uuid
        type: string
    - description: filter by jobID
      in: query
      name: jobID
      schema:
        format: uuid
        type: string
    - description: filter by errorType (failureReason)
      in: query
      name: errorType
      schema:
        $ref: '#/components/schemas/FailureReasonEnum'
    - description: the number of records to skip before getting the result set
      in: query
      name: offset
      schema:
        type: integer
    - description: the number of records to return.
      in: query
      name: limit
      schema:
        default: 100
        type: integer
    - description: the field to sort. It should be in [createdDateTime, modifiedDateTime]
      in: query
      name: orderBy
      schema:
        default: createdDateTime
        type: string
    - description: the sort order
      in: query
      name: direction
      schema:
        default: DESC
        type: string
  /proc/tasks/instances/by_category_host:
    get:
      operationId: getTasksInstances
      parameters:
      - $ref: '#/components/parameters/CorrelationID'
      - $ref: '#/components/parameters/StartTime'
      - $ref: '#/components/parameters/EndTime'
      - $ref: '#/components/parameters/EngineInstanceStatus'
      - in: query
        name: engineCategoryID
        schema:
          format: uuid
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTasksInstancesResponse'
          description: This provides the output for the tasks instances call.  Rows
            that do not have data will be omitted.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: This gets processing stats of the tasks
      tags:
      - process
  /proc/tasks/stats:
    get:
      operationId: getTasksStats
      parameters:
      - $ref: '#/components/parameters/CorrelationID'
      - $ref: '#/components/parameters/StartTime'
      - $ref: '#/components/parameters/EndTime'
      - $ref: '#/components/parameters/JobTaskStatusChartType'
      - $ref: '#/components/parameters/TaskStatus'
      - in: query
        name: organizationIDs
        schema:
          format: uuid
          type: string
      - in: query
        name: engineIDs
        schema:
          format: uuid
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTasksStatsResponse'
          description: This provides the output for the tasks stats call.  Rows that
            do not have data will be omitted.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: This gets processing stats of the tasks
      tags:
      - process
  /proc/tasks/stats/categories:
    get:
      operationId: get_tasks_stats_categories
      parameters:
      - $ref: '#/components/parameters/CorrelationID'
      - $ref: '#/components/parameters/StartTime'
      - $ref: '#/components/parameters/EndTime'
      - $ref: '#/components/parameters/TaskStatus'
      - in: query
        name: organizationIDs
        schema:
          format: uuid
          type: string
      - in: query
        name: engineCategoryID
        schema:
          format: uuid
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTasksCategoriesStatsResponse'
          description: Valid status request
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: This gets processing stats of the tasks grouped by engine categories
      tags:
      - process
  /proc/tasks/stats/engines:
    get:
      operationId: get_tasks_stats_engines
      parameters:
      - $ref: '#/components/parameters/CorrelationID'
      - $ref: '#/components/parameters/StartTime'
      - $ref: '#/components/parameters/EndTime'
      - $ref: '#/components/parameters/TaskStatus'
      - description: Filter by  organization id
        in: query
        name: organizationID
        schema:
          type: string
      - description: Filter by task id
        in: query
        name: taskID
        schema:
          type: string
      - description: filter by errorType (failureReason)
        in: query
        name: errorType
        schema:
          $ref: '#/components/schemas/FailureReasonEnum'
      - description: Filter by job id
        in: query
        name: jobID
        schema:
          type: string
      - $ref: '#/components/parameters/EngineID_Query_Optional'
      - description: Filter by media source id
        in: query
        name: mediaSourceID
        schema:
          type: string
      - description: Filter tasks by the recording id
        in: query
        name: recordingID
        schema:
          format: int64
          type: integer
      - description: Filtering by engineCategoryID
        in: query
        name: engineCategoryID
        schema:
          format: uuid
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTasksEnginesStatsResponse'
          description: Valid status request
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: This gets processing stats of the tasks grouped by engine
      tags:
      - process
  /proc/tasks/stats/export:
    get:
      operationId: tasks_status_export
      responses:
        200:
          content:
            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
              schema:
                format: binary
                type: string
          description: Successful operation
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: Export a task status report as a excel file
      tags:
      - process
    parameters:
    - $ref: '#/components/parameters/CorrelationID'
    - $ref: '#/components/parameters/StartTime'
    - $ref: '#/components/parameters/EndTime'
    - $ref: '#/components/parameters/Offset_Query_Optional'
    - $ref: '#/components/parameters/Limit_Query_Optional'
    - $ref: '#/components/parameters/Orderby_Query_Optional'
    - $ref: '#/components/parameters/Direction_Query_Optional'
    - $ref: '#/components/parameters/TaskStatus'
    - description: Filter by organization id
      in: query
      name: organizationID
      schema:
        type: string
    - description: Filter by task id
      in: query
      name: taskID
      schema:
        type: string
    - description: Filter by coreTaskID
      in: query
      name: coreTaskID
      schema:
        type: string
    - description: filter by errorType (failureReason)
      in: query
      name: errorType
      schema:
        $ref: '#/components/schemas/FailureReasonEnum'
    - description: Filter by job id
      in: query
      name: jobID
      schema:
        type: string
    - description: Filter by coreJobID
      in: query
      name: coreJobID
      schema:
        type: string
    - $ref: '#/components/parameters/EngineID_Query_Optional'
    - description: Filter by media source id
      in: query
      name: mediaSourceID
      schema:
        type: string
    - description: Filter tasks by the recording id
      in: query
      name: recordingID
      schema:
        format: int64
        type: integer
    - description: Filtering by engineCategoryID
      in: query
      name: engineCategoryID
      schema:
        format: uuid
        type: string
    - $ref: '#/components/parameters/ModifiedBefore_Query_Optional'
    - $ref: '#/components/parameters/ModifiedAfter_Query_Optional'
    - $ref: '#/components/parameters/CreatedBefore_Query_Optional'
    - $ref: '#/components/parameters/CreatedAfter_Query_Optional'
    - description: Filtering all tasks in backlog
      in: query
      name: backlog
      schema:
        type: boolean
    - description: Filtering all tasks have alloc = true or not
      in: query
      name: alloc
      schema:
        type: boolean
  /proc/tasks/stats/organizations:
    get:
      operationId: get_tasks_stats_organizations
      parameters:
      - $ref: '#/components/parameters/CorrelationID'
      - $ref: '#/components/parameters/StartTime'
      - $ref: '#/components/parameters/EndTime'
      - $ref: '#/components/parameters/TaskStatus'
      - description: Filter by organization IDs
        in: query
        name: organizationIDs
        schema:
          format: uuid
          type: string
      - description: Filter by engine ID
        in: query
        name: engineID
        schema:
          format: uuid
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTasksStatsOrganizationsResponse'
          description: Valid status request
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: This gets processing stats of the tasks grouped by engine, filter by
        organizations
      tags:
      - process
  /proc/tasks/stats/time_ranges:
    get:
      operationId: get_tasks_stats_time_ranges
      parameters:
      - $ref: '#/components/parameters/CorrelationID'
      - $ref: '#/components/parameters/StartTime'
      - $ref: '#/components/parameters/EndTime'
      - $ref: '#/components/parameters/TaskStatus'
      - description: Interval in seconds for output time ranges
        in: query
        name: interval
        schema:
          format: int64
          type: integer
      - description: Filtering by engineCategoryID
        in: query
        name: engineCategoryID
        schema:
          format: uuid
          type: string
      - in: query
        name: organizationIDs
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTasksTimeRangesStatsResponse'
          description: Valid status request
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: This gets processing stats of the tasks grouped by time ranges and
        sorted by a range start time
      tags:
      - process
  /proc/tasks/sync_backlog:
    get:
      operationId: get_task_sync_backlog
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTaskSyncBacklogResponse'
          description: Successful operation
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      summary: Gets task sync backlog in a time-range
      tags:
      - process
    parameters:
    - $ref: '#/components/parameters/CorrelationID'
    - $ref: '#/components/parameters/StartTime'
    - $ref: '#/components/parameters/EndTime'
    - description: Interval in seconds for output time ranges
      in: query
      name: interval
      schema:
        format: int64
        type: integer
  /proc/tasks/update_status:
    parameters:
    - $ref: '#/components/parameters/CorrelationID'
    post:
      operationId: update_task_status
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TasksStatusUpdateRequest'
        description: The input for updateTaskStatus
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TasksStatusUpdateResponse'
          description: Successful operation
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: This updates the status for a bulk of tasks by taskID
      tags:
      - process
  /proc/template/{TemplateID}/launch:
    parameters:
    - $ref: '#/components/parameters/CorrelationID'
    - $ref: '#/components/parameters/JobTemplateID'
    post:
      operationId: launch_job_template
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LaunchJobTemplateRequest'
        description: Launch Job Template API
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LaunchJobTemplateResponse'
          description: Valid status request
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: This launch a job based on the given job template
      tags:
      - process
  /proc/workrequest/{WorkRequestID}/detail:
    get:
      operationId: getWorkRequest
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTaskWorkRequestResponse'
          description: Successful operation
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: This provides detail of workrequest
      tags:
      - process
    parameters:
    - $ref: '#/components/parameters/WorkRequestID'
    - $ref: '#/components/parameters/CorrelationID'
  /service/instance/create:
    parameters:
    - $ref: '#/components/parameters/CorrelationID'
    post:
      operationId: createServiceInstance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceInstanceCreateRequest'
        description: The input for createServiceInstance
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceInstanceCreateResponse'
          description: Successful operation
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: This creates a new service instance
      tags:
      - service
  /service/instance/{ServiceInstanceID}/delete:
    parameters:
    - $ref: '#/components/parameters/ServiceInstanceID'
    - $ref: '#/components/parameters/CorrelationID'
    post:
      operationId: deleteServiceInstance
      responses:
        204:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceInstanceDeleteResponse'
          description: Successful operation
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: This deletes a service instance
      tags:
      - service
  /service/instance/{ServiceInstanceID}/resources:
    get:
      operationId: get_resources_for_service_instance
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetResourcesForServiceInstanceResponse'
          description: Valid resources list response
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid argument.  Please see the error response for more information.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not authorized
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request is not allowed.
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        501:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
          headers:
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
        503:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: System Unavailable
          headers:
            Retry-After:
              $ref: '#/components/headers/CorrelationId'
            X-Aiware-Version:
              $ref: '#/components/headers/AiwareVersion'
            X-Correlation-Id:
              $ref: '#/components/headers/CorrelationId'
      security:
      - api_key: []
      summary: Get resources for service instance
      tags:
      - service
    parameters:
    - $ref: '#/components/parameters/ServiceInstanceID'
    - $ref: '#/components/parameters/CorrelationID'
servers:
- url: https://api.aiware.com/edge/v1
tags:
- description: APIs related to Engines
  name: engine
- description: APIs related to Hosts
  name: host
- description: APIs related to the administration of aiWARE Edge
  name: admin
- description: APIs related to Service
  name: service
- description: APIs related to processing and DAGs on aiWARE Edge
  name: process
